{"version":3,"sources":["../node_modules/fable-core/Symbol.js","../node_modules/fable-core/Util.js","../node_modules/fable-powerpack/Result.js","../node_modules/fable-powerpack/Promise.js","../node_modules/fable-core/ListClass.js","../node_modules/fable-core/Seq.js","../node_modules/fable-core/Map.js","../node_modules/fable-core/Set.js","../node_modules/fable-core/Long.js","../node_modules/fable-powerpack/Fetch.js","../node_modules/fable-core/AsyncBuilder.js","../node_modules/fable-core/Async.js","../laab.fsx","../node_modules/justlazy/src/justlazy.js","../node_modules/fable-core/Choice.js"],"names":["setType","fullName","cons","fableGlobal","types","set","GenericParam","definition","NonDeclaredType","getPropertyNames","obj","propertyMap","FSymbol","reflection","properties","Object","getOwnPropertyNames","toString","o","ToString","String","equals","x","y","getPrototypeOf","Equals","Array","isArray","length","i","ArrayBuffer","isView","byteLength","dv1","DataView","buffer","dv2","getUint8","Date","getTime","compare","CompareTo","j","b1","b2","equalsRecords","keys","equalsUnions","Case","Fields","compareUnions","res","_classCallCheck","instance","Constructor","TypeError","map","fn","a","Result","bind","ofArray","args","base","acc","List","compareWith","f","xs","ys","nonZero","tryFind","map2","count","delay","_a","Symbol","iterator","fold","reduce","cur","iter","next","done","value","unfold","iter1","iter2","cur1","cur2","rangeStep","first","step","last","Error","range","defaultValue","tree_sizeAux","m","tree_size","tree_find","comparer","k","tree_tryFind","c","Compare","tree_mem","tree_collapseLHS","stack","tail","head","listOfArray","MapTree","tree_mkIterator","s","started","tree_moveNext","current","tree_countAux","tree_count","tree_SetOne","n","SetTree","tree_SetNode","l","r","h","t","tree_compareStacks","l1","l2","$target8","n1k","t1","$target9","n1l","n1r","$target11","n2k","n2l","n2r","t2","emp","tree_compare","s1","s2","isLong","Long","fromInt","unsigned","cachedObj","cache","UINT_CACHE","fromBits","INT_CACHE","fromNumber","isNaN","isFinite","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","fromString","str","radix","RangeError","p","indexOf","substring","radixToPower","pow_dbl","result","size","Math","min","parseInt","power","mul","add","fromValue","val","low","high","_fetch","url","init","fetch","then","response","ok","status","statusText","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","protectedBind","computation","binder","onSuccess","ex","protectedReturn","emptyContinuation","awaitPromise","fromContinuations","conts","catch","start","cancellationToken","startWithContinuations","startImmediate","continuation","exceptionContinuation","cancellationContinuation","Trampoline","defaultCancellationToken","ready","document","readyState","_arg1","fetchMy","loadme","post","text","_arg2","toload","target","origin","arg00","reparseFun","root","factory","module","exports","Justlazy","this","_createImage","imgPlaceholder","imgAttributes","onloadCallback","onerrorCallback","onreplaceCallback","img","createElement","onload","call","_replacePlaceholderWithImage","onerror","title","srcset","setAttribute","alt","src","parentNode","replaceChild","_resolveImageAttributes","getAttribute","_validateOptions","options","_isVisible","placeholder","optionalThreshold","windowInnerHeight","window","innerHeight","documentElement","clientHeight","threshold","getBoundingClientRect","top","_loadImgIfVisible","scrollEventCallback","e","lazyLoad","removeEventListener","type","detachEvent","validatedOptions","registerLazyLoad","loadImgIfVisible","addEventListener","attachEvent","registerLazyLoadByClass","imgPlaceholderClass","placeholders","querySelectorAll","globalObj","global","self","__FABLE_CORE__","Map","symbols","kind","generics","prototype","other","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","caseName","fields","_Symbol","interfaces","cases","Ok","ResultBuilder","Zero","left","right","Bind","get","_this","Return","_Promise","__exports","arg0","arg0_1","mapResult","a_1","bindResult","Promise","resolve","PromiseBuilder","seq","body","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","_iterator","return","guard","While","compensation","er","generator","f1","f2","reject","er_1","er_2","er_3","resource","TryFinally","Dispose","PromiseImpl","promise","from","join","tmp","Enumerator","MoveNext","Reset","FableMap","m2","seqCompareWith","kvp1","kvp2","tree","entries","seqMap","kv","values","has","v","delete","clear","FableSet","eq","neq","notEquals","lt","lessThan","lte","lessThanOrEqual","gt","greaterThan","gte","greaterThanOrEqual","comp","negate","abs","absolute","sub","subtract","multiply","div","divide","mod","modulo","shl","shiftLeft","shr","shiftRight","shru","shiftRightUnsigned","toInt","toNumber","isZero","isNegative","radixLong","rem1","rem","remDiv","intval","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","isPositive","isOdd","isEven","thisNeg","otherNeg","not","ONE","addend","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","subtrahend","multiplier","TWO_PWR_24","divisor","approx","toUnsigned","UONE","NEG_ONE","halfThis","approx_1","max","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","and","or","xor","numBits","toSigned","toBytes","le","toBytesLE","toBytesBE","hi","lo","pow","TWO_PWR_16_DBL","callCount","maxTrampolineCallCount","setTimeout","AsyncBuilder","Combine","computation1","computation2","Delay","For","sequence","ReturnFrom","TryWith","catchHandler","ex2","Using","Choice","d"],"mappings":"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","file":"js/script.min.js","sourcesContent":["var fableGlobal = function () {\r\n    var globalObj = typeof window !== \"undefined\" ? window\r\n        : (typeof global !== \"undefined\" ? global\r\n            : (typeof self !== \"undefined\" ? self : {}));\r\n    if (typeof globalObj.__FABLE_CORE__ === \"undefined\") {\r\n        globalObj.__FABLE_CORE__ = {\r\n            types: new Map(),\r\n            symbols: {\r\n                reflection: Symbol(\"reflection\"),\r\n            }\r\n        };\r\n    }\r\n    return globalObj.__FABLE_CORE__;\r\n}();\r\nexport function setType(fullName, cons) {\r\n    fableGlobal.types.set(fullName, cons);\r\n}\r\nexport function getType(fullName) {\r\n    return fableGlobal.types.get(fullName);\r\n}\r\nexport default (fableGlobal.symbols);\r\n","import FSymbol from \"./Symbol\";\r\nvar NonDeclaredType = (function () {\r\n    function NonDeclaredType(kind, definition, generics) {\r\n        this.kind = kind;\r\n        this.definition = definition;\r\n        this.generics = generics;\r\n    }\r\n    NonDeclaredType.prototype.Equals = function (other) {\r\n        if (this.kind === other.kind && this.definition === other.definition) {\r\n            return typeof this.generics === \"object\"\r\n                ? equalsRecords(this.generics, other.generics)\r\n                : this.generics === other.generics;\r\n        }\r\n        return false;\r\n    };\r\n    return NonDeclaredType;\r\n}());\r\nexport { NonDeclaredType };\r\nexport var Any = new NonDeclaredType(\"Any\");\r\nexport var Unit = new NonDeclaredType(\"Unit\");\r\nexport function Option(t) {\r\n    return new NonDeclaredType(\"Option\", null, t);\r\n}\r\nfunction FableArray(t, isTypedArray) {\r\n    if (isTypedArray === void 0) { isTypedArray = false; }\r\n    var def = null, genArg = null;\r\n    if (isTypedArray) {\r\n        def = t;\r\n    }\r\n    else {\r\n        genArg = t;\r\n    }\r\n    return new NonDeclaredType(\"Array\", def, genArg);\r\n}\r\nexport { FableArray as Array };\r\nexport function Tuple(ts) {\r\n    return new NonDeclaredType(\"Tuple\", null, ts);\r\n}\r\nexport function GenericParam(definition) {\r\n    return new NonDeclaredType(\"GenericParam\", definition);\r\n}\r\nexport function Interface(definition) {\r\n    return new NonDeclaredType(\"Interface\", definition);\r\n}\r\nexport function makeGeneric(typeDef, genArgs) {\r\n    return new NonDeclaredType(\"GenericType\", typeDef, genArgs);\r\n}\r\nexport function isGeneric(typ) {\r\n    return typ instanceof NonDeclaredType && typ.kind === \"GenericType\";\r\n}\r\nexport function getDefinition(typ) {\r\n    return isGeneric(typ) ? typ.definition : typ;\r\n}\r\nexport function extendInfo(cons, info) {\r\n    var parent = Object.getPrototypeOf(cons.prototype);\r\n    if (typeof parent[FSymbol.reflection] === \"function\") {\r\n        var newInfo_1 = {}, parentInfo_1 = parent[FSymbol.reflection]();\r\n        Object.getOwnPropertyNames(info).forEach(function (k) {\r\n            var i = info[k];\r\n            if (typeof i === \"object\") {\r\n                newInfo_1[k] = Array.isArray(i)\r\n                    ? (parentInfo_1[k] || []).concat(i)\r\n                    : Object.assign(parentInfo_1[k] || {}, i);\r\n            }\r\n            else {\r\n                newInfo_1[k] = i;\r\n            }\r\n        });\r\n        return newInfo_1;\r\n    }\r\n    return info;\r\n}\r\nexport function hasInterface(obj, interfaceName) {\r\n    if (interfaceName === \"System.Collections.Generic.IEnumerable\") {\r\n        return typeof obj[Symbol.iterator] === \"function\";\r\n    }\r\n    else if (typeof obj[FSymbol.reflection] === \"function\") {\r\n        var interfaces = obj[FSymbol.reflection]().interfaces;\r\n        return Array.isArray(interfaces) && interfaces.indexOf(interfaceName) > -1;\r\n    }\r\n    return false;\r\n}\r\nexport function getPropertyNames(obj) {\r\n    if (obj == null) {\r\n        return [];\r\n    }\r\n    var propertyMap = typeof obj[FSymbol.reflection] === \"function\" ? obj[FSymbol.reflection]().properties || [] : obj;\r\n    return Object.getOwnPropertyNames(propertyMap);\r\n}\r\nexport function isArray(obj) {\r\n    return Array.isArray(obj) || ArrayBuffer.isView(obj);\r\n}\r\nexport function getRestParams(args, idx) {\r\n    for (var _len = args.length, restArgs = Array(_len > idx ? _len - idx : 0), _key = idx; _key < _len; _key++)\r\n        restArgs[_key - idx] = args[_key];\r\n    return restArgs;\r\n}\r\nexport function toString(o) {\r\n    return o != null && typeof o.ToString == \"function\" ? o.ToString() : String(o);\r\n}\r\nexport function hash(x) {\r\n    var s = JSON.stringify(x);\r\n    var h = 5381, i = 0, len = s.length;\r\n    while (i < len) {\r\n        h = (h * 33) ^ s.charCodeAt(i++);\r\n    }\r\n    return h;\r\n}\r\nexport function equals(x, y) {\r\n    if (x === y)\r\n        return true;\r\n    else if (x == null)\r\n        return y == null;\r\n    else if (y == null)\r\n        return false;\r\n    else if (Object.getPrototypeOf(x) !== Object.getPrototypeOf(y))\r\n        return false;\r\n    else if (typeof x.Equals === \"function\")\r\n        return x.Equals(y);\r\n    else if (Array.isArray(x)) {\r\n        if (x.length != y.length)\r\n            return false;\r\n        for (var i = 0; i < x.length; i++)\r\n            if (!equals(x[i], y[i]))\r\n                return false;\r\n        return true;\r\n    }\r\n    else if (ArrayBuffer.isView(x)) {\r\n        if (x.byteLength !== y.byteLength)\r\n            return false;\r\n        var dv1 = new DataView(x.buffer), dv2 = new DataView(y.buffer);\r\n        for (var i = 0; i < x.byteLength; i++)\r\n            if (dv1.getUint8(i) !== dv2.getUint8(i))\r\n                return false;\r\n        return true;\r\n    }\r\n    else if (x instanceof Date)\r\n        return x.getTime() == y.getTime();\r\n    else\r\n        return false;\r\n}\r\nexport function compare(x, y) {\r\n    if (x === y)\r\n        return 0;\r\n    if (x == null)\r\n        return y == null ? 0 : -1;\r\n    else if (y == null)\r\n        return 1;\r\n    else if (Object.getPrototypeOf(x) !== Object.getPrototypeOf(y))\r\n        return -1;\r\n    else if (typeof x.CompareTo === \"function\")\r\n        return x.CompareTo(y);\r\n    else if (Array.isArray(x)) {\r\n        if (x.length != y.length)\r\n            return x.length < y.length ? -1 : 1;\r\n        for (var i = 0, j = 0; i < x.length; i++)\r\n            if ((j = compare(x[i], y[i])) !== 0)\r\n                return j;\r\n        return 0;\r\n    }\r\n    else if (ArrayBuffer.isView(x)) {\r\n        if (x.byteLength != y.byteLength)\r\n            return x.byteLength < y.byteLength ? -1 : 1;\r\n        var dv1 = new DataView(x.buffer), dv2 = new DataView(y.buffer);\r\n        for (var i = 0, b1 = 0, b2 = 0; i < x.byteLength; i++) {\r\n            b1 = dv1.getUint8(i), b2 = dv2.getUint8(i);\r\n            if (b1 < b2)\r\n                return -1;\r\n            if (b1 > b2)\r\n                return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    else if (x instanceof Date)\r\n        return compare(x.getTime(), y.getTime());\r\n    else\r\n        return x < y ? -1 : 1;\r\n}\r\nexport function equalsRecords(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    else {\r\n        var keys = getPropertyNames(x);\r\n        for (var i = 0; i < keys.length; i++) {\r\n            if (!equals(x[keys[i]], y[keys[i]]))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexport function compareRecords(x, y) {\r\n    if (x === y) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var keys = getPropertyNames(x);\r\n        for (var i = 0; i < keys.length; i++) {\r\n            var res = compare(x[keys[i]], y[keys[i]]);\r\n            if (res !== 0)\r\n                return res;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nexport function equalsUnions(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    else if (x.Case !== y.Case) {\r\n        return false;\r\n    }\r\n    else {\r\n        for (var i = 0; i < x.Fields.length; i++) {\r\n            if (!equals(x.Fields[i], y.Fields[i]))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexport function compareUnions(x, y) {\r\n    if (x === y) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var res = compare(x.Case, y.Case);\r\n        if (res !== 0)\r\n            return res;\r\n        for (var i = 0; i < x.Fields.length; i++) {\r\n            res = compare(x.Fields[i], y.Fields[i]);\r\n            if (res !== 0)\r\n                return res;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nexport function createDisposable(f) {\r\n    return _a = {\r\n            Dispose: f\r\n        },\r\n        _a[FSymbol.reflection] = function () { return { interfaces: [\"System.IDisposable\"] }; },\r\n        _a;\r\n    var _a;\r\n}\r\nexport function createObj(fields) {\r\n    var iter = fields[Symbol.iterator]();\r\n    var cur = iter.next(), o = {};\r\n    while (!cur.done) {\r\n        o[cur.value[0]] = cur.value[1];\r\n        cur = iter.next();\r\n    }\r\n    return o;\r\n}\r\nexport function toPlainJsObj(source) {\r\n    if (source != null && source.constructor != Object) {\r\n        var target = {};\r\n        var props = Object.getOwnPropertyNames(source);\r\n        for (var i = 0; i < props.length; i++) {\r\n            target[props[i]] = source[props[i]];\r\n        }\r\n        var proto = Object.getPrototypeOf(source);\r\n        if (proto != null) {\r\n            props = Object.getOwnPropertyNames(proto);\r\n            for (var i = 0; i < props.length; i++) {\r\n                var prop = Object.getOwnPropertyDescriptor(proto, props[i]);\r\n                if (prop.value) {\r\n                    target[props[i]] = prop.value;\r\n                }\r\n                else if (prop.get) {\r\n                    target[props[i]] = prop.get.apply(source);\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    else {\r\n        return source;\r\n    }\r\n}\r\nexport function round(value, digits) {\r\n    if (digits === void 0) { digits = 0; }\r\n    var m = Math.pow(10, digits);\r\n    var n = +(digits ? value * m : value).toFixed(8);\r\n    var i = Math.floor(n), f = n - i;\r\n    var e = 1e-8;\r\n    var r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 == 0) ? i : i + 1) : Math.round(n);\r\n    return digits ? r / m : r;\r\n}\r\nexport function randomNext(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\nexport function defaultArg(arg, defaultValue, f) {\r\n    return arg == null ? defaultValue : (f != null ? f(arg) : arg);\r\n}\r\n","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { setType } from \"fable-core/Symbol\";\nimport _Symbol from \"fable-core/Symbol\";\nimport { compareUnions, equalsUnions, GenericParam } from \"fable-core/Util\";\nexport var Result = function () {\n    function Result(caseName, fields) {\n        _classCallCheck(this, Result);\n\n        this.Case = caseName;\n        this.Fields = fields;\n    }\n\n    _createClass(Result, [{\n        key: _Symbol.reflection,\n        value: function () {\n            return {\n                type: \"Fable.PowerPack.Result.Result\",\n                interfaces: [\"FSharpUnion\", \"System.IEquatable\", \"System.IComparable\"],\n                cases: {\n                    Error: [GenericParam(\"B\")],\n                    Ok: [GenericParam(\"A\")]\n                }\n            };\n        }\n    }, {\n        key: \"Equals\",\n        value: function (other) {\n            return equalsUnions(this, other);\n        }\n    }, {\n        key: \"CompareTo\",\n        value: function (other) {\n            return compareUnions(this, other);\n        }\n    }]);\n\n    return Result;\n}();\nsetType(\"Fable.PowerPack.Result.Result\", Result);\nexport function unwrapResult(a) {\n    if (a.Case === \"Error\") {\n        throw a.Fields[0];\n    } else {\n        return a.Fields[0];\n    }\n}\nexport function map(fn, a) {\n    if (a.Case === \"Error\") {\n        return new Result(\"Error\", [a.Fields[0]]);\n    } else {\n        return new Result(\"Ok\", [fn(a.Fields[0])]);\n    }\n}\nexport function bind(fn, a) {\n    if (a.Case === \"Error\") {\n        return new Result(\"Error\", [a.Fields[0]]);\n    } else {\n        return fn(a.Fields[0]);\n    }\n}\nexport var ResultBuilder = function () {\n    _createClass(ResultBuilder, [{\n        key: _Symbol.reflection,\n        value: function () {\n            return {\n                type: \"Fable.PowerPack.Result.ResultBuilder\",\n                properties: {\n                    Zero: \"function\"\n                }\n            };\n        }\n    }]);\n\n    function ResultBuilder() {\n        _classCallCheck(this, ResultBuilder);\n    }\n\n    _createClass(ResultBuilder, [{\n        key: \"Bind\",\n        value: function (m, f) {\n            return bind(f, m);\n        }\n    }, {\n        key: \"Return\",\n        value: function (a) {\n            return new Result(\"Ok\", [a]);\n        }\n    }, {\n        key: \"ReturnFrom\",\n        value: function (m) {\n            return m;\n        }\n    }, {\n        key: \"Combine\",\n        value: function (left, right) {\n            return this.Bind(left, function () {\n                return right;\n            });\n        }\n    }, {\n        key: \"Zero\",\n        get: function () {\n            var _this = this;\n\n            return function (arg00) {\n                return _this.Return(arg00);\n            };\n        }\n    }]);\n\n    return ResultBuilder;\n}();\nsetType(\"Fable.PowerPack.Result.ResultBuilder\", ResultBuilder);\nexport var result = new ResultBuilder();\n//# sourceMappingURL=Result.js.map","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { map, Result } from \"./Result\";\nimport { setType } from \"fable-core/Symbol\";\nimport _Symbol from \"fable-core/Symbol\";\n\nvar _Promise = function (__exports) {\n    var result = __exports.result = function (a) {\n        return a.then(function (arg0) {\n            return new Result(\"Ok\", [arg0]);\n        }, function (arg0_1) {\n            return new Result(\"Error\", [arg0_1]);\n        });\n    };\n\n    var mapResult = __exports.mapResult = function (fn, a) {\n        return a.then(function (a_1) {\n            return map(fn, a_1);\n        });\n    };\n\n    var bindResult = __exports.bindResult = function (fn, a) {\n        return a.then(function (a_1) {\n            return a_1.Case === \"Error\" ? Promise.resolve(new Result(\"Error\", [a_1.Fields[0]])) : result(fn(a_1.Fields[0]));\n        });\n    };\n\n    var PromiseBuilder = __exports.PromiseBuilder = function () {\n        _createClass(PromiseBuilder, [{\n            key: _Symbol.reflection,\n            value: function () {\n                return {\n                    type: \"Fable.PowerPack.Promise.PromiseBuilder\",\n                    properties: {}\n                };\n            }\n        }]);\n\n        function PromiseBuilder() {\n            _classCallCheck(this, PromiseBuilder);\n        }\n\n        _createClass(PromiseBuilder, [{\n            key: \"For\",\n            value: function (seq, body) {\n                var p = Promise.resolve(null);\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    var _loop = function _loop() {\n                        var a = _step.value;\n                        p = p.then(function () {\n                            return body(a);\n                        });\n                    };\n\n                    for (var _iterator = seq[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        _loop();\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                return p;\n            }\n        }, {\n            key: \"While\",\n            value: function (guard, p) {\n                var _this = this;\n\n                if (guard(null)) {\n                    return p.then(function () {\n                        return _this.While(guard, p);\n                    });\n                } else {\n                    return Promise.resolve(null);\n                }\n            }\n        }, {\n            key: \"TryFinally\",\n            value: function (p, compensation) {\n                return p.then(function (x) {\n                    compensation(null);\n                    return x;\n                }, function (er) {\n                    compensation(null);\n                    throw er;\n                });\n            }\n        }, {\n            key: \"Delay\",\n            value: function (generator) {\n                return {\n                    then: function then(f1, f2) {\n                        try {\n                            return generator(null).then(f1, f2);\n                        } catch (er) {\n                            if (f2 == null) {\n                                return Promise.reject(er);\n                            } else {\n                                try {\n                                    return Promise.resolve(f2(er));\n                                } catch (er_1) {\n                                    return Promise.reject(er_1);\n                                }\n                            }\n                        }\n                    },\n                    catch: function _catch(f) {\n                        try {\n                            return generator(null).catch(f);\n                        } catch (er_2) {\n                            try {\n                                return Promise.resolve(f(er_2));\n                            } catch (er_3) {\n                                return Promise.reject(er_3);\n                            }\n                        }\n                    }\n                };\n            }\n        }, {\n            key: \"Using\",\n            value: function (resource, binder) {\n                return this.TryFinally(binder(resource), function () {\n                    resource.Dispose();\n                });\n            }\n        }]);\n\n        return PromiseBuilder;\n    }();\n\n    setType(\"Fable.PowerPack.Promise.PromiseBuilder\", PromiseBuilder);\n    return __exports;\n}({});\n\nexport { _Promise as Promise };\nexport var PromiseImpl = function (__exports) {\n    var promise = __exports.promise = new _Promise.PromiseBuilder();\n    return __exports;\n}({});\n//# sourceMappingURL=Promise.js.map","import FSymbol from \"./Symbol\";\r\nimport { toString } from \"./Util\";\r\nimport { equals } from \"./Util\";\r\nimport { compare } from \"./Util\";\r\nexport function ofArray(args, base) {\r\n    var acc = base || new List();\r\n    for (var i = args.length - 1; i >= 0; i--) {\r\n        acc = new List(args[i], acc);\r\n    }\r\n    return acc;\r\n}\r\nvar List = (function () {\r\n    function List(head, tail) {\r\n        this.head = head;\r\n        this.tail = tail;\r\n    }\r\n    List.prototype.ToString = function () {\r\n        return \"[\" + Array.from(this).map(toString).join(\"; \") + \"]\";\r\n    };\r\n    List.prototype.Equals = function (x) {\r\n        if (this === x) {\r\n            return true;\r\n        }\r\n        else {\r\n            var iter1 = this[Symbol.iterator](), iter2 = x[Symbol.iterator]();\r\n            for (;;) {\r\n                var cur1 = iter1.next(), cur2 = iter2.next();\r\n                if (cur1.done)\r\n                    return cur2.done ? true : false;\r\n                else if (cur2.done)\r\n                    return false;\r\n                else if (!equals(cur1.value, cur2.value))\r\n                    return false;\r\n            }\r\n        }\r\n    };\r\n    List.prototype.CompareTo = function (x) {\r\n        if (this === x) {\r\n            return 0;\r\n        }\r\n        else {\r\n            var acc = 0;\r\n            var iter1 = this[Symbol.iterator](), iter2 = x[Symbol.iterator]();\r\n            for (;;) {\r\n                var cur1 = iter1.next(), cur2 = iter2.next();\r\n                if (cur1.done)\r\n                    return cur2.done ? acc : -1;\r\n                else if (cur2.done)\r\n                    return 1;\r\n                else {\r\n                    acc = compare(cur1.value, cur2.value);\r\n                    if (acc != 0)\r\n                        return acc;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(List.prototype, \"length\", {\r\n        get: function () {\r\n            var cur = this, acc = 0;\r\n            while (cur.tail != null) {\r\n                cur = cur.tail;\r\n                acc++;\r\n            }\r\n            return acc;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    List.prototype[Symbol.iterator] = function () {\r\n        var cur = this;\r\n        return {\r\n            next: function () {\r\n                var tmp = cur;\r\n                cur = cur.tail;\r\n                return { done: tmp.tail == null, value: tmp.head };\r\n            }\r\n        };\r\n    };\r\n    List.prototype[FSymbol.reflection] = function () {\r\n        return {\r\n            type: \"Microsoft.FSharp.Collections.FSharpList\",\r\n            interfaces: [\"System.IEquatable\", \"System.IComparable\"]\r\n        };\r\n    };\r\n    return List;\r\n}());\r\nexport default List;\r\n","import { equals } from \"./Util\";\r\nimport { compare } from \"./Util\";\r\nimport { permute as arrayPermute } from \"./Array\";\r\nimport List from \"./ListClass\";\r\nvar Enumerator = (function () {\r\n    function Enumerator(iter) {\r\n        this.iter = iter;\r\n    }\r\n    Enumerator.prototype.MoveNext = function () {\r\n        var cur = this.iter.next();\r\n        this.current = cur.value;\r\n        return !cur.done;\r\n    };\r\n    Object.defineProperty(Enumerator.prototype, \"Current\", {\r\n        get: function () {\r\n            return this.current;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Enumerator.prototype.Reset = function () {\r\n        throw new Error(\"JS iterators cannot be reset\");\r\n    };\r\n    Enumerator.prototype.Dispose = function () { };\r\n    return Enumerator;\r\n}());\r\nexport { Enumerator };\r\nexport function getEnumerator(o) {\r\n    return typeof o.GetEnumerator === \"function\"\r\n        ? o.GetEnumerator() : new Enumerator(o[Symbol.iterator]());\r\n}\r\nexport function toIterator(en) {\r\n    return {\r\n        next: function () {\r\n            return en.MoveNext()\r\n                ? { done: false, value: en.Current }\r\n                : { done: true, value: null };\r\n        }\r\n    };\r\n}\r\nfunction __failIfNone(res) {\r\n    if (res == null)\r\n        throw new Error(\"Seq did not contain any matching element\");\r\n    return res;\r\n}\r\nexport function toList(xs) {\r\n    return foldBack(function (x, acc) {\r\n        return new List(x, acc);\r\n    }, xs, new List());\r\n}\r\nexport function ofList(xs) {\r\n    return delay(function () { return unfold(function (x) { return x.tail != null ? [x.head, x.tail] : null; }, xs); });\r\n}\r\nexport function ofArray(xs) {\r\n    return delay(function () { return unfold(function (i) { return i < xs.length ? [xs[i], i + 1] : null; }, 0); });\r\n}\r\nexport function append(xs, ys) {\r\n    return delay(function () {\r\n        var firstDone = false;\r\n        var i = xs[Symbol.iterator]();\r\n        var iters = [i, null];\r\n        return unfold(function () {\r\n            var cur;\r\n            if (!firstDone) {\r\n                cur = iters[0].next();\r\n                if (!cur.done) {\r\n                    return [cur.value, iters];\r\n                }\r\n                else {\r\n                    firstDone = true;\r\n                    iters = [null, ys[Symbol.iterator]()];\r\n                }\r\n            }\r\n            cur = iters[1].next();\r\n            return !cur.done ? [cur.value, iters] : null;\r\n        }, iters);\r\n    });\r\n}\r\nexport function average(xs) {\r\n    var count = 1;\r\n    var sum = reduce(function (acc, x) {\r\n        count++;\r\n        return acc + x;\r\n    }, xs);\r\n    return sum / count;\r\n}\r\nexport function averageBy(f, xs) {\r\n    var count = 1;\r\n    var sum = reduce(function (acc, x) {\r\n        count++;\r\n        return (count === 2 ? f(acc) : acc) + f(x);\r\n    }, xs);\r\n    return sum / count;\r\n}\r\nexport function concat(xs) {\r\n    return delay(function () {\r\n        var iter = xs[Symbol.iterator]();\r\n        var output = null;\r\n        return unfold(function (innerIter) {\r\n            var hasFinished = false;\r\n            while (!hasFinished) {\r\n                if (innerIter == null) {\r\n                    var cur = iter.next();\r\n                    if (!cur.done) {\r\n                        innerIter = cur.value[Symbol.iterator]();\r\n                    }\r\n                    else {\r\n                        hasFinished = true;\r\n                    }\r\n                }\r\n                else {\r\n                    var cur = innerIter.next();\r\n                    if (!cur.done) {\r\n                        output = cur.value;\r\n                        hasFinished = true;\r\n                    }\r\n                    else {\r\n                        innerIter = null;\r\n                    }\r\n                }\r\n            }\r\n            return innerIter != null && output != null ? [output, innerIter] : null;\r\n        }, null);\r\n    });\r\n}\r\nexport function collect(f, xs) {\r\n    return concat(map(f, xs));\r\n}\r\nexport function choose(f, xs) {\r\n    var trySkipToNext = function (iter) {\r\n        var cur = iter.next();\r\n        if (!cur.done) {\r\n            var y = f(cur.value);\r\n            return y != null ? [y, iter] : trySkipToNext(iter);\r\n        }\r\n        return void 0;\r\n    };\r\n    return delay(function () {\r\n        return unfold(function (iter) {\r\n            return trySkipToNext(iter);\r\n        }, xs[Symbol.iterator]());\r\n    });\r\n}\r\nexport function compareWith(f, xs, ys) {\r\n    var nonZero = tryFind(function (i) { return i != 0; }, map2(function (x, y) { return f(x, y); }, xs, ys));\r\n    return nonZero != null ? nonZero : count(xs) - count(ys);\r\n}\r\nexport function delay(f) {\r\n    return _a = {},\r\n        _a[Symbol.iterator] = function () { return f()[Symbol.iterator](); },\r\n        _a;\r\n    var _a;\r\n}\r\nexport function empty() {\r\n    return unfold(function () { return void 0; });\r\n}\r\nexport function enumerateWhile(cond, xs) {\r\n    return concat(unfold(function () { return cond() ? [xs, true] : null; }));\r\n}\r\nexport function enumerateThenFinally(xs, finalFn) {\r\n    return delay(function () {\r\n        var iter;\r\n        try {\r\n            iter = xs[Symbol.iterator]();\r\n        }\r\n        catch (err) {\r\n            return void 0;\r\n        }\r\n        finally {\r\n            finalFn();\r\n        }\r\n        return unfold(function (iter) {\r\n            try {\r\n                var cur = iter.next();\r\n                return !cur.done ? [cur.value, iter] : null;\r\n            }\r\n            catch (err) {\r\n                return void 0;\r\n            }\r\n            finally {\r\n                finalFn();\r\n            }\r\n        }, iter);\r\n    });\r\n}\r\nexport function enumerateUsing(disp, work) {\r\n    var isDisposed = false;\r\n    var disposeOnce = function () {\r\n        if (!isDisposed) {\r\n            isDisposed = true;\r\n            disp.Dispose();\r\n        }\r\n    };\r\n    try {\r\n        return enumerateThenFinally(work(disp), disposeOnce);\r\n    }\r\n    catch (err) {\r\n        return void 0;\r\n    }\r\n    finally {\r\n        disposeOnce();\r\n    }\r\n}\r\nexport function exactlyOne(xs) {\r\n    var iter = xs[Symbol.iterator]();\r\n    var fst = iter.next();\r\n    if (fst.done)\r\n        throw new Error(\"Seq was empty\");\r\n    var snd = iter.next();\r\n    if (!snd.done)\r\n        throw new Error(\"Seq had multiple items\");\r\n    return fst.value;\r\n}\r\nexport function except(itemsToExclude, source) {\r\n    var exclusionItems = Array.from(itemsToExclude);\r\n    var testIsNotInExclusionItems = function (element) { return !exclusionItems.some(function (excludedItem) { return equals(excludedItem, element); }); };\r\n    return filter(testIsNotInExclusionItems, source);\r\n}\r\nexport function exists(f, xs) {\r\n    function aux(iter) {\r\n        var cur = iter.next();\r\n        return !cur.done && (f(cur.value) || aux(iter));\r\n    }\r\n    return aux(xs[Symbol.iterator]());\r\n}\r\nexport function exists2(f, xs, ys) {\r\n    function aux(iter1, iter2) {\r\n        var cur1 = iter1.next(), cur2 = iter2.next();\r\n        return !cur1.done && !cur2.done && (f(cur1.value, cur2.value) || aux(iter1, iter2));\r\n    }\r\n    return aux(xs[Symbol.iterator](), ys[Symbol.iterator]());\r\n}\r\nexport function filter(f, xs) {\r\n    function trySkipToNext(iter) {\r\n        var cur = iter.next();\r\n        while (!cur.done) {\r\n            if (f(cur.value)) {\r\n                return [cur.value, iter];\r\n            }\r\n            cur = iter.next();\r\n        }\r\n        return void 0;\r\n    }\r\n    return delay(function () { return unfold(trySkipToNext, xs[Symbol.iterator]()); });\r\n}\r\nexport function where(f, xs) {\r\n    return filter(f, xs);\r\n}\r\nexport function fold(f, acc, xs) {\r\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\r\n        return xs.reduce(f, acc);\r\n    }\r\n    else {\r\n        var cur = void 0;\r\n        for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n            cur = iter.next();\r\n            if (cur.done)\r\n                break;\r\n            acc = f(acc, cur.value, i);\r\n        }\r\n        return acc;\r\n    }\r\n}\r\nexport function foldBack(f, xs, acc) {\r\n    var arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\r\n    for (var i = arr.length - 1; i >= 0; i--) {\r\n        acc = f(arr[i], acc, i);\r\n    }\r\n    return acc;\r\n}\r\nexport function fold2(f, acc, xs, ys) {\r\n    var iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();\r\n    var cur1, cur2;\r\n    for (var i = 0;; i++) {\r\n        cur1 = iter1.next();\r\n        cur2 = iter2.next();\r\n        if (cur1.done || cur2.done) {\r\n            break;\r\n        }\r\n        acc = f(acc, cur1.value, cur2.value, i);\r\n    }\r\n    return acc;\r\n}\r\nexport function foldBack2(f, xs, ys, acc) {\r\n    var ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\r\n    var ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);\r\n    for (var i = ar1.length - 1; i >= 0; i--) {\r\n        acc = f(ar1[i], ar2[i], acc, i);\r\n    }\r\n    return acc;\r\n}\r\nexport function forAll(f, xs) {\r\n    return fold(function (acc, x) { return acc && f(x); }, true, xs);\r\n}\r\nexport function forAll2(f, xs, ys) {\r\n    return fold2(function (acc, x, y) { return acc && f(x, y); }, true, xs, ys);\r\n}\r\nexport function tryHead(xs) {\r\n    var iter = xs[Symbol.iterator]();\r\n    var cur = iter.next();\r\n    return cur.done ? null : cur.value;\r\n}\r\nexport function head(xs) {\r\n    return __failIfNone(tryHead(xs));\r\n}\r\nexport function initialize(n, f) {\r\n    return delay(function () {\r\n        return unfold(function (i) { return i < n ? [f(i), i + 1] : null; }, 0);\r\n    });\r\n}\r\nexport function initializeInfinite(f) {\r\n    return delay(function () {\r\n        return unfold(function (i) { return [f(i), i + 1]; }, 0);\r\n    });\r\n}\r\nexport function tryItem(i, xs) {\r\n    if (i < 0)\r\n        return null;\r\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs))\r\n        return i < xs.length ? xs[i] : null;\r\n    for (var j = 0, iter = xs[Symbol.iterator]();; j++) {\r\n        var cur = iter.next();\r\n        if (cur.done)\r\n            return null;\r\n        if (j === i)\r\n            return cur.value;\r\n    }\r\n}\r\nexport function item(i, xs) {\r\n    return __failIfNone(tryItem(i, xs));\r\n}\r\nexport function iterate(f, xs) {\r\n    fold(function (_, x) { return f(x); }, null, xs);\r\n}\r\nexport function iterate2(f, xs, ys) {\r\n    fold2(function (_, x, y) { return f(x, y); }, null, xs, ys);\r\n}\r\nexport function iterateIndexed(f, xs) {\r\n    fold(function (_, x, i) { return f(i, x); }, null, xs);\r\n}\r\nexport function iterateIndexed2(f, xs, ys) {\r\n    fold2(function (_, x, y, i) { return f(i, x, y); }, null, xs, ys);\r\n}\r\nexport function isEmpty(xs) {\r\n    var i = xs[Symbol.iterator]();\r\n    return i.next().done;\r\n}\r\nexport function tryLast(xs) {\r\n    try {\r\n        return reduce(function (_, x) { return x; }, xs);\r\n    }\r\n    catch (err) {\r\n        return null;\r\n    }\r\n}\r\nexport function last(xs) {\r\n    return __failIfNone(tryLast(xs));\r\n}\r\nexport function count(xs) {\r\n    return Array.isArray(xs) || ArrayBuffer.isView(xs)\r\n        ? xs.length\r\n        : fold(function (acc, x) { return acc + 1; }, 0, xs);\r\n}\r\nexport function map(f, xs) {\r\n    return delay(function () { return unfold(function (iter) {\r\n        var cur = iter.next();\r\n        return !cur.done ? [f(cur.value), iter] : null;\r\n    }, xs[Symbol.iterator]()); });\r\n}\r\nexport function mapIndexed(f, xs) {\r\n    return delay(function () {\r\n        var i = 0;\r\n        return unfold(function (iter) {\r\n            var cur = iter.next();\r\n            return !cur.done ? [f(i++, cur.value), iter] : null;\r\n        }, xs[Symbol.iterator]());\r\n    });\r\n}\r\nexport function map2(f, xs, ys) {\r\n    return delay(function () {\r\n        var iter1 = xs[Symbol.iterator]();\r\n        var iter2 = ys[Symbol.iterator]();\r\n        return unfold(function () {\r\n            var cur1 = iter1.next(), cur2 = iter2.next();\r\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), null] : null;\r\n        });\r\n    });\r\n}\r\nexport function mapIndexed2(f, xs, ys) {\r\n    return delay(function () {\r\n        var i = 0;\r\n        var iter1 = xs[Symbol.iterator]();\r\n        var iter2 = ys[Symbol.iterator]();\r\n        return unfold(function () {\r\n            var cur1 = iter1.next(), cur2 = iter2.next();\r\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), null] : null;\r\n        });\r\n    });\r\n}\r\nexport function map3(f, xs, ys, zs) {\r\n    return delay(function () {\r\n        var iter1 = xs[Symbol.iterator]();\r\n        var iter2 = ys[Symbol.iterator]();\r\n        var iter3 = zs[Symbol.iterator]();\r\n        return unfold(function () {\r\n            var cur1 = iter1.next(), cur2 = iter2.next(), cur3 = iter3.next();\r\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), null] : null;\r\n        });\r\n    });\r\n}\r\nexport function mapFold(f, acc, xs) {\r\n    var result = [];\r\n    var r;\r\n    var cur;\r\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n        cur = iter.next();\r\n        if (cur.done)\r\n            break;\r\n        _a = f(acc, cur.value), r = _a[0], acc = _a[1];\r\n        result.push(r);\r\n    }\r\n    return [result, acc];\r\n    var _a;\r\n}\r\nexport function mapFoldBack(f, xs, acc) {\r\n    var arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\r\n    var result = [];\r\n    var r;\r\n    for (var i = arr.length - 1; i >= 0; i--) {\r\n        _a = f(arr[i], acc), r = _a[0], acc = _a[1];\r\n        result.push(r);\r\n    }\r\n    return [result, acc];\r\n    var _a;\r\n}\r\nexport function max(xs) {\r\n    return reduce(function (acc, x) { return compare(acc, x) === 1 ? acc : x; }, xs);\r\n}\r\nexport function maxBy(f, xs) {\r\n    return reduce(function (acc, x) { return compare(f(acc), f(x)) === 1 ? acc : x; }, xs);\r\n}\r\nexport function min(xs) {\r\n    return reduce(function (acc, x) { return compare(acc, x) === -1 ? acc : x; }, xs);\r\n}\r\nexport function minBy(f, xs) {\r\n    return reduce(function (acc, x) { return compare(f(acc), f(x)) === -1 ? acc : x; }, xs);\r\n}\r\nexport function pairwise(xs) {\r\n    return skip(2, scan(function (last, next) { return [last[1], next]; }, [0, 0], xs));\r\n}\r\nexport function permute(f, xs) {\r\n    return ofArray(arrayPermute(f, Array.from(xs)));\r\n}\r\nexport function rangeStep(first, step, last) {\r\n    if (step === 0)\r\n        throw new Error(\"Step cannot be 0\");\r\n    return delay(function () { return unfold(function (x) { return step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : null; }, first); });\r\n}\r\nexport function rangeChar(first, last) {\r\n    return delay(function () { return unfold(function (x) { return x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : null; }, first); });\r\n}\r\nexport function range(first, last) {\r\n    return rangeStep(first, 1, last);\r\n}\r\nexport function readOnly(xs) {\r\n    return map(function (x) { return x; }, xs);\r\n}\r\nexport function reduce(f, xs) {\r\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs))\r\n        return xs.reduce(f);\r\n    var iter = xs[Symbol.iterator]();\r\n    var cur = iter.next();\r\n    if (cur.done)\r\n        throw new Error(\"Seq was empty\");\r\n    var acc = cur.value;\r\n    for (;;) {\r\n        cur = iter.next();\r\n        if (cur.done)\r\n            break;\r\n        acc = f(acc, cur.value);\r\n    }\r\n    return acc;\r\n}\r\nexport function reduceBack(f, xs) {\r\n    var ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\r\n    if (ar.length === 0)\r\n        throw new Error(\"Seq was empty\");\r\n    var acc = ar[ar.length - 1];\r\n    for (var i = ar.length - 2; i >= 0; i--)\r\n        acc = f(ar[i], acc, i);\r\n    return acc;\r\n}\r\nexport function replicate(n, x) {\r\n    return initialize(n, function () { return x; });\r\n}\r\nexport function reverse(xs) {\r\n    var ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\r\n    return ofArray(ar.reverse());\r\n}\r\nexport function scan(f, seed, xs) {\r\n    return delay(function () {\r\n        var iter = xs[Symbol.iterator]();\r\n        return unfold(function (acc) {\r\n            if (acc == null)\r\n                return [seed, seed];\r\n            var cur = iter.next();\r\n            if (!cur.done) {\r\n                acc = f(acc, cur.value);\r\n                return [acc, acc];\r\n            }\r\n            return void 0;\r\n        }, null);\r\n    });\r\n}\r\nexport function scanBack(f, xs, seed) {\r\n    return reverse(scan(function (acc, x) { return f(x, acc); }, seed, reverse(xs)));\r\n}\r\nexport function singleton(x) {\r\n    return unfold(function (x) { return x != null ? [x, null] : null; }, x);\r\n}\r\nexport function skip(n, xs) {\r\n    return _a = {},\r\n        _a[Symbol.iterator] = function () {\r\n            var iter = xs[Symbol.iterator]();\r\n            for (var i = 1; i <= n; i++)\r\n                if (iter.next().done)\r\n                    throw new Error(\"Seq has not enough elements\");\r\n            return iter;\r\n        },\r\n        _a;\r\n    var _a;\r\n}\r\nexport function skipWhile(f, xs) {\r\n    return delay(function () {\r\n        var hasPassed = false;\r\n        return filter(function (x) { return hasPassed || (hasPassed = !f(x)); }, xs);\r\n    });\r\n}\r\nexport function sortWith(f, xs) {\r\n    var ys = Array.from(xs);\r\n    return ofArray(ys.sort(f));\r\n}\r\nexport function sum(xs) {\r\n    return fold(function (acc, x) { return acc + x; }, 0, xs);\r\n}\r\nexport function sumBy(f, xs) {\r\n    return fold(function (acc, x) { return acc + f(x); }, 0, xs);\r\n}\r\nexport function tail(xs) {\r\n    var iter = xs[Symbol.iterator]();\r\n    var cur = iter.next();\r\n    if (cur.done)\r\n        throw new Error(\"Seq was empty\");\r\n    return _a = {},\r\n        _a[Symbol.iterator] = function () { return iter; },\r\n        _a;\r\n    var _a;\r\n}\r\nexport function take(n, xs, truncate) {\r\n    if (truncate === void 0) { truncate = false; }\r\n    return delay(function () {\r\n        var iter = xs[Symbol.iterator]();\r\n        return unfold(function (i) {\r\n            if (i < n) {\r\n                var cur = iter.next();\r\n                if (!cur.done)\r\n                    return [cur.value, i + 1];\r\n                if (!truncate)\r\n                    throw new Error(\"Seq has not enough elements\");\r\n            }\r\n            return void 0;\r\n        }, 0);\r\n    });\r\n}\r\nexport function truncate(n, xs) {\r\n    return take(n, xs, true);\r\n}\r\nexport function takeWhile(f, xs) {\r\n    return delay(function () {\r\n        var iter = xs[Symbol.iterator]();\r\n        return unfold(function (i) {\r\n            var cur = iter.next();\r\n            if (!cur.done && f(cur.value))\r\n                return [cur.value, null];\r\n            return void 0;\r\n        }, 0);\r\n    });\r\n}\r\nexport function tryFind(f, xs, defaultValue) {\r\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n        var cur = iter.next();\r\n        if (cur.done)\r\n            return defaultValue === void 0 ? null : defaultValue;\r\n        if (f(cur.value, i))\r\n            return cur.value;\r\n    }\r\n}\r\nexport function find(f, xs) {\r\n    return __failIfNone(tryFind(f, xs));\r\n}\r\nexport function tryFindBack(f, xs, defaultValue) {\r\n    var match = null;\r\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n        var cur = iter.next();\r\n        if (cur.done)\r\n            return match === null ? (defaultValue === void 0 ? null : defaultValue) : match;\r\n        if (f(cur.value, i))\r\n            match = cur.value;\r\n    }\r\n}\r\nexport function findBack(f, xs) {\r\n    return __failIfNone(tryFindBack(f, xs));\r\n}\r\nexport function tryFindIndex(f, xs) {\r\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n        var cur = iter.next();\r\n        if (cur.done)\r\n            return null;\r\n        if (f(cur.value, i))\r\n            return i;\r\n    }\r\n}\r\nexport function findIndex(f, xs) {\r\n    return __failIfNone(tryFindIndex(f, xs));\r\n}\r\nexport function tryFindIndexBack(f, xs) {\r\n    var match = -1;\r\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n        var cur = iter.next();\r\n        if (cur.done)\r\n            return match === -1 ? null : match;\r\n        if (f(cur.value, i))\r\n            match = i;\r\n    }\r\n}\r\nexport function findIndexBack(f, xs) {\r\n    return __failIfNone(tryFindIndexBack(f, xs));\r\n}\r\nexport function tryPick(f, xs) {\r\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n        var cur = iter.next();\r\n        if (cur.done)\r\n            break;\r\n        var y = f(cur.value, i);\r\n        if (y != null)\r\n            return y;\r\n    }\r\n    return void 0;\r\n}\r\nexport function pick(f, xs) {\r\n    return __failIfNone(tryPick(f, xs));\r\n}\r\nexport function unfold(f, acc) {\r\n    return _a = {},\r\n        _a[Symbol.iterator] = function () {\r\n            return {\r\n                next: function () {\r\n                    var res = f(acc);\r\n                    if (res != null) {\r\n                        acc = res[1];\r\n                        return { done: false, value: res[0] };\r\n                    }\r\n                    return { done: true };\r\n                }\r\n            };\r\n        },\r\n        _a;\r\n    var _a;\r\n}\r\nexport function zip(xs, ys) {\r\n    return map2(function (x, y) { return [x, y]; }, xs, ys);\r\n}\r\nexport function zip3(xs, ys, zs) {\r\n    return map3(function (x, y, z) { return [x, y, z]; }, xs, ys, zs);\r\n}\r\n","import List from \"./ListClass\";\r\nimport { ofArray as listOfArray } from \"./ListClass\";\r\nimport { toString } from \"./Util\";\r\nimport { equals } from \"./Util\";\r\nimport { compare } from \"./Util\";\r\nimport GenericComparer from \"./GenericComparer\";\r\nimport FSymbol from \"./Symbol\";\r\nimport { map as seqMap } from \"./Seq\";\r\nimport { fold as seqFold } from \"./Seq\";\r\nimport { pick as seqPick } from \"./Seq\";\r\nimport { tryPick as seqTryPick } from \"./Seq\";\r\nimport { compareWith as seqCompareWith } from \"./Seq\";\r\nexport function groupBy(f, xs) {\r\n    var keys = [], iter = xs[Symbol.iterator]();\r\n    var acc = create(), cur = iter.next();\r\n    while (!cur.done) {\r\n        var k = f(cur.value), vs = tryFind(k, acc);\r\n        if (vs == null) {\r\n            keys.push(k);\r\n            acc = add(k, [cur.value], acc);\r\n        }\r\n        else {\r\n            vs.push(cur.value);\r\n        }\r\n        cur = iter.next();\r\n    }\r\n    return keys.map(function (k) { return [k, acc.get(k)]; });\r\n}\r\nexport function countBy(f, xs) {\r\n    return groupBy(f, xs).map(function (kv) { return [kv[0], kv[1].length]; });\r\n}\r\nvar MapTree = (function () {\r\n    function MapTree(caseName, fields) {\r\n        this.Case = caseName;\r\n        this.Fields = fields;\r\n    }\r\n    return MapTree;\r\n}());\r\nexport { MapTree };\r\nfunction tree_sizeAux(acc, m) {\r\n    return m.Case === \"MapOne\"\r\n        ? acc + 1\r\n        : m.Case === \"MapNode\"\r\n            ? tree_sizeAux(tree_sizeAux(acc + 1, m.Fields[2]), m.Fields[3])\r\n            : acc;\r\n}\r\nfunction tree_size(x) {\r\n    return tree_sizeAux(0, x);\r\n}\r\nfunction tree_empty() {\r\n    return new MapTree(\"MapEmpty\", []);\r\n}\r\nfunction tree_height(_arg1) {\r\n    return _arg1.Case === \"MapOne\" ? 1 : _arg1.Case === \"MapNode\" ? _arg1.Fields[4] : 0;\r\n}\r\nfunction tree_isEmpty(m) {\r\n    return m.Case === \"MapEmpty\" ? true : false;\r\n}\r\nfunction tree_mk(l, k, v, r) {\r\n    var matchValue = [l, r];\r\n    var $target1 = function () {\r\n        var hl = tree_height(l);\r\n        var hr = tree_height(r);\r\n        var m = hl < hr ? hr : hl;\r\n        return new MapTree(\"MapNode\", [k, v, l, r, m + 1]);\r\n    };\r\n    if (matchValue[0].Case === \"MapEmpty\") {\r\n        if (matchValue[1].Case === \"MapEmpty\") {\r\n            return new MapTree(\"MapOne\", [k, v]);\r\n        }\r\n        else {\r\n            return $target1();\r\n        }\r\n    }\r\n    else {\r\n        return $target1();\r\n    }\r\n}\r\n;\r\nfunction tree_rebalance(t1, k, v, t2) {\r\n    var t1h = tree_height(t1);\r\n    var t2h = tree_height(t2);\r\n    if (t2h > t1h + 2) {\r\n        if (t2.Case === \"MapNode\") {\r\n            if (tree_height(t2.Fields[2]) > t1h + 1) {\r\n                if (t2.Fields[2].Case === \"MapNode\") {\r\n                    return tree_mk(tree_mk(t1, k, v, t2.Fields[2].Fields[2]), t2.Fields[2].Fields[0], t2.Fields[2].Fields[1], tree_mk(t2.Fields[2].Fields[3], t2.Fields[0], t2.Fields[1], t2.Fields[3]));\r\n                }\r\n                else {\r\n                    throw new Error(\"rebalance\");\r\n                }\r\n            }\r\n            else {\r\n                return tree_mk(tree_mk(t1, k, v, t2.Fields[2]), t2.Fields[0], t2.Fields[1], t2.Fields[3]);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"rebalance\");\r\n        }\r\n    }\r\n    else {\r\n        if (t1h > t2h + 2) {\r\n            if (t1.Case === \"MapNode\") {\r\n                if (tree_height(t1.Fields[3]) > t2h + 1) {\r\n                    if (t1.Fields[3].Case === \"MapNode\") {\r\n                        return tree_mk(tree_mk(t1.Fields[2], t1.Fields[0], t1.Fields[1], t1.Fields[3].Fields[2]), t1.Fields[3].Fields[0], t1.Fields[3].Fields[1], tree_mk(t1.Fields[3].Fields[3], k, v, t2));\r\n                    }\r\n                    else {\r\n                        throw new Error(\"rebalance\");\r\n                    }\r\n                }\r\n                else {\r\n                    return tree_mk(t1.Fields[2], t1.Fields[0], t1.Fields[1], tree_mk(t1.Fields[3], k, v, t2));\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"rebalance\");\r\n            }\r\n        }\r\n        else {\r\n            return tree_mk(t1, k, v, t2);\r\n        }\r\n    }\r\n}\r\nfunction tree_add(comparer, k, v, m) {\r\n    if (m.Case === \"MapOne\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        if (c < 0) {\r\n            return new MapTree(\"MapNode\", [k, v, new MapTree(\"MapEmpty\", []), m, 2]);\r\n        }\r\n        else if (c === 0) {\r\n            return new MapTree(\"MapOne\", [k, v]);\r\n        }\r\n        return new MapTree(\"MapNode\", [k, v, m, new MapTree(\"MapEmpty\", []), 2]);\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_rebalance(tree_add(comparer, k, v, m.Fields[2]), m.Fields[0], m.Fields[1], m.Fields[3]);\r\n        }\r\n        else if (c === 0) {\r\n            return new MapTree(\"MapNode\", [k, v, m.Fields[2], m.Fields[3], m.Fields[4]]);\r\n        }\r\n        return tree_rebalance(m.Fields[2], m.Fields[0], m.Fields[1], tree_add(comparer, k, v, m.Fields[3]));\r\n    }\r\n    return new MapTree(\"MapOne\", [k, v]);\r\n}\r\nfunction tree_find(comparer, k, m) {\r\n    var res = tree_tryFind(comparer, k, m);\r\n    if (res != null)\r\n        return res;\r\n    throw new Error(\"key not found\");\r\n}\r\nfunction tree_tryFind(comparer, k, m) {\r\n    if (m.Case === \"MapOne\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        return c === 0 ? m.Fields[1] : null;\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_tryFind(comparer, k, m.Fields[2]);\r\n        }\r\n        else {\r\n            if (c === 0) {\r\n                return m.Fields[1];\r\n            }\r\n            else {\r\n                return tree_tryFind(comparer, k, m.Fields[3]);\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction tree_partition1(comparer, f, k, v, acc1, acc2) {\r\n    return f(k, v) ? [tree_add(comparer, k, v, acc1), acc2] : [acc1, tree_add(comparer, k, v, acc2)];\r\n}\r\nfunction tree_partitionAux(comparer, f, s, acc_0, acc_1) {\r\n    var acc = [acc_0, acc_1];\r\n    if (s.Case === \"MapOne\") {\r\n        return tree_partition1(comparer, f, s.Fields[0], s.Fields[1], acc[0], acc[1]);\r\n    }\r\n    else if (s.Case === \"MapNode\") {\r\n        var acc_2 = tree_partitionAux(comparer, f, s.Fields[3], acc[0], acc[1]);\r\n        var acc_3 = tree_partition1(comparer, f, s.Fields[0], s.Fields[1], acc_2[0], acc_2[1]);\r\n        return tree_partitionAux(comparer, f, s.Fields[2], acc_3[0], acc_3[1]);\r\n    }\r\n    return acc;\r\n}\r\nfunction tree_partition(comparer, f, s) {\r\n    return tree_partitionAux(comparer, f, s, tree_empty(), tree_empty());\r\n}\r\nfunction tree_filter1(comparer, f, k, v, acc) {\r\n    return f(k, v) ? tree_add(comparer, k, v, acc) : acc;\r\n}\r\nfunction tree_filterAux(comparer, f, s, acc) {\r\n    return s.Case === \"MapOne\" ? tree_filter1(comparer, f, s.Fields[0], s.Fields[1], acc) : s.Case === \"MapNode\" ? tree_filterAux(comparer, f, s.Fields[3], tree_filter1(comparer, f, s.Fields[0], s.Fields[1], tree_filterAux(comparer, f, s.Fields[2], acc))) : acc;\r\n}\r\nfunction tree_filter(comparer, f, s) {\r\n    return tree_filterAux(comparer, f, s, tree_empty());\r\n}\r\nfunction tree_spliceOutSuccessor(m) {\r\n    if (m.Case === \"MapOne\") {\r\n        return [m.Fields[0], m.Fields[1], new MapTree(\"MapEmpty\", [])];\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        if (m.Fields[2].Case === \"MapEmpty\") {\r\n            return [m.Fields[0], m.Fields[1], m.Fields[3]];\r\n        }\r\n        else {\r\n            var kvl = tree_spliceOutSuccessor(m.Fields[2]);\r\n            return [kvl[0], kvl[1], tree_mk(kvl[2], m.Fields[0], m.Fields[1], m.Fields[3])];\r\n        }\r\n    }\r\n    throw new Error(\"internal error: Map.spliceOutSuccessor\");\r\n}\r\nfunction tree_remove(comparer, k, m) {\r\n    if (m.Case === \"MapOne\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        if (c === 0) {\r\n            return new MapTree(\"MapEmpty\", []);\r\n        }\r\n        else {\r\n            return m;\r\n        }\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_rebalance(tree_remove(comparer, k, m.Fields[2]), m.Fields[0], m.Fields[1], m.Fields[3]);\r\n        }\r\n        else {\r\n            if (c === 0) {\r\n                var matchValue = [m.Fields[2], m.Fields[3]];\r\n                if (matchValue[0].Case === \"MapEmpty\") {\r\n                    return m.Fields[3];\r\n                }\r\n                else {\r\n                    if (matchValue[1].Case === \"MapEmpty\") {\r\n                        return m.Fields[2];\r\n                    }\r\n                    else {\r\n                        var patternInput = tree_spliceOutSuccessor(m.Fields[3]);\r\n                        var sv = patternInput[1];\r\n                        var sk = patternInput[0];\r\n                        var r_ = patternInput[2];\r\n                        return tree_mk(m.Fields[2], sk, sv, r_);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return tree_rebalance(m.Fields[2], m.Fields[0], m.Fields[1], tree_remove(comparer, k, m.Fields[3]));\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return tree_empty();\r\n    }\r\n}\r\nfunction tree_mem(comparer, k, m) {\r\n    if (m.Case === \"MapOne\") {\r\n        return comparer.Compare(k, m.Fields[0]) === 0;\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_mem(comparer, k, m.Fields[2]);\r\n        }\r\n        else {\r\n            if (c === 0) {\r\n                return true;\r\n            }\r\n            else {\r\n                return tree_mem(comparer, k, m.Fields[3]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction tree_iter(f, m) {\r\n    if (m.Case === \"MapOne\") {\r\n        f(m.Fields[0], m.Fields[1]);\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        tree_iter(f, m.Fields[2]);\r\n        f(m.Fields[0], m.Fields[1]);\r\n        tree_iter(f, m.Fields[3]);\r\n    }\r\n}\r\nfunction tree_tryPick(f, m) {\r\n    if (m.Case === \"MapOne\") {\r\n        return f(m.Fields[0], m.Fields[1]);\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        var matchValue = tree_tryPick(f, m.Fields[2]);\r\n        if (matchValue == null) {\r\n            var matchValue_1 = f(m.Fields[0], m.Fields[1]);\r\n            if (matchValue_1 == null) {\r\n                return tree_tryPick(f, m.Fields[3]);\r\n            }\r\n            else {\r\n                var res = matchValue_1;\r\n                return res;\r\n            }\r\n        }\r\n        else {\r\n            var res = matchValue;\r\n            return res;\r\n        }\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nfunction tree_exists(f, m) {\r\n    return m.Case === \"MapOne\" ? f(m.Fields[0], m.Fields[1]) : m.Case === \"MapNode\" ? (tree_exists(f, m.Fields[2]) ? true : f(m.Fields[0], m.Fields[1])) ? true : tree_exists(f, m.Fields[3]) : false;\r\n}\r\nfunction tree_forall(f, m) {\r\n    return m.Case === \"MapOne\" ? f(m.Fields[0], m.Fields[1]) : m.Case === \"MapNode\" ? (tree_forall(f, m.Fields[2]) ? f(m.Fields[0], m.Fields[1]) : false) ? tree_forall(f, m.Fields[3]) : false : true;\r\n}\r\nfunction tree_mapi(f, m) {\r\n    return m.Case === \"MapOne\" ? new MapTree(\"MapOne\", [m.Fields[0], f(m.Fields[0], m.Fields[1])]) : m.Case === \"MapNode\" ? new MapTree(\"MapNode\", [m.Fields[0], f(m.Fields[0], m.Fields[1]), tree_mapi(f, m.Fields[2]), tree_mapi(f, m.Fields[3]), m.Fields[4]]) : tree_empty();\r\n}\r\nfunction tree_foldBack(f, m, x) {\r\n    return m.Case === \"MapOne\" ? f(m.Fields[0], m.Fields[1], x) : m.Case === \"MapNode\" ? tree_foldBack(f, m.Fields[2], f(m.Fields[0], m.Fields[1], tree_foldBack(f, m.Fields[3], x))) : x;\r\n}\r\nfunction tree_fold(f, x, m) {\r\n    return m.Case === \"MapOne\" ? f(x, m.Fields[0], m.Fields[1]) : m.Case === \"MapNode\" ? tree_fold(f, f(tree_fold(f, x, m.Fields[2]), m.Fields[0], m.Fields[1]), m.Fields[3]) : x;\r\n}\r\nfunction tree_mkFromEnumerator(comparer, acc, e) {\r\n    var cur = e.next();\r\n    while (!cur.done) {\r\n        acc = tree_add(comparer, cur.value[0], cur.value[1], acc);\r\n        cur = e.next();\r\n    }\r\n    return acc;\r\n}\r\nfunction tree_ofSeq(comparer, c) {\r\n    var ie = c[Symbol.iterator]();\r\n    return tree_mkFromEnumerator(comparer, tree_empty(), ie);\r\n}\r\nfunction tree_collapseLHS(stack) {\r\n    if (stack.tail != null) {\r\n        if (stack.head.Case === \"MapOne\") {\r\n            return stack;\r\n        }\r\n        else if (stack.head.Case === \"MapNode\") {\r\n            return tree_collapseLHS(listOfArray([\r\n                stack.head.Fields[2],\r\n                new MapTree(\"MapOne\", [stack.head.Fields[0], stack.head.Fields[1]]),\r\n                stack.head.Fields[3]\r\n            ], stack.tail));\r\n        }\r\n        else {\r\n            return tree_collapseLHS(stack.tail);\r\n        }\r\n    }\r\n    else {\r\n        return new List();\r\n    }\r\n}\r\nfunction tree_mkIterator(s) {\r\n    return { stack: tree_collapseLHS(new List(s, new List())), started: false };\r\n}\r\nfunction tree_moveNext(i) {\r\n    function current(i) {\r\n        if (i.stack.tail == null) {\r\n            return null;\r\n        }\r\n        else if (i.stack.head.Case === \"MapOne\") {\r\n            return [i.stack.head.Fields[0], i.stack.head.Fields[1]];\r\n        }\r\n        throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\r\n    }\r\n    if (i.started) {\r\n        if (i.stack.tail == null) {\r\n            return { done: true, value: null };\r\n        }\r\n        else {\r\n            if (i.stack.head.Case === \"MapOne\") {\r\n                i.stack = tree_collapseLHS(i.stack.tail);\r\n                return {\r\n                    done: i.stack.tail == null,\r\n                    value: current(i)\r\n                };\r\n            }\r\n            else {\r\n                throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        i.started = true;\r\n        return {\r\n            done: i.stack.tail == null,\r\n            value: current(i)\r\n        };\r\n    }\r\n    ;\r\n}\r\nvar FableMap = (function () {\r\n    function FableMap() {\r\n    }\r\n    FableMap.prototype.ToString = function () {\r\n        return \"map [\" + Array.from(this).map(toString).join(\"; \") + \"]\";\r\n    };\r\n    FableMap.prototype.Equals = function (m2) {\r\n        return this.CompareTo(m2) === 0;\r\n    };\r\n    FableMap.prototype.CompareTo = function (m2) {\r\n        var _this = this;\r\n        return this === m2 ? 0 : seqCompareWith(function (kvp1, kvp2) {\r\n            var c = _this.comparer.Compare(kvp1[0], kvp2[0]);\r\n            return c !== 0 ? c : compare(kvp1[1], kvp2[1]);\r\n        }, this, m2);\r\n    };\r\n    FableMap.prototype[Symbol.iterator] = function () {\r\n        var i = tree_mkIterator(this.tree);\r\n        return {\r\n            next: function () { return tree_moveNext(i); }\r\n        };\r\n    };\r\n    FableMap.prototype.entries = function () {\r\n        return this[Symbol.iterator]();\r\n    };\r\n    FableMap.prototype.keys = function () {\r\n        return seqMap(function (kv) { return kv[0]; }, this);\r\n    };\r\n    FableMap.prototype.values = function () {\r\n        return seqMap(function (kv) { return kv[1]; }, this);\r\n    };\r\n    FableMap.prototype.get = function (k) {\r\n        return tree_find(this.comparer, k, this.tree);\r\n    };\r\n    FableMap.prototype.has = function (k) {\r\n        return tree_mem(this.comparer, k, this.tree);\r\n    };\r\n    FableMap.prototype.set = function (k, v) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    FableMap.prototype.delete = function (k) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    FableMap.prototype.clear = function () {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    Object.defineProperty(FableMap.prototype, \"size\", {\r\n        get: function () {\r\n            return tree_size(this.tree);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FableMap.prototype[FSymbol.reflection] = function () {\r\n        return {\r\n            type: \"Microsoft.FSharp.Collections.FSharpMap\",\r\n            interfaces: [\"System.IEquatable\", \"System.IComparable\", \"System.Collections.Generic.IDictionary\"]\r\n        };\r\n    };\r\n    return FableMap;\r\n}());\r\nexport default FableMap;\r\nfunction from(comparer, tree) {\r\n    var map = new FableMap();\r\n    map.tree = tree;\r\n    map.comparer = comparer || new GenericComparer();\r\n    return map;\r\n}\r\nexport function create(ie, comparer) {\r\n    comparer = comparer || new GenericComparer();\r\n    return from(comparer, ie ? tree_ofSeq(comparer, ie) : tree_empty());\r\n}\r\nexport function add(k, v, map) {\r\n    return from(map.comparer, tree_add(map.comparer, k, v, map.tree));\r\n}\r\nexport function remove(item, map) {\r\n    return from(map.comparer, tree_remove(map.comparer, item, map.tree));\r\n}\r\nexport function containsValue(v, map) {\r\n    return seqFold(function (acc, k) { return acc || equals(map.get(k), v); }, false, map.keys());\r\n}\r\nexport function tryGetValue(map, key, defaultValue) {\r\n    return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\r\n}\r\nexport function exists(f, map) {\r\n    return tree_exists(f, map.tree);\r\n}\r\nexport function find(k, map) {\r\n    return tree_find(map.comparer, k, map.tree);\r\n}\r\nexport function tryFind(k, map) {\r\n    return tree_tryFind(map.comparer, k, map.tree);\r\n}\r\nexport function filter(f, map) {\r\n    return from(map.comparer, tree_filter(map.comparer, f, map.tree));\r\n}\r\nexport function fold(f, seed, map) {\r\n    return tree_fold(f, seed, map.tree);\r\n}\r\nexport function foldBack(f, map, seed) {\r\n    return tree_foldBack(f, map.tree, seed);\r\n}\r\nexport function forAll(f, map) {\r\n    return tree_forall(f, map.tree);\r\n}\r\nexport function isEmpty(map) {\r\n    return tree_isEmpty(map.tree);\r\n}\r\nexport function iterate(f, map) {\r\n    tree_iter(f, map.tree);\r\n}\r\nexport function map(f, map) {\r\n    return from(map.comparer, tree_mapi(f, map.tree));\r\n}\r\nexport function partition(f, map) {\r\n    var rs = tree_partition(map.comparer, f, map.tree);\r\n    return [from(map.comparer, rs[0]), from(map.comparer, rs[1])];\r\n}\r\nexport function findKey(f, map) {\r\n    return seqPick(function (kv) { return f(kv[0], kv[1]) ? kv[0] : null; }, map);\r\n}\r\nexport function tryFindKey(f, map) {\r\n    return seqTryPick(function (kv) { return f(kv[0], kv[1]) ? kv[0] : null; }, map);\r\n}\r\nexport function pick(f, map) {\r\n    var res = tryPick(f, map);\r\n    if (res != null)\r\n        return res;\r\n    throw new Error(\"key not found\");\r\n}\r\nexport function tryPick(f, map) {\r\n    return tree_tryPick(f, map.tree);\r\n}\r\n","import List from \"./List\";\r\nimport { ofArray as listOfArray } from \"./List\";\r\nimport { toString } from \"./Util\";\r\nimport GenericComparer from \"./GenericComparer\";\r\nimport FSymbol from \"./Symbol\";\r\nimport { iterate as seqIterate } from \"./Seq\";\r\nimport { fold as seqFold } from \"./Seq\";\r\nimport { reduce as seqReduce } from \"./Seq\";\r\nimport { forAll as seqForAll } from \"./Seq\";\r\nimport { exists as seqExists } from \"./Seq\";\r\nimport { choose as seqChoose } from \"./Seq\";\r\nimport { scan as seqScan } from \"./Seq\";\r\nexport function distinctBy(f, xs) {\r\n    return seqChoose(function (tup) { return tup[0]; }, seqScan(function (tup, x) {\r\n        var acc = tup[1];\r\n        var k = f(x);\r\n        return acc.has(k) ? [null, acc] : [x, add(k, acc)];\r\n    }, [null, create()], xs));\r\n}\r\nexport function distinct(xs) {\r\n    return distinctBy(function (x) { return x; }, xs);\r\n}\r\nvar SetTree = (function () {\r\n    function SetTree(caseName, fields) {\r\n        this.Case = caseName;\r\n        this.Fields = fields;\r\n    }\r\n    return SetTree;\r\n}());\r\nexport { SetTree };\r\nvar tree_tolerance = 2;\r\nfunction tree_countAux(s, acc) {\r\n    return s.Case === \"SetOne\" ? acc + 1 : s.Case === \"SetEmpty\" ? acc : tree_countAux(s.Fields[1], tree_countAux(s.Fields[2], acc + 1));\r\n}\r\nfunction tree_count(s) {\r\n    return tree_countAux(s, 0);\r\n}\r\nfunction tree_SetOne(n) {\r\n    return new SetTree(\"SetOne\", [n]);\r\n}\r\nfunction tree_SetNode(x, l, r, h) {\r\n    return new SetTree(\"SetNode\", [x, l, r, h]);\r\n}\r\nfunction tree_height(t) {\r\n    return t.Case === \"SetOne\" ? 1 : t.Case === \"SetNode\" ? t.Fields[3] : 0;\r\n}\r\nfunction tree_mk(l, k, r) {\r\n    var matchValue = [l, r];\r\n    var $target1 = function () {\r\n        var hl = tree_height(l);\r\n        var hr = tree_height(r);\r\n        var m = hl < hr ? hr : hl;\r\n        return tree_SetNode(k, l, r, m + 1);\r\n    };\r\n    if (matchValue[0].Case === \"SetEmpty\") {\r\n        if (matchValue[1].Case === \"SetEmpty\") {\r\n            return tree_SetOne(k);\r\n        }\r\n        else {\r\n            return $target1();\r\n        }\r\n    }\r\n    else {\r\n        return $target1();\r\n    }\r\n}\r\nfunction tree_rebalance(t1, k, t2) {\r\n    var t1h = tree_height(t1);\r\n    var t2h = tree_height(t2);\r\n    if (t2h > t1h + tree_tolerance) {\r\n        if (t2.Case === \"SetNode\") {\r\n            if (tree_height(t2.Fields[1]) > t1h + 1) {\r\n                if (t2.Fields[1].Case === \"SetNode\") {\r\n                    return tree_mk(tree_mk(t1, k, t2.Fields[1].Fields[1]), t2.Fields[1].Fields[0], tree_mk(t2.Fields[1].Fields[2], t2.Fields[0], t2.Fields[2]));\r\n                }\r\n                else {\r\n                    throw new Error(\"rebalance\");\r\n                }\r\n            }\r\n            else {\r\n                return tree_mk(tree_mk(t1, k, t2.Fields[1]), t2.Fields[0], t2.Fields[2]);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"rebalance\");\r\n        }\r\n    }\r\n    else {\r\n        if (t1h > t2h + tree_tolerance) {\r\n            if (t1.Case === \"SetNode\") {\r\n                if (tree_height(t1.Fields[2]) > t2h + 1) {\r\n                    if (t1.Fields[2].Case === \"SetNode\") {\r\n                        return tree_mk(tree_mk(t1.Fields[1], t1.Fields[0], t1.Fields[2].Fields[1]), t1.Fields[2].Fields[0], tree_mk(t1.Fields[2].Fields[2], k, t2));\r\n                    }\r\n                    else {\r\n                        throw new Error(\"rebalance\");\r\n                    }\r\n                }\r\n                else {\r\n                    return tree_mk(t1.Fields[1], t1.Fields[0], tree_mk(t1.Fields[2], k, t2));\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"rebalance\");\r\n            }\r\n        }\r\n        else {\r\n            return tree_mk(t1, k, t2);\r\n        }\r\n    }\r\n}\r\nfunction tree_add(comparer, k, t) {\r\n    if (t.Case === \"SetOne\") {\r\n        var c = comparer.Compare(k, t.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_SetNode(k, new SetTree(\"SetEmpty\", []), t, 2);\r\n        }\r\n        else if (c === 0) {\r\n            return t;\r\n        }\r\n        else {\r\n            return tree_SetNode(k, t, new SetTree(\"SetEmpty\", []), 2);\r\n        }\r\n    }\r\n    else if (t.Case === \"SetEmpty\") {\r\n        return tree_SetOne(k);\r\n    }\r\n    else {\r\n        var c = comparer.Compare(k, t.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_rebalance(tree_add(comparer, k, t.Fields[1]), t.Fields[0], t.Fields[2]);\r\n        }\r\n        else if (c === 0) {\r\n            return t;\r\n        }\r\n        else {\r\n            return tree_rebalance(t.Fields[1], t.Fields[0], tree_add(comparer, k, t.Fields[2]));\r\n        }\r\n    }\r\n}\r\nfunction tree_balance(comparer, t1, k, t2) {\r\n    var matchValue = [t1, t2];\r\n    var $target1 = function (t1_1) { return tree_add(comparer, k, t1_1); };\r\n    var $target2 = function (k1, t2_1) { return tree_add(comparer, k, tree_add(comparer, k1, t2_1)); };\r\n    if (matchValue[0].Case === \"SetOne\") {\r\n        if (matchValue[1].Case === \"SetEmpty\") {\r\n            return $target1(matchValue[0]);\r\n        }\r\n        else {\r\n            if (matchValue[1].Case === \"SetOne\") {\r\n                return $target2(matchValue[0].Fields[0], matchValue[1]);\r\n            }\r\n            else {\r\n                return $target2(matchValue[0].Fields[0], matchValue[1]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (matchValue[0].Case === \"SetNode\") {\r\n            if (matchValue[1].Case === \"SetOne\") {\r\n                var k2 = matchValue[1].Fields[0];\r\n                var t1_1 = matchValue[0];\r\n                return tree_add(comparer, k, tree_add(comparer, k2, t1_1));\r\n            }\r\n            else {\r\n                if (matchValue[1].Case === \"SetNode\") {\r\n                    var h1 = matchValue[0].Fields[3];\r\n                    var h2 = matchValue[1].Fields[3];\r\n                    var k1 = matchValue[0].Fields[0];\r\n                    var k2 = matchValue[1].Fields[0];\r\n                    var t11 = matchValue[0].Fields[1];\r\n                    var t12 = matchValue[0].Fields[2];\r\n                    var t21 = matchValue[1].Fields[1];\r\n                    var t22 = matchValue[1].Fields[2];\r\n                    if (h1 + tree_tolerance < h2) {\r\n                        return tree_rebalance(tree_balance(comparer, t1, k, t21), k2, t22);\r\n                    }\r\n                    else {\r\n                        if (h2 + tree_tolerance < h1) {\r\n                            return tree_rebalance(t11, k1, tree_balance(comparer, t12, k, t2));\r\n                        }\r\n                        else {\r\n                            return tree_mk(t1, k, t2);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    return $target1(matchValue[0]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var t2_1 = matchValue[1];\r\n            return tree_add(comparer, k, t2_1);\r\n        }\r\n    }\r\n}\r\nfunction tree_split(comparer, pivot, t) {\r\n    if (t.Case === \"SetOne\") {\r\n        var c = comparer.Compare(t.Fields[0], pivot);\r\n        if (c < 0) {\r\n            return [t, false, new SetTree(\"SetEmpty\", [])];\r\n        }\r\n        else if (c === 0) {\r\n            return [new SetTree(\"SetEmpty\", []), true, new SetTree(\"SetEmpty\", [])];\r\n        }\r\n        else {\r\n            return [new SetTree(\"SetEmpty\", []), false, t];\r\n        }\r\n    }\r\n    else if (t.Case === \"SetEmpty\") {\r\n        return [new SetTree(\"SetEmpty\", []), false, new SetTree(\"SetEmpty\", [])];\r\n    }\r\n    else {\r\n        var c = comparer.Compare(pivot, t.Fields[0]);\r\n        if (c < 0) {\r\n            var patternInput = tree_split(comparer, pivot, t.Fields[1]);\r\n            return [patternInput[0], patternInput[1], tree_balance(comparer, patternInput[2], t.Fields[0], t.Fields[2])];\r\n        }\r\n        else if (c === 0) {\r\n            return [t.Fields[1], true, t.Fields[2]];\r\n        }\r\n        else {\r\n            var patternInput = tree_split(comparer, pivot, t.Fields[2]);\r\n            return [tree_balance(comparer, t.Fields[1], t.Fields[0], patternInput[0]), patternInput[1], patternInput[2]];\r\n        }\r\n    }\r\n}\r\nfunction tree_spliceOutSuccessor(t) {\r\n    if (t.Case === \"SetOne\") {\r\n        return [t.Fields[0], new SetTree(\"SetEmpty\", [])];\r\n    }\r\n    else if (t.Case === \"SetNode\") {\r\n        if (t.Fields[1].Case === \"SetEmpty\") {\r\n            return [t.Fields[0], t.Fields[2]];\r\n        }\r\n        else {\r\n            var patternInput = tree_spliceOutSuccessor(t.Fields[1]);\r\n            return [patternInput[0], tree_mk(patternInput[1], t.Fields[0], t.Fields[2])];\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\r\n    }\r\n}\r\nfunction tree_remove(comparer, k, t) {\r\n    if (t.Case === \"SetOne\") {\r\n        var c = comparer.Compare(k, t.Fields[0]);\r\n        if (c === 0) {\r\n            return new SetTree(\"SetEmpty\", []);\r\n        }\r\n        else {\r\n            return t;\r\n        }\r\n    }\r\n    else if (t.Case === \"SetNode\") {\r\n        var c = comparer.Compare(k, t.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_rebalance(tree_remove(comparer, k, t.Fields[1]), t.Fields[0], t.Fields[2]);\r\n        }\r\n        else if (c === 0) {\r\n            var matchValue = [t.Fields[1], t.Fields[2]];\r\n            if (matchValue[0].Case === \"SetEmpty\") {\r\n                return t.Fields[2];\r\n            }\r\n            else if (matchValue[1].Case === \"SetEmpty\") {\r\n                return t.Fields[1];\r\n            }\r\n            else {\r\n                var patternInput = tree_spliceOutSuccessor(t.Fields[2]);\r\n                return tree_mk(t.Fields[1], patternInput[0], patternInput[1]);\r\n            }\r\n        }\r\n        else {\r\n            return tree_rebalance(t.Fields[1], t.Fields[0], tree_remove(comparer, k, t.Fields[2]));\r\n        }\r\n    }\r\n    else {\r\n        return t;\r\n    }\r\n}\r\nfunction tree_mem(comparer, k, t) {\r\n    if (t.Case === \"SetOne\") {\r\n        return comparer.Compare(k, t.Fields[0]) === 0;\r\n    }\r\n    else if (t.Case === \"SetEmpty\") {\r\n        return false;\r\n    }\r\n    else {\r\n        var c = comparer.Compare(k, t.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_mem(comparer, k, t.Fields[1]);\r\n        }\r\n        else if (c === 0) {\r\n            return true;\r\n        }\r\n        else {\r\n            return tree_mem(comparer, k, t.Fields[2]);\r\n        }\r\n    }\r\n}\r\nfunction tree_iter(f, t) {\r\n    if (t.Case === \"SetOne\") {\r\n        f(t.Fields[0]);\r\n    }\r\n    else {\r\n        if (t.Case === \"SetEmpty\") { }\r\n        else {\r\n            tree_iter(f, t.Fields[1]);\r\n            f(t.Fields[0]);\r\n            tree_iter(f, t.Fields[2]);\r\n        }\r\n    }\r\n}\r\nfunction tree_foldBack(f, m, x) {\r\n    return m.Case === \"SetOne\" ? f(m.Fields[0], x) : m.Case === \"SetEmpty\" ? x : tree_foldBack(f, m.Fields[1], f(m.Fields[0], tree_foldBack(f, m.Fields[2], x)));\r\n}\r\nfunction tree_fold(f, x, m) {\r\n    if (m.Case === \"SetOne\") {\r\n        return f(x, m.Fields[0]);\r\n    }\r\n    else if (m.Case === \"SetEmpty\") {\r\n        return x;\r\n    }\r\n    else {\r\n        var x_1 = tree_fold(f, x, m.Fields[1]);\r\n        var x_2 = f(x_1, m.Fields[0]);\r\n        return tree_fold(f, x_2, m.Fields[2]);\r\n    }\r\n}\r\nfunction tree_forall(f, m) {\r\n    return m.Case === \"SetOne\" ? f(m.Fields[0]) : m.Case === \"SetEmpty\" ? true : (f(m.Fields[0]) ? tree_forall(f, m.Fields[1]) : false) ? tree_forall(f, m.Fields[2]) : false;\r\n}\r\nfunction tree_exists(f, m) {\r\n    return m.Case === \"SetOne\" ? f(m.Fields[0]) : m.Case === \"SetEmpty\" ? false : (f(m.Fields[0]) ? true : tree_exists(f, m.Fields[1])) ? true : tree_exists(f, m.Fields[2]);\r\n}\r\nfunction tree_isEmpty(m) {\r\n    return m.Case === \"SetEmpty\" ? true : false;\r\n}\r\nfunction tree_subset(comparer, a, b) {\r\n    return tree_forall(function (x) { return tree_mem(comparer, x, b); }, a);\r\n}\r\nfunction tree_psubset(comparer, a, b) {\r\n    return tree_forall(function (x) { return tree_mem(comparer, x, b); }, a) ? tree_exists(function (x) { return !tree_mem(comparer, x, a); }, b) : false;\r\n}\r\nfunction tree_filterAux(comparer, f, s, acc) {\r\n    if (s.Case === \"SetOne\") {\r\n        if (f(s.Fields[0])) {\r\n            return tree_add(comparer, s.Fields[0], acc);\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n    }\r\n    else if (s.Case === \"SetEmpty\") {\r\n        return acc;\r\n    }\r\n    else {\r\n        var acc_1 = f(s.Fields[0]) ? tree_add(comparer, s.Fields[0], acc) : acc;\r\n        return tree_filterAux(comparer, f, s.Fields[1], tree_filterAux(comparer, f, s.Fields[2], acc_1));\r\n    }\r\n}\r\nfunction tree_filter(comparer, f, s) {\r\n    return tree_filterAux(comparer, f, s, new SetTree(\"SetEmpty\", []));\r\n}\r\nfunction tree_diffAux(comparer, m, acc) {\r\n    return m.Case === \"SetOne\" ? tree_remove(comparer, m.Fields[0], acc) : m.Case === \"SetEmpty\" ? acc : tree_diffAux(comparer, m.Fields[1], tree_diffAux(comparer, m.Fields[2], tree_remove(comparer, m.Fields[0], acc)));\r\n}\r\nfunction tree_diff(comparer, a, b) {\r\n    return tree_diffAux(comparer, b, a);\r\n}\r\nfunction tree_union(comparer, t1, t2) {\r\n    var matchValue = [t1, t2];\r\n    var $target2 = function (t) { return t; };\r\n    var $target3 = function (k1, t2_1) { return tree_add(comparer, k1, t2_1); };\r\n    if (matchValue[0].Case === \"SetEmpty\") {\r\n        var t = matchValue[1];\r\n        return t;\r\n    }\r\n    else {\r\n        if (matchValue[0].Case === \"SetOne\") {\r\n            if (matchValue[1].Case === \"SetEmpty\") {\r\n                return $target2(matchValue[0]);\r\n            }\r\n            else {\r\n                if (matchValue[1].Case === \"SetOne\") {\r\n                    return $target3(matchValue[0].Fields[0], matchValue[1]);\r\n                }\r\n                else {\r\n                    return $target3(matchValue[0].Fields[0], matchValue[1]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (matchValue[1].Case === \"SetEmpty\") {\r\n                return $target2(matchValue[0]);\r\n            }\r\n            else {\r\n                if (matchValue[1].Case === \"SetOne\") {\r\n                    var k2 = matchValue[1].Fields[0];\r\n                    var t1_1 = matchValue[0];\r\n                    return tree_add(comparer, k2, t1_1);\r\n                }\r\n                else {\r\n                    var h1 = matchValue[0].Fields[3];\r\n                    var h2 = matchValue[1].Fields[3];\r\n                    var k1 = matchValue[0].Fields[0];\r\n                    var k2 = matchValue[1].Fields[0];\r\n                    var t11 = matchValue[0].Fields[1];\r\n                    var t12 = matchValue[0].Fields[2];\r\n                    var t21 = matchValue[1].Fields[1];\r\n                    var t22 = matchValue[1].Fields[2];\r\n                    if (h1 > h2) {\r\n                        var patternInput = tree_split(comparer, k1, t2);\r\n                        var lo = patternInput[0];\r\n                        var hi = patternInput[2];\r\n                        return tree_balance(comparer, tree_union(comparer, t11, lo), k1, tree_union(comparer, t12, hi));\r\n                    }\r\n                    else {\r\n                        var patternInput = tree_split(comparer, k2, t1);\r\n                        var lo = patternInput[0];\r\n                        var hi = patternInput[2];\r\n                        return tree_balance(comparer, tree_union(comparer, t21, lo), k2, tree_union(comparer, t22, hi));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction tree_intersectionAux(comparer, b, m, acc) {\r\n    if (m.Case === \"SetOne\") {\r\n        if (tree_mem(comparer, m.Fields[0], b)) {\r\n            return tree_add(comparer, m.Fields[0], acc);\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n    }\r\n    else if (m.Case === \"SetEmpty\") {\r\n        return acc;\r\n    }\r\n    else {\r\n        var acc_1 = tree_intersectionAux(comparer, b, m.Fields[2], acc);\r\n        var acc_2 = tree_mem(comparer, m.Fields[0], b) ? tree_add(comparer, m.Fields[0], acc_1) : acc_1;\r\n        return tree_intersectionAux(comparer, b, m.Fields[1], acc_2);\r\n    }\r\n}\r\nfunction tree_intersection(comparer, a, b) {\r\n    return tree_intersectionAux(comparer, b, a, new SetTree(\"SetEmpty\", []));\r\n}\r\nfunction tree_partition1(comparer, f, k, acc1, acc2) {\r\n    return f(k) ? [tree_add(comparer, k, acc1), acc2] : [acc1, tree_add(comparer, k, acc2)];\r\n}\r\nfunction tree_partitionAux(comparer, f, s, acc_0, acc_1) {\r\n    var acc = [acc_0, acc_1];\r\n    if (s.Case === \"SetOne\") {\r\n        var acc1 = acc[0];\r\n        var acc2 = acc[1];\r\n        return tree_partition1(comparer, f, s.Fields[0], acc1, acc2);\r\n    }\r\n    else {\r\n        if (s.Case === \"SetEmpty\") {\r\n            return acc;\r\n        }\r\n        else {\r\n            var acc_2 = tree_partitionAux(comparer, f, s.Fields[2], acc[0], acc[1]);\r\n            var acc_3 = tree_partition1(comparer, f, s.Fields[0], acc_2[0], acc_2[1]);\r\n            return tree_partitionAux(comparer, f, s.Fields[1], acc_3[0], acc_3[1]);\r\n        }\r\n    }\r\n}\r\nfunction tree_partition(comparer, f, s) {\r\n    var seed = [new SetTree(\"SetEmpty\", []), new SetTree(\"SetEmpty\", [])];\r\n    var arg30_ = seed[0];\r\n    var arg31_ = seed[1];\r\n    return tree_partitionAux(comparer, f, s, arg30_, arg31_);\r\n}\r\nfunction tree_minimumElementAux(s, n) {\r\n    return s.Case === \"SetOne\" ? s.Fields[0] : s.Case === \"SetEmpty\" ? n : tree_minimumElementAux(s.Fields[1], s.Fields[0]);\r\n}\r\nfunction tree_minimumElementOpt(s) {\r\n    return s.Case === \"SetOne\" ? s.Fields[0] : s.Case === \"SetEmpty\" ? null : tree_minimumElementAux(s.Fields[1], s.Fields[0]);\r\n}\r\nfunction tree_maximumElementAux(s, n) {\r\n    return s.Case === \"SetOne\" ? s.Fields[0] : s.Case === \"SetEmpty\" ? n : tree_maximumElementAux(s.Fields[2], s.Fields[0]);\r\n}\r\nfunction tree_maximumElementOpt(s) {\r\n    return s.Case === \"SetOne\" ? s.Fields[0] : s.Case === \"SetEmpty\" ? null : tree_maximumElementAux(s.Fields[2], s.Fields[0]);\r\n}\r\nfunction tree_minimumElement(s) {\r\n    var matchValue = tree_minimumElementOpt(s);\r\n    if (matchValue == null) {\r\n        throw new Error(\"Set contains no elements\");\r\n    }\r\n    else {\r\n        return matchValue;\r\n    }\r\n}\r\nfunction tree_maximumElement(s) {\r\n    var matchValue = tree_maximumElementOpt(s);\r\n    if (matchValue == null) {\r\n        throw new Error(\"Set contains no elements\");\r\n    }\r\n    else {\r\n        return matchValue;\r\n    }\r\n}\r\nfunction tree_collapseLHS(stack) {\r\n    return stack.tail != null\r\n        ? stack.head.Case === \"SetOne\"\r\n            ? stack\r\n            : stack.head.Case === \"SetNode\"\r\n                ? tree_collapseLHS(listOfArray([\r\n                    stack.head.Fields[1],\r\n                    tree_SetOne(stack.head.Fields[0]),\r\n                    stack.head.Fields[2]\r\n                ], stack.tail))\r\n                : tree_collapseLHS(stack.tail)\r\n        : new List();\r\n}\r\nfunction tree_mkIterator(s) {\r\n    return { stack: tree_collapseLHS(new List(s, new List())), started: false };\r\n}\r\n;\r\nfunction tree_moveNext(i) {\r\n    function current(i) {\r\n        if (i.stack.tail == null) {\r\n            return null;\r\n        }\r\n        else if (i.stack.head.Case === \"SetOne\") {\r\n            return i.stack.head.Fields[0];\r\n        }\r\n        throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\r\n    }\r\n    if (i.started) {\r\n        if (i.stack.tail == null) {\r\n            return { done: true, value: null };\r\n        }\r\n        else {\r\n            if (i.stack.head.Case === \"SetOne\") {\r\n                i.stack = tree_collapseLHS(i.stack.tail);\r\n                return {\r\n                    done: i.stack.tail == null,\r\n                    value: current(i)\r\n                };\r\n            }\r\n            else {\r\n                throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        i.started = true;\r\n        return {\r\n            done: i.stack.tail == null,\r\n            value: current(i)\r\n        };\r\n    }\r\n    ;\r\n}\r\nfunction tree_compareStacks(comparer, l1, l2) {\r\n    var $target8 = function (n1k, t1) { return tree_compareStacks(comparer, listOfArray([new SetTree(\"SetEmpty\", []), tree_SetOne(n1k)], t1), l2); };\r\n    var $target9 = function (n1k, n1l, n1r, t1) { return tree_compareStacks(comparer, listOfArray([n1l, tree_SetNode(n1k, new SetTree(\"SetEmpty\", []), n1r, 0)], t1), l2); };\r\n    var $target11 = function (n2k, n2l, n2r, t2) { return tree_compareStacks(comparer, l1, listOfArray([n2l, tree_SetNode(n2k, new SetTree(\"SetEmpty\", []), n2r, 0)], t2)); };\r\n    if (l1.tail != null) {\r\n        if (l2.tail != null) {\r\n            if (l2.head.Case === \"SetOne\") {\r\n                if (l1.head.Case === \"SetOne\") {\r\n                    var n1k = l1.head.Fields[0], n2k = l2.head.Fields[0], t1 = l1.tail, t2 = l2.tail, c = comparer.Compare(n1k, n2k);\r\n                    if (c !== 0) {\r\n                        return c;\r\n                    }\r\n                    else {\r\n                        return tree_compareStacks(comparer, t1, t2);\r\n                    }\r\n                }\r\n                else {\r\n                    if (l1.head.Case === \"SetNode\") {\r\n                        if (l1.head.Fields[1].Case === \"SetEmpty\") {\r\n                            var emp = l1.head.Fields[1], n1k = l1.head.Fields[0], n1r = l1.head.Fields[2], n2k = l2.head.Fields[0], t1 = l1.tail, t2 = l2.tail, c = comparer.Compare(n1k, n2k);\r\n                            if (c !== 0) {\r\n                                return c;\r\n                            }\r\n                            else {\r\n                                return tree_compareStacks(comparer, listOfArray([n1r], t1), listOfArray([emp], t2));\r\n                            }\r\n                        }\r\n                        else {\r\n                            return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);\r\n                        }\r\n                    }\r\n                    else {\r\n                        var n2k = l2.head.Fields[0], t2 = l2.tail;\r\n                        return tree_compareStacks(comparer, l1, listOfArray([new SetTree(\"SetEmpty\", []), tree_SetOne(n2k)], t2));\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (l2.head.Case === \"SetNode\") {\r\n                    if (l2.head.Fields[1].Case === \"SetEmpty\") {\r\n                        if (l1.head.Case === \"SetOne\") {\r\n                            var n1k = l1.head.Fields[0], n2k = l2.head.Fields[0], n2r = l2.head.Fields[2], t1 = l1.tail, t2 = l2.tail, c = comparer.Compare(n1k, n2k);\r\n                            if (c !== 0) {\r\n                                return c;\r\n                            }\r\n                            else {\r\n                                return tree_compareStacks(comparer, listOfArray([new SetTree(\"SetEmpty\", [])], t1), listOfArray([n2r], t2));\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (l1.head.Case === \"SetNode\") {\r\n                                if (l1.head.Fields[1].Case === \"SetEmpty\") {\r\n                                    var n1k = l1.head.Fields[0], n1r = l1.head.Fields[2], n2k = l2.head.Fields[0], n2r = l2.head.Fields[2], t1 = l1.tail, t2 = l2.tail, c = comparer.Compare(n1k, n2k);\r\n                                    if (c !== 0) {\r\n                                        return c;\r\n                                    }\r\n                                    else {\r\n                                        return tree_compareStacks(comparer, listOfArray([n1r], t1), listOfArray([n2r], t2));\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);\r\n                                }\r\n                            }\r\n                            else {\r\n                                return $target11(l2.head.Fields[0], l2.head.Fields[1], l2.head.Fields[2], l2.tail);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (l1.head.Case === \"SetOne\") {\r\n                            return $target8(l1.head.Fields[0], l1.tail);\r\n                        }\r\n                        else {\r\n                            if (l1.head.Case === \"SetNode\") {\r\n                                return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);\r\n                            }\r\n                            else {\r\n                                return $target11(l2.head.Fields[0], l2.head.Fields[1], l2.head.Fields[2], l2.tail);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (l1.head.Case === \"SetOne\") {\r\n                        return $target8(l1.head.Fields[0], l1.tail);\r\n                    }\r\n                    else {\r\n                        if (l1.head.Case === \"SetNode\") {\r\n                            return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);\r\n                        }\r\n                        else {\r\n                            return tree_compareStacks(comparer, l1.tail, l2.tail);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    }\r\n    else {\r\n        if (l2.tail != null) {\r\n            return -1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n}\r\nfunction tree_compare(comparer, s1, s2) {\r\n    if (s1.Case === \"SetEmpty\") {\r\n        if (s2.Case === \"SetEmpty\") {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else {\r\n        if (s2.Case === \"SetEmpty\") {\r\n            return 1;\r\n        }\r\n        else {\r\n            return tree_compareStacks(comparer, listOfArray([s1]), listOfArray([s2]));\r\n        }\r\n    }\r\n}\r\nfunction tree_mkFromEnumerator(comparer, acc, e) {\r\n    var cur = e.next();\r\n    while (!cur.done) {\r\n        acc = tree_add(comparer, cur.value, acc);\r\n        cur = e.next();\r\n    }\r\n    return acc;\r\n}\r\nfunction tree_ofSeq(comparer, c) {\r\n    var ie = c[Symbol.iterator]();\r\n    return tree_mkFromEnumerator(comparer, new SetTree(\"SetEmpty\", []), ie);\r\n}\r\nvar FableSet = (function () {\r\n    function FableSet() {\r\n    }\r\n    FableSet.prototype.ToString = function () {\r\n        return \"set [\" + Array.from(this).map(toString).join(\"; \") + \"]\";\r\n    };\r\n    FableSet.prototype.Equals = function (s2) {\r\n        return this.CompareTo(s2) === 0;\r\n    };\r\n    FableSet.prototype.CompareTo = function (s2) {\r\n        return this === s2 ? 0 : tree_compare(this.comparer, this.tree, s2.tree);\r\n    };\r\n    FableSet.prototype[Symbol.iterator] = function () {\r\n        var i = tree_mkIterator(this.tree);\r\n        return {\r\n            next: function () { return tree_moveNext(i); }\r\n        };\r\n    };\r\n    FableSet.prototype.values = function () {\r\n        return this[Symbol.iterator]();\r\n    };\r\n    FableSet.prototype.has = function (v) {\r\n        return tree_mem(this.comparer, v, this.tree);\r\n    };\r\n    FableSet.prototype.add = function (v) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    FableSet.prototype.delete = function (v) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    FableSet.prototype.clear = function () {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    Object.defineProperty(FableSet.prototype, \"size\", {\r\n        get: function () {\r\n            return tree_count(this.tree);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FableSet.prototype[FSymbol.reflection] = function () {\r\n        return {\r\n            type: \"Microsoft.FSharp.Collections.FSharpSet\",\r\n            interfaces: [\"System.IEquatable\", \"System.IComparable\"]\r\n        };\r\n    };\r\n    return FableSet;\r\n}());\r\nexport default FableSet;\r\nfunction from(comparer, tree) {\r\n    var s = new FableSet();\r\n    s.tree = tree;\r\n    s.comparer = comparer || new GenericComparer();\r\n    return s;\r\n}\r\nexport function create(ie, comparer) {\r\n    comparer = comparer || new GenericComparer();\r\n    return from(comparer, ie ? tree_ofSeq(comparer, ie) : new SetTree(\"SetEmpty\", []));\r\n}\r\nexport function isEmpty(s) {\r\n    return tree_isEmpty(s.tree);\r\n}\r\nexport function add(item, s) {\r\n    return from(s.comparer, tree_add(s.comparer, item, s.tree));\r\n}\r\nexport function addInPlace(item, s) {\r\n    return s.has(item) ? false : (s.add(item), true);\r\n}\r\nexport function remove(item, s) {\r\n    return from(s.comparer, tree_remove(s.comparer, item, s.tree));\r\n}\r\nexport function union(set1, set2) {\r\n    return set2.tree.Case === \"SetEmpty\"\r\n        ? set1\r\n        : set1.tree.Case === \"SetEmpty\"\r\n            ? set2\r\n            : from(set1.comparer, tree_union(set1.comparer, set1.tree, set2.tree));\r\n}\r\nexport function op_Addition(set1, set2) {\r\n    return union(set1, set2);\r\n}\r\nexport function unionInPlace(set1, set2) {\r\n    seqIterate(function (x) { set1.add(x); }, set2);\r\n}\r\nexport function unionMany(sets) {\r\n    return seqFold(function (acc, s) { return union(s, acc); }, create(), sets);\r\n}\r\nexport function difference(set1, set2) {\r\n    return set1.tree.Case === \"SetEmpty\"\r\n        ? set1\r\n        : set2.tree.Case === \"SetEmpty\"\r\n            ? set1\r\n            : from(set1.comparer, tree_diff(set1.comparer, set1.tree, set2.tree));\r\n}\r\nexport function op_Subtraction(set1, set2) {\r\n    return difference(set1, set2);\r\n}\r\nexport function differenceInPlace(set1, set2) {\r\n    seqIterate(function (x) { set1.delete(x); }, set2);\r\n}\r\nexport function intersect(set1, set2) {\r\n    return set2.tree.Case === \"SetEmpty\"\r\n        ? set2\r\n        : set1.tree.Case === \"SetEmpty\"\r\n            ? set1\r\n            : from(set1.comparer, tree_intersection(set1.comparer, set1.tree, set2.tree));\r\n}\r\nexport function intersectInPlace(set1, set2) {\r\n    var set2_ = set2 instanceof Set ? set2 : new Set(set2);\r\n    seqIterate(function (x) { if (!set2_.has(x)) {\r\n        set1.delete(x);\r\n    } }, set1);\r\n}\r\nexport function intersectMany(sets) {\r\n    return seqReduce(function (s1, s2) { return intersect(s1, s2); }, sets);\r\n}\r\nexport function isProperSubsetOf(set1, set2) {\r\n    if (set1 instanceof FableSet && set2 instanceof FableSet) {\r\n        return tree_psubset(set1.comparer, set1.tree, set2.tree);\r\n    }\r\n    else {\r\n        set2 = set2 instanceof Set ? set2 : new Set(set2);\r\n        return seqForAll(function (x) { return set2.has(x); }, set1) && seqExists(function (x) { return !set1.has(x); }, set2);\r\n    }\r\n}\r\nexport function isProperSubset(set1, set2) {\r\n    return isProperSubsetOf(set1, set2);\r\n}\r\nexport function isSubsetOf(set1, set2) {\r\n    if (set1 instanceof FableSet && set2 instanceof FableSet) {\r\n        return tree_subset(set1.comparer, set1.tree, set2.tree);\r\n    }\r\n    else {\r\n        set2 = set2 instanceof Set ? set2 : new Set(set2);\r\n        return seqForAll(function (x) { return set2.has(x); }, set1);\r\n    }\r\n}\r\nexport function isSubset(set1, set2) {\r\n    return isSubsetOf(set1, set2);\r\n}\r\nexport function isProperSupersetOf(set1, set2) {\r\n    if (set1 instanceof FableSet && set2 instanceof FableSet) {\r\n        return tree_psubset(set1.comparer, set2.tree, set1.tree);\r\n    }\r\n    else {\r\n        return isProperSubset(set2 instanceof Set ? set2 : new Set(set2), set1);\r\n    }\r\n}\r\nexport function isProperSuperset(set1, set2) {\r\n    return isProperSupersetOf(set1, set2);\r\n}\r\nexport function isSupersetOf(set1, set2) {\r\n    if (set1 instanceof FableSet && set2 instanceof FableSet) {\r\n        return tree_subset(set1.comparer, set2.tree, set1.tree);\r\n    }\r\n    else {\r\n        return isSubset(set2 instanceof Set ? set2 : new Set(set2), set1);\r\n    }\r\n}\r\nexport function isSuperset(set1, set2) {\r\n    return isSupersetOf(set1, set2);\r\n}\r\nexport function copyTo(xs, arr, arrayIndex, count) {\r\n    if (!Array.isArray(arr) && !ArrayBuffer.isView(arr))\r\n        throw new Error(\"Array is invalid\");\r\n    count = count || arr.length;\r\n    var i = arrayIndex || 0;\r\n    var iter = xs[Symbol.iterator]();\r\n    while (count--) {\r\n        var el = iter.next();\r\n        if (el.done)\r\n            break;\r\n        arr[i++] = el.value;\r\n    }\r\n}\r\nexport function partition(f, s) {\r\n    if (s.tree.Case === \"SetEmpty\") {\r\n        return [s, s];\r\n    }\r\n    else {\r\n        var tuple = tree_partition(s.comparer, f, s.tree);\r\n        return [from(s.comparer, tuple[0]), from(s.comparer, tuple[1])];\r\n    }\r\n}\r\nexport function filter(f, s) {\r\n    if (s.tree.Case === \"SetEmpty\") {\r\n        return s;\r\n    }\r\n    else {\r\n        return from(s.comparer, tree_filter(s.comparer, f, s.tree));\r\n    }\r\n}\r\nexport function map(f, s) {\r\n    var comparer = new GenericComparer();\r\n    return from(comparer, tree_fold(function (acc, k) { return tree_add(comparer, f(k), acc); }, new SetTree(\"SetEmpty\", []), s.tree));\r\n}\r\nexport function exists(f, s) {\r\n    return tree_exists(f, s.tree);\r\n}\r\nexport function forAll(f, s) {\r\n    return tree_forall(f, s.tree);\r\n}\r\nexport function fold(f, seed, s) {\r\n    return tree_fold(f, seed, s.tree);\r\n}\r\nexport function foldBack(f, s, seed) {\r\n    return tree_foldBack(f, s.tree, seed);\r\n}\r\nexport function iterate(f, s) {\r\n    tree_iter(f, s.tree);\r\n}\r\nexport function minimumElement(s) {\r\n    return tree_minimumElement(s.tree);\r\n}\r\nexport function minElement(s) {\r\n    return tree_minimumElement(s.tree);\r\n}\r\nexport function maximumElement(s) {\r\n    return tree_maximumElement(s.tree);\r\n}\r\nexport function maxElement(s) {\r\n    return tree_maximumElement(s.tree);\r\n}\r\n","import _Symbol from \"./Symbol\";\r\nvar Long = (function () {\r\n    function Long(low, high, unsigned) {\r\n        this.eq = this.equals;\r\n        this.neq = this.notEquals;\r\n        this.lt = this.lessThan;\r\n        this.lte = this.lessThanOrEqual;\r\n        this.gt = this.greaterThan;\r\n        this.gte = this.greaterThanOrEqual;\r\n        this.comp = this.compare;\r\n        this.neg = this.negate;\r\n        this.abs = this.absolute;\r\n        this.sub = this.subtract;\r\n        this.mul = this.multiply;\r\n        this.div = this.divide;\r\n        this.mod = this.modulo;\r\n        this.shl = this.shiftLeft;\r\n        this.shr = this.shiftRight;\r\n        this.shru = this.shiftRightUnsigned;\r\n        this.Equals = this.equals;\r\n        this.CompareTo = this.compare;\r\n        this.ToString = this.toString;\r\n        this.low = low | 0;\r\n        this.high = high | 0;\r\n        this.unsigned = !!unsigned;\r\n    }\r\n    Long.prototype.toInt = function () {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n    Long.prototype.toNumber = function () {\r\n        if (this.unsigned)\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n    Long.prototype.toString = function (radix) {\r\n        if (radix === void 0) { radix = 10; }\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n        if (this.isZero())\r\n            return '0';\r\n        if (this.isNegative()) {\r\n            if (this.eq(MIN_VALUE)) {\r\n                var radixLong = fromNumber(radix), div = this.div(radixLong), rem1 = div.mul(radixLong).sub(this);\r\n                return div.toString(radix) + rem1.toInt().toString(radix);\r\n            }\r\n            else\r\n                return '-' + this.neg().toString(radix);\r\n        }\r\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned), rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower), intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0, digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n    Long.prototype.getHighBits = function () {\r\n        return this.high;\r\n    };\r\n    Long.prototype.getHighBitsUnsigned = function () {\r\n        return this.high >>> 0;\r\n    };\r\n    Long.prototype.getLowBits = function () {\r\n        return this.low;\r\n    };\r\n    Long.prototype.getLowBitsUnsigned = function () {\r\n        return this.low >>> 0;\r\n    };\r\n    Long.prototype.getNumBitsAbs = function () {\r\n        if (this.isNegative())\r\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n    Long.prototype.isZero = function () {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n    Long.prototype.isNegative = function () {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n    Long.prototype.isPositive = function () {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n    Long.prototype.isOdd = function () {\r\n        return (this.low & 1) === 1;\r\n    };\r\n    Long.prototype.isEven = function () {\r\n        return (this.low & 1) === 0;\r\n    };\r\n    Long.prototype.equals = function (other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n    Long.prototype.notEquals = function (other) {\r\n        return !this.eq(other);\r\n    };\r\n    Long.prototype.lessThan = function (other) {\r\n        return this.comp(other) < 0;\r\n    };\r\n    Long.prototype.lessThanOrEqual = function (other) {\r\n        return this.comp(other) <= 0;\r\n    };\r\n    Long.prototype.greaterThan = function (other) {\r\n        return this.comp(other) > 0;\r\n    };\r\n    Long.prototype.greaterThanOrEqual = function (other) {\r\n        return this.comp(other) >= 0;\r\n    };\r\n    Long.prototype.compare = function (other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.eq(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(), otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        if (!this.unsigned)\r\n            return this.sub(other).isNegative() ? -1 : 1;\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n    Long.prototype.negate = function () {\r\n        if (!this.unsigned && this.eq(MIN_VALUE))\r\n            return MIN_VALUE;\r\n        return this.not().add(ONE);\r\n    };\r\n    Long.prototype.absolute = function () {\r\n        if (!this.unsigned && this.isNegative())\r\n            return this.negate();\r\n        else\r\n            return this;\r\n    };\r\n    Long.prototype.add = function (addend) {\r\n        if (!isLong(addend))\r\n            addend = fromValue(addend);\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n    Long.prototype.subtract = function (subtrahend) {\r\n        if (!isLong(subtrahend))\r\n            subtrahend = fromValue(subtrahend);\r\n        return this.add(subtrahend.neg());\r\n    };\r\n    Long.prototype.multiply = function (multiplier) {\r\n        if (this.isZero())\r\n            return ZERO;\r\n        if (!isLong(multiplier))\r\n            multiplier = fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return ZERO;\r\n        if (this.eq(MIN_VALUE))\r\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n        if (multiplier.eq(MIN_VALUE))\r\n            return this.isOdd() ? MIN_VALUE : ZERO;\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.neg().mul(multiplier.neg());\r\n            else\r\n                return this.neg().mul(multiplier).neg();\r\n        }\r\n        else if (multiplier.isNegative())\r\n            return this.mul(multiplier.neg()).neg();\r\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n    Long.prototype.divide = function (divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw Error('division by zero');\r\n        if (this.isZero())\r\n            return this.unsigned ? UZERO : ZERO;\r\n        var approx = 0, rem = ZERO, res = ZERO;\r\n        if (!this.unsigned) {\r\n            if (this.eq(MIN_VALUE)) {\r\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                    return MIN_VALUE;\r\n                else if (divisor.eq(MIN_VALUE))\r\n                    return ONE;\r\n                else {\r\n                    var halfThis = this.shr(1);\r\n                    var approx_1 = halfThis.div(divisor).shl(1);\r\n                    if (approx_1.eq(ZERO)) {\r\n                        return divisor.isNegative() ? ONE : NEG_ONE;\r\n                    }\r\n                    else {\r\n                        rem = this.sub(divisor.mul(approx_1));\r\n                        res = approx_1.add(rem.div(divisor));\r\n                        return res;\r\n                    }\r\n                }\r\n            }\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return this.unsigned ? UZERO : ZERO;\r\n            if (this.isNegative()) {\r\n                if (divisor.isNegative())\r\n                    return this.neg().div(divisor.neg());\r\n                return this.neg().div(divisor).neg();\r\n            }\r\n            else if (divisor.isNegative())\r\n                return this.div(divisor.neg()).neg();\r\n            res = ZERO;\r\n        }\r\n        else {\r\n            if (!divisor.unsigned)\r\n                divisor = divisor.toUnsigned();\r\n            if (divisor.gt(this))\r\n                return UZERO;\r\n            if (divisor.gt(this.shru(1)))\r\n                return UONE;\r\n            res = UZERO;\r\n        }\r\n        rem = this;\r\n        while (rem.gte(divisor)) {\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), approxRes = fromNumber(approx), approxRem = approxRes.mul(divisor);\r\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n                approx -= delta;\r\n                approxRes = fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.mul(divisor);\r\n            }\r\n            if (approxRes.isZero())\r\n                approxRes = ONE;\r\n            res = res.add(approxRes);\r\n            rem = rem.sub(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n    Long.prototype.modulo = function (divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n    ;\r\n    Long.prototype.not = function () {\r\n        return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n    ;\r\n    Long.prototype.and = function (other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n    Long.prototype.or = function (other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n    Long.prototype.xor = function (other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n    Long.prototype.shiftLeft = function (numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits = numBits & 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n    Long.prototype.shiftRight = function (numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits = numBits & 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n    Long.prototype.shiftRightUnsigned = function (numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits = numBits & 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            }\r\n            else if (numBits === 32)\r\n                return fromBits(high, 0, this.unsigned);\r\n            else\r\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n    Long.prototype.toSigned = function () {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, false);\r\n    };\r\n    Long.prototype.toUnsigned = function () {\r\n        if (this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, true);\r\n    };\r\n    Long.prototype.toBytes = function (le) {\r\n        return le ? this.toBytesLE() : this.toBytesBE();\r\n    };\r\n    Long.prototype.toBytesLE = function () {\r\n        var hi = this.high, lo = this.low;\r\n        return [\r\n            lo & 0xff,\r\n            (lo >>> 8) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            hi & 0xff,\r\n            (hi >>> 8) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 24) & 0xff\r\n        ];\r\n    };\r\n    Long.prototype.toBytesBE = function () {\r\n        var hi = this.high, lo = this.low;\r\n        return [\r\n            (hi >>> 24) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 8) & 0xff,\r\n            hi & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 8) & 0xff,\r\n            lo & 0xff\r\n        ];\r\n    };\r\n    Long.prototype[_Symbol.reflection] = function () {\r\n        return {\r\n            type: \"System.Int64\",\r\n            interfaces: [\"FSharpRecord\", \"System.IComparable\"],\r\n            properties: {\r\n                low: \"number\",\r\n                high: \"number\",\r\n                unsigned: \"boolean\"\r\n            }\r\n        };\r\n    };\r\n    return Long;\r\n}());\r\nexport { Long };\r\nvar INT_CACHE = {};\r\nvar UINT_CACHE = {};\r\nexport function isLong(obj) {\r\n    return (obj && obj instanceof Long);\r\n}\r\nexport function fromInt(value, unsigned) {\r\n    if (unsigned === void 0) { unsigned = false; }\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n    else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\nexport function fromNumber(value, unsigned) {\r\n    if (unsigned === void 0) { unsigned = false; }\r\n    if (isNaN(value) || !isFinite(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    }\r\n    else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\nexport function fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\nvar pow_dbl = Math.pow;\r\nexport function fromString(str, unsigned, radix) {\r\n    if (unsigned === void 0) { unsigned = false; }\r\n    if (radix === void 0) { radix = 10; }\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        radix = unsigned,\r\n            unsigned = false;\r\n    }\r\n    else {\r\n        unsigned = !!unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    var p = str.indexOf('-');\r\n    if (p > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        }\r\n        else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\nexport function fromValue(val) {\r\n    if (val instanceof Long)\r\n        return val;\r\n    if (typeof val === 'number')\r\n        return fromNumber(val);\r\n    if (typeof val === 'string')\r\n        return fromString(val);\r\n    return fromBits(val.low, val.high, val.unsigned);\r\n}\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\nexport var ZERO = fromInt(0);\r\nexport var UZERO = fromInt(0, true);\r\nexport var ONE = fromInt(1);\r\nexport var UONE = fromInt(1, true);\r\nexport var NEG_ONE = fromInt(-1);\r\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\r\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\r\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\r\n","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Promise as _Promise } from \"./Promise\";\nimport { toJson, ofJson } from \"fable-core/Serialize\";\n\nfunction _fetch(url, init) {\n        return fetch(url, init).then(function (response) {\n                if (response.ok) {\n                        return response;\n                } else {\n                        throw new Error(String(response.status) + \" \" + response.statusText + \" for URL \" + response.url);\n                }\n        });\n}\n\nexport { _fetch as fetch };\nexport function tryFetch(url, init) {\n        return _Promise.result(_fetch(url, init));\n}\nexport function fetchAs(url, init, _genArgs) {\n        return _fetch(url, init).then(function (fetched) {\n                return fetched.text();\n        }).then(function (json) {\n                return ofJson(json, {\n                        T: _genArgs.T\n                });\n        });\n}\nexport function tryFetchAs(url, init, _genArgs) {\n        return _Promise.result(fetchAs(url, init, {\n                T: _genArgs.T\n        }));\n}\nexport function postRecord(url, record, properties) {\n        var props = Object.assign({\n                method: \"POST\",\n                headers: _defineProperty({}, \"Content-Type\", \"application/json\"),\n                body: toJson(record)\n        }, properties);\n        return _fetch(url, props);\n}\nexport function tryPostRecord(url, record, properties) {\n        return _Promise.result(postRecord(url, record, properties));\n}\nexport function patchRecord(url, record, properties) {\n        var props = Object.assign({\n                method: \"PATCH\",\n                headers: _defineProperty({}, \"Content-Type\", \"application/json\"),\n                body: toJson(record)\n        }, properties);\n        return _fetch(url, props);\n}\n//# sourceMappingURL=Fetch.js.map","var Trampoline = (function () {\r\n    function Trampoline() {\r\n        this.callCount = 0;\r\n    }\r\n    Object.defineProperty(Trampoline, \"maxTrampolineCallCount\", {\r\n        get: function () {\r\n            return 2000;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Trampoline.prototype.incrementAndCheck = function () {\r\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\r\n    };\r\n    Trampoline.prototype.hijack = function (f) {\r\n        this.callCount = 0;\r\n        setTimeout(f, 0);\r\n    };\r\n    return Trampoline;\r\n}());\r\nexport { Trampoline };\r\nexport function protectedCont(f) {\r\n    return function (ctx) {\r\n        if (ctx.cancelToken.isCancelled)\r\n            ctx.onCancel(\"cancelled\");\r\n        else if (ctx.trampoline.incrementAndCheck())\r\n            ctx.trampoline.hijack(function () {\r\n                try {\r\n                    f(ctx);\r\n                }\r\n                catch (err) {\r\n                    ctx.onError(err);\r\n                }\r\n            });\r\n        else\r\n            try {\r\n                f(ctx);\r\n            }\r\n            catch (err) {\r\n                ctx.onError(err);\r\n            }\r\n    };\r\n}\r\nexport function protectedBind(computation, binder) {\r\n    return protectedCont(function (ctx) {\r\n        computation({\r\n            onSuccess: function (x) {\r\n                try {\r\n                    binder(x)(ctx);\r\n                }\r\n                catch (ex) {\r\n                    ctx.onError(ex);\r\n                }\r\n            },\r\n            onError: ctx.onError,\r\n            onCancel: ctx.onCancel,\r\n            cancelToken: ctx.cancelToken,\r\n            trampoline: ctx.trampoline\r\n        });\r\n    });\r\n}\r\nexport function protectedReturn(value) {\r\n    return protectedCont(function (ctx) { return ctx.onSuccess(value); });\r\n}\r\nvar AsyncBuilder = (function () {\r\n    function AsyncBuilder() {\r\n    }\r\n    AsyncBuilder.prototype.Bind = function (computation, binder) {\r\n        return protectedBind(computation, binder);\r\n    };\r\n    AsyncBuilder.prototype.Combine = function (computation1, computation2) {\r\n        return this.Bind(computation1, function () { return computation2; });\r\n    };\r\n    AsyncBuilder.prototype.Delay = function (generator) {\r\n        return protectedCont(function (ctx) { return generator()(ctx); });\r\n    };\r\n    AsyncBuilder.prototype.For = function (sequence, body) {\r\n        var iter = sequence[Symbol.iterator]();\r\n        var cur = iter.next();\r\n        return this.While(function () { return !cur.done; }, this.Delay(function () {\r\n            var res = body(cur.value);\r\n            cur = iter.next();\r\n            return res;\r\n        }));\r\n    };\r\n    AsyncBuilder.prototype.Return = function (value) {\r\n        return protectedReturn(value);\r\n    };\r\n    AsyncBuilder.prototype.ReturnFrom = function (computation) {\r\n        return computation;\r\n    };\r\n    AsyncBuilder.prototype.TryFinally = function (computation, compensation) {\r\n        return protectedCont(function (ctx) {\r\n            computation({\r\n                onSuccess: function (x) {\r\n                    compensation();\r\n                    ctx.onSuccess(x);\r\n                },\r\n                onError: function (x) {\r\n                    compensation();\r\n                    ctx.onError(x);\r\n                },\r\n                onCancel: function (x) {\r\n                    compensation();\r\n                    ctx.onCancel(x);\r\n                },\r\n                cancelToken: ctx.cancelToken,\r\n                trampoline: ctx.trampoline\r\n            });\r\n        });\r\n    };\r\n    AsyncBuilder.prototype.TryWith = function (computation, catchHandler) {\r\n        return protectedCont(function (ctx) {\r\n            computation({\r\n                onSuccess: ctx.onSuccess,\r\n                onCancel: ctx.onCancel,\r\n                cancelToken: ctx.cancelToken,\r\n                trampoline: ctx.trampoline,\r\n                onError: function (ex) {\r\n                    try {\r\n                        catchHandler(ex)(ctx);\r\n                    }\r\n                    catch (ex2) {\r\n                        ctx.onError(ex2);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AsyncBuilder.prototype.Using = function (resource, binder) {\r\n        return this.TryFinally(binder(resource), function () { return resource.Dispose(); });\r\n    };\r\n    AsyncBuilder.prototype.While = function (guard, computation) {\r\n        var _this = this;\r\n        if (guard())\r\n            return this.Bind(computation, function () { return _this.While(guard, computation); });\r\n        else\r\n            return this.Return(void 0);\r\n    };\r\n    AsyncBuilder.prototype.Zero = function () {\r\n        return protectedCont(function (ctx) { return ctx.onSuccess(void 0); });\r\n    };\r\n    return AsyncBuilder;\r\n}());\r\nexport { AsyncBuilder };\r\nexport var singleton = new AsyncBuilder();\r\n","import { Trampoline } from \"./AsyncBuilder\";\r\nimport { protectedCont } from \"./AsyncBuilder\";\r\nimport { protectedBind } from \"./AsyncBuilder\";\r\nimport { protectedReturn } from \"./AsyncBuilder\";\r\nimport { choice1Of2 } from \"./Choice\";\r\nimport { choice2Of2 } from \"./Choice\";\r\nimport { map } from \"./Seq\";\r\nvar Async = (function () {\r\n    function Async() {\r\n    }\r\n    return Async;\r\n}());\r\nexport default Async;\r\nfunction emptyContinuation(x) {\r\n}\r\nexport function awaitPromise(p) {\r\n    return fromContinuations(function (conts) {\r\n        return p.then(conts[0]).catch(function (err) {\r\n            return (err == \"cancelled\" ? conts[2] : conts[1])(err);\r\n        });\r\n    });\r\n}\r\nexport function cancellationToken() {\r\n    return protectedCont(function (ctx) { return ctx.onSuccess(ctx.cancelToken); });\r\n}\r\nexport var defaultCancellationToken = { isCancelled: false };\r\nexport function catchAsync(work) {\r\n    return protectedCont(function (ctx) {\r\n        work({\r\n            onSuccess: function (x) { return ctx.onSuccess(choice1Of2(x)); },\r\n            onError: function (ex) { return ctx.onSuccess(choice2Of2(ex)); },\r\n            onCancel: ctx.onCancel,\r\n            cancelToken: ctx.cancelToken,\r\n            trampoline: ctx.trampoline\r\n        });\r\n    });\r\n}\r\nexport function fromContinuations(f) {\r\n    return protectedCont(function (ctx) { return f([ctx.onSuccess, ctx.onError, ctx.onCancel]); });\r\n}\r\nexport function ignore(computation) {\r\n    return protectedBind(computation, function (x) { return protectedReturn(void 0); });\r\n}\r\nexport function parallel(computations) {\r\n    return awaitPromise(Promise.all(map(function (w) { return startAsPromise(w); }, computations)));\r\n}\r\nexport function sleep(millisecondsDueTime) {\r\n    return protectedCont(function (ctx) {\r\n        setTimeout(function () { return ctx.cancelToken.isCancelled ? ctx.onCancel(\"cancelled\") : ctx.onSuccess(void 0); }, millisecondsDueTime);\r\n    });\r\n}\r\nexport function start(computation, cancellationToken) {\r\n    return startWithContinuations(computation, cancellationToken);\r\n}\r\nexport function startImmediate(computation, cancellationToken) {\r\n    return start(computation, cancellationToken);\r\n}\r\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\r\n    if (typeof continuation !== \"function\") {\r\n        cancelToken = continuation;\r\n        continuation = null;\r\n    }\r\n    var trampoline = new Trampoline();\r\n    computation({\r\n        onSuccess: continuation ? continuation : emptyContinuation,\r\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\r\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\r\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\r\n        trampoline: trampoline\r\n    });\r\n}\r\nexport function startAsPromise(computation, cancellationToken) {\r\n    return new Promise(function (resolve, reject) {\r\n        return startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken);\r\n    });\r\n}\r\n","#I @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\"\r\n#r @\"node_modules\\fable-core\\Fable.Core.dll\"\r\n#r @\"node_modules\\fable-powerpack\\Fable.PowerPack.dll\"\r\n\r\nopen Fable.Core\r\nopen Fable.Import.Browser\r\nopen Fable.PowerPack\r\nopen Fable.Core.JsInterop\r\n\r\n//JsInterop.importAll \"isomorphic-fetch\"\r\nlet ready fn =\r\n    if (document.readyState <> \"loading\") \r\n    then \r\n        fn()\r\n    else\r\n        document.addEventListener(\"DOMContentLoaded\",\r\n                                  U2.Case1 (EventListener(fun _ -> fn())))\r\n\r\nlet JustLazy = importDefault<obj> \"./node_modules/justlazy/src/justlazy.js\"\r\n\r\nlet fetchMy url (loadme:Element) post =\r\n    promise {\r\n        let! response = Fetch.fetch url [] \r\n        let! body = response.text()\r\n        loadme.innerHTML <- body\r\n        post()\r\n        JustLazy?registerLazyLoadByClass(\"justlazy-spinner\") |> ignore\r\n        return ()\r\n    }\r\n\r\nlet rec toload target origin =\r\n    let loadme = document.getElementById(target)\r\n    let links = document.querySelectorAll(origin)\r\n    let l = links.length\r\n    let reparseFun =\r\n        match target with\r\n        | \"content\" -> (fun _ -> toload \"LoadMe\" \"a.pageFetcher\")\r\n        | _ -> ignore\r\n    for i in 0.0 .. (l-1.0) do\r\n        let el = links.item(i) :?> HTMLElement\r\n        let url = el.getAttribute(\"href\")\r\n        el.onclick <- (fun _ -> fetchMy url loadme reparseFun\r\n                                |> Async.AwaitPromise |> Async.StartImmediate\r\n                                box false)\r\n\r\nlet init() =\r\n    toload \"content\" \"nav a\"\r\n    document.getElementById(\"first\").click()\r\n    document.getElementById(\"first\").focus()\r\n\r\nready init\r\n","/**\n * justlazy 1.6.0\n *\n * Repo: https://github.com/fhopeman/justlazy\n * Demo: http://fhopeman.github.io/justlazy\n */\n(function(root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory();\n    } else {\n        root.Justlazy = factory();\n    }\n}(this, function() {\n    \"use strict\";\n\n    var _createImage = function(imgPlaceholder, imgAttributes, onloadCallback, onerrorCallback, onreplaceCallback) {\n        var img = document.createElement(\"img\");\n\n        img.onload = function() {\n            if (!!onloadCallback) {\n                onloadCallback.call(img);\n            }\n            _replacePlaceholderWithImage(imgPlaceholder, img, onreplaceCallback);\n        };\n\n        img.onerror = function() {\n            if (!!onerrorCallback) {\n                onerrorCallback.call(img);\n            }\n            _replacePlaceholderWithImage(imgPlaceholder, img, onreplaceCallback);\n        };\n\n        if (!!imgAttributes.title) {\n            img.title = imgAttributes.title;\n        }\n        if (!!imgAttributes.srcset) {\n            img.setAttribute(\"srcset\", imgAttributes.srcset);\n        }\n\n        img.alt = imgAttributes.alt;\n        img.src = imgAttributes.src;\n    };\n\n    var _replacePlaceholderWithImage = function(imgPlaceholder, img, onreplaceCallback) {\n        var parentNode = imgPlaceholder.parentNode;\n        if (!!parentNode) {\n            parentNode.replaceChild(img, imgPlaceholder);\n            if (!!onreplaceCallback) {\n                onreplaceCallback.call(img);\n            }\n        }\n    };\n\n    var _resolveImageAttributes = function(imgPlaceholder) {\n        return {\n            src: imgPlaceholder.getAttribute(\"data-src\"),\n            alt: imgPlaceholder.getAttribute(\"data-alt\"),\n            title: imgPlaceholder.getAttribute(\"data-title\"),\n            srcset: imgPlaceholder.getAttribute(\"data-srcset\")\n        };\n    };\n\n    var _validateOptions = function(options) {\n        return options || {};\n    };\n\n    var _isVisible = function(placeholder, optionalThreshold) {\n        var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n        var threshold = optionalThreshold || 0;\n\n        return placeholder.getBoundingClientRect().top - windowInnerHeight <= threshold;\n    };\n\n    var _loadImgIfVisible = function(imgPlaceholder, options) {\n        var scrollEventCallback = function(e) {\n            if (_isVisible(imgPlaceholder, options.threshold)) {\n                lazyLoad(imgPlaceholder, options);\n\n                if (window.removeEventListener) {\n                    window.removeEventListener(e.type, scrollEventCallback, false);\n                } else {\n                    window.detachEvent(\"on\" + e.type, scrollEventCallback);\n                }\n            }\n        };\n\n        return scrollEventCallback;\n    };\n\n    /**\n     * Lazy loads image with img tag.\n     *\n     * @param {Object} imgPlaceholder The placeholder is a html node of any type (e.g. a span element).\n     *                                The node has to provide the data element data-src and data-alt.\n     *                                All other attributes are optional.\n     * @param {Object} options Optional object with following attributes:\n     *                           - onloadCallback:\n     *                                 Optional callback which is invoked after the image is loaded\n     *                                 successfully but before the actual replacement.\n     *                           - onerrorCallback:\n     *                                 Optional error handler which is invoked before the actual\n     *                                 replacement if the image could not be loaded.\n     *                           - onreplaceCallback\n     *                                 Optional callback which is invoked directly after the\n     *                                 replacement of the placeholder.\n     */\n    var lazyLoad = function(imgPlaceholder, options) {\n        var imgAttributes = _resolveImageAttributes(imgPlaceholder);\n        var validatedOptions = _validateOptions(options);\n\n        if (!!imgAttributes.src && (!!imgAttributes.alt || imgAttributes.alt === \"\")) {\n            _createImage(\n                imgPlaceholder,\n                imgAttributes,\n                validatedOptions.onloadCallback,\n                validatedOptions.onerrorCallback,\n                validatedOptions.onreplaceCallback\n            );\n        }\n    };\n\n    /**\n     * Registers the lazy loading event. If the placeholder becomes visible, the image\n     * will be loaded automatically.\n     *\n     * @param {Object} imgPlaceholder The placeholder is a html node of any type (e.g. a span element).\n     *                                The node has to provide the data element data-src and data-alt.\n     *                                All other attributes are optional.\n     * @param {Object} options Optional object of options.\n     */\n    var registerLazyLoad = function(imgPlaceholder, options) {\n        var validatedOptions = _validateOptions(options);\n        if (_isVisible(imgPlaceholder, validatedOptions.threshold)) {\n            lazyLoad(imgPlaceholder, options);\n        } else {\n            var loadImgIfVisible = _loadImgIfVisible(imgPlaceholder, validatedOptions);\n            if (window.addEventListener) {\n                window.addEventListener(\"scroll\", loadImgIfVisible, false);\n            } else {\n                window.attachEvent(\"onscroll\", loadImgIfVisible);\n            }\n        }\n    };\n\n    /**\n     * Registers the lazy loading by the defined class of the placeholder(s). If the\n     * placeholders become visible, the images will be loaded automatically.\n     *\n     * @param imgPlaceholderClass Class of the placeholder.\n     * @param {Object} options Optional object of options.\n     */\n    var registerLazyLoadByClass = function(imgPlaceholderClass, options) {\n        var placeholders = document.querySelectorAll(\".\" + imgPlaceholderClass);\n        for (var i = 0; i < placeholders.length; ++i) {\n            Justlazy.registerLazyLoad(placeholders[i], options);\n        }\n    };\n\n    return {\n        lazyLoad: lazyLoad,\n        registerLazyLoad: registerLazyLoad,\n        registerLazyLoadByClass: registerLazyLoadByClass\n    };\n}));\n","import FSymbol from \"./Symbol\";\r\nimport { equalsUnions } from \"./Util\";\r\nimport { compareUnions } from \"./Util\";\r\nexport function choice1Of2(v) {\r\n    return new Choice(\"Choice1Of2\", [v]);\r\n}\r\nexport function choice2Of2(v) {\r\n    return new Choice(\"Choice2Of2\", [v]);\r\n}\r\nvar Choice = (function () {\r\n    function Choice(t, d) {\r\n        this.Case = t;\r\n        this.Fields = d;\r\n    }\r\n    Object.defineProperty(Choice.prototype, \"valueIfChoice1\", {\r\n        get: function () {\r\n            return this.Case === \"Choice1Of2\" ? this.Fields[0] : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Choice.prototype, \"valueIfChoice2\", {\r\n        get: function () {\r\n            return this.Case === \"Choice2Of2\" ? this.Fields[0] : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Choice.prototype.Equals = function (other) {\r\n        return equalsUnions(this, other);\r\n    };\r\n    Choice.prototype.CompareTo = function (other) {\r\n        return compareUnions(this, other);\r\n    };\r\n    Choice.prototype[FSymbol.reflection] = function () {\r\n        return {\r\n            type: \"Microsoft.FSharp.Core.FSharpChoice\",\r\n            interfaces: [\"FSharpUnion\", \"System.IEquatable\", \"System.IComparable\"]\r\n        };\r\n    };\r\n    return Choice;\r\n}());\r\nexport default Choice;\r\n"]}