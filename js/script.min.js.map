{"version":3,"sources":["../node_modules/fable-core/Symbol.js","../node_modules/fable-core/Util.js","../node_modules/fable-powerpack/Result.js","../node_modules/fable-powerpack/Promise.js","../node_modules/fable-core/ListClass.js","../node_modules/fable-core/Seq.js","../node_modules/fable-core/Map.js","../node_modules/fable-core/Set.js","../node_modules/fable-core/Long.js","../node_modules/fable-core/String.js","../node_modules/fable-powerpack/Fetch.js","../node_modules/fable-core/AsyncBuilder.js","../node_modules/fable-core/Async.js","../laab.fsx","../node_modules/justlazy/src/justlazy.js","../node_modules/fable-core/Choice.js"],"names":["setType","fullName","cons","fableGlobal","types","set","GenericParam","definition","NonDeclaredType","getPropertyNames","obj","propertyMap","FSymbol","reflection","properties","Object","getOwnPropertyNames","toString","o","ToString","String","equals","x","y","getPrototypeOf","Equals","Array","isArray","length","i","ArrayBuffer","isView","byteLength","dv1","DataView","buffer","dv2","getUint8","Date","getTime","compare","CompareTo","j","b1","b2","equalsRecords","keys","equalsUnions","Case","Fields","compareUnions","res","_classCallCheck","instance","Constructor","TypeError","map","fn","a","Result","bind","ofArray","args","base","acc","List","__failIfNone","Error","concat","xs","delay","iter","Symbol","iterator","output","unfold","innerIter","hasFinished","cur","next","done","value","collect","f","compareWith","ys","nonZero","tryFind","map2","count","_a","empty","fold","reduce","tryHead","head","isEmpty","iter1","iter2","cur1","cur2","rangeStep","first","step","last","range","singleton","defaultValue","tree_sizeAux","m","tree_size","tree_find","comparer","k","tree_tryFind","c","Compare","tree_mem","tree_collapseLHS","stack","tail","listOfArray","MapTree","tree_mkIterator","s","started","tree_moveNext","current","tree_countAux","tree_count","tree_SetOne","n","SetTree","tree_SetNode","l","r","h","t","tree_compareStacks","l1","l2","$target8","n1k","t1","$target9","n1l","n1r","$target11","n2k","n2l","n2r","t2","emp","tree_compare","s1","s2","isLong","Long","fromInt","unsigned","cachedObj","cache","UINT_CACHE","fromBits","INT_CACHE","fromNumber","isNaN","isFinite","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","fromString","str","radix","RangeError","p","indexOf","substring","radixToPower","pow_dbl","result","size","Math","min","parseInt","power","mul","add","fromValue","val","low","high","toHex","abs","fsFormat","isObject","Number","Boolean","formatOnce","rep","replace","fsFormatRegExp","_","prefix","flags","pad","precision","format","toFixed","toPrecision","toExponential","JSON","stringify","v","from","err","join","toUpperCase","plusPrefix","ch","padLeft","makeFn","str2","test","_cont","_i","arguments","cont","len","isRight","_fetch","url","init","fetch","then","response","ok","status","statusText","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","onError","protectedBind","computation","binder","onSuccess","ex","protectedReturn","emptyContinuation","awaitPromise","fromContinuations","conts","catch","start","cancellationToken","startWithContinuations","startImmediate","continuation","exceptionContinuation","cancellationContinuation","Trampoline","defaultCancellationToken","ready","document","readyState","_arg1","fetchMy","loadme","post","post2","hidden","text","_arg2","findVisible","el","makeVisible","item","fluff","target","origin","querySelectorAll","id","getElementById","newVis","toload","arg00","reparseFun","postFirstContent","root","factory","module","exports","Justlazy","this","_createImage","imgPlaceholder","imgAttributes","options","img","createElement","progressive","onload","onloadCallback","call","_replacePlaceholderWithImage","onreplaceCallback","onerror","onerrorCallback","title","srcset","setAttribute","alt","src","parentNode","replaceChild","_resolveImageAttributes","getAttribute","_validateOptions","_isVisible","placeholder","optionalThreshold","windowInnerHeight","window","innerHeight","documentElement","clientHeight","threshold","getBoundingClientRect","top","_loadImgIfVisible","scrollEventCallback","e","lazyLoad","removeEventListener","type","detachEvent","validatedOptions","registerLazyLoad","loadImgIfVisible","addEventListener","attachEvent","registerLazyLoadByClass","imgPlaceholderClass","placeholders","globalObj","global","self","__FABLE_CORE__","Map","symbols","kind","generics","prototype","other","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","caseName","fields","_Symbol","interfaces","cases","Ok","ResultBuilder","Zero","left","right","Bind","get","_this","Return","_Promise","__exports","arg0","arg0_1","mapResult","a_1","bindResult","Promise","resolve","PromiseBuilder","seq","body","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","_iterator","return","guard","While","compensation","er","generator","f1","f2","reject","er_1","er_2","er_3","resource","TryFinally","Dispose","PromiseImpl","promise","tmp","Enumerator","MoveNext","Reset","FableMap","m2","seqCompareWith","kvp1","kvp2","tree","entries","seqMap","kv","values","has","delete","clear","FableSet","eq","neq","notEquals","lt","lessThan","lte","lessThanOrEqual","gt","greaterThan","gte","greaterThanOrEqual","comp","negate","absolute","sub","subtract","multiply","div","divide","mod","modulo","shl","shiftLeft","shr","shiftRight","shru","shiftRightUnsigned","toInt","toNumber","isZero","isNegative","radixLong","rem1","rem","remDiv","intval","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","isPositive","isOdd","isEven","thisNeg","otherNeg","not","ONE","addend","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","subtrahend","multiplier","TWO_PWR_24","divisor","approx","toUnsigned","UONE","NEG_ONE","halfThis","approx_1","max","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","and","or","xor","numBits","toSigned","toBytes","le","toBytesLE","toBytesBE","hi","lo","pow","TWO_PWR_16_DBL","callCount","maxTrampolineCallCount","setTimeout","AsyncBuilder","Combine","computation1","computation2","Delay","For","sequence","ReturnFrom","TryWith","catchHandler","ex2","Using","Choice","d"],"mappings":"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","file":"js/script.min.js","sourcesContent":["var fableGlobal = function () {\r\n    var globalObj = typeof window !== \"undefined\" ? window\r\n        : (typeof global !== \"undefined\" ? global\r\n            : (typeof self !== \"undefined\" ? self : {}));\r\n    if (typeof globalObj.__FABLE_CORE__ === \"undefined\") {\r\n        globalObj.__FABLE_CORE__ = {\r\n            types: new Map(),\r\n            symbols: {\r\n                reflection: Symbol(\"reflection\"),\r\n            }\r\n        };\r\n    }\r\n    return globalObj.__FABLE_CORE__;\r\n}();\r\nexport function setType(fullName, cons) {\r\n    fableGlobal.types.set(fullName, cons);\r\n}\r\nexport function getType(fullName) {\r\n    return fableGlobal.types.get(fullName);\r\n}\r\nexport default (fableGlobal.symbols);\r\n","import FSymbol from \"./Symbol\";\r\nvar NonDeclaredType = (function () {\r\n    function NonDeclaredType(kind, definition, generics) {\r\n        this.kind = kind;\r\n        this.definition = definition;\r\n        this.generics = generics;\r\n    }\r\n    NonDeclaredType.prototype.Equals = function (other) {\r\n        if (this.kind === other.kind && this.definition === other.definition) {\r\n            return typeof this.generics === \"object\"\r\n                ? equalsRecords(this.generics, other.generics)\r\n                : this.generics === other.generics;\r\n        }\r\n        return false;\r\n    };\r\n    return NonDeclaredType;\r\n}());\r\nexport { NonDeclaredType };\r\nexport var Any = new NonDeclaredType(\"Any\");\r\nexport var Unit = new NonDeclaredType(\"Unit\");\r\nexport function Option(t) {\r\n    return new NonDeclaredType(\"Option\", null, t);\r\n}\r\nfunction FableArray(t, isTypedArray) {\r\n    if (isTypedArray === void 0) { isTypedArray = false; }\r\n    var def = null, genArg = null;\r\n    if (isTypedArray) {\r\n        def = t;\r\n    }\r\n    else {\r\n        genArg = t;\r\n    }\r\n    return new NonDeclaredType(\"Array\", def, genArg);\r\n}\r\nexport { FableArray as Array };\r\nexport function Tuple(ts) {\r\n    return new NonDeclaredType(\"Tuple\", null, ts);\r\n}\r\nexport function GenericParam(definition) {\r\n    return new NonDeclaredType(\"GenericParam\", definition);\r\n}\r\nexport function Interface(definition) {\r\n    return new NonDeclaredType(\"Interface\", definition);\r\n}\r\nexport function makeGeneric(typeDef, genArgs) {\r\n    return new NonDeclaredType(\"GenericType\", typeDef, genArgs);\r\n}\r\nexport function isGeneric(typ) {\r\n    return typ instanceof NonDeclaredType && typ.kind === \"GenericType\";\r\n}\r\nexport function getDefinition(typ) {\r\n    return isGeneric(typ) ? typ.definition : typ;\r\n}\r\nexport function extendInfo(cons, info) {\r\n    var parent = Object.getPrototypeOf(cons.prototype);\r\n    if (typeof parent[FSymbol.reflection] === \"function\") {\r\n        var newInfo_1 = {}, parentInfo_1 = parent[FSymbol.reflection]();\r\n        Object.getOwnPropertyNames(info).forEach(function (k) {\r\n            var i = info[k];\r\n            if (typeof i === \"object\") {\r\n                newInfo_1[k] = Array.isArray(i)\r\n                    ? (parentInfo_1[k] || []).concat(i)\r\n                    : Object.assign(parentInfo_1[k] || {}, i);\r\n            }\r\n            else {\r\n                newInfo_1[k] = i;\r\n            }\r\n        });\r\n        return newInfo_1;\r\n    }\r\n    return info;\r\n}\r\nexport function hasInterface(obj, interfaceName) {\r\n    if (interfaceName === \"System.Collections.Generic.IEnumerable\") {\r\n        return typeof obj[Symbol.iterator] === \"function\";\r\n    }\r\n    else if (typeof obj[FSymbol.reflection] === \"function\") {\r\n        var interfaces = obj[FSymbol.reflection]().interfaces;\r\n        return Array.isArray(interfaces) && interfaces.indexOf(interfaceName) > -1;\r\n    }\r\n    return false;\r\n}\r\nexport function getPropertyNames(obj) {\r\n    if (obj == null) {\r\n        return [];\r\n    }\r\n    var propertyMap = typeof obj[FSymbol.reflection] === \"function\" ? obj[FSymbol.reflection]().properties || [] : obj;\r\n    return Object.getOwnPropertyNames(propertyMap);\r\n}\r\nexport function isArray(obj) {\r\n    return Array.isArray(obj) || ArrayBuffer.isView(obj);\r\n}\r\nexport function getRestParams(args, idx) {\r\n    for (var _len = args.length, restArgs = Array(_len > idx ? _len - idx : 0), _key = idx; _key < _len; _key++)\r\n        restArgs[_key - idx] = args[_key];\r\n    return restArgs;\r\n}\r\nexport function toString(o) {\r\n    return o != null && typeof o.ToString == \"function\" ? o.ToString() : String(o);\r\n}\r\nexport function hash(x) {\r\n    var s = JSON.stringify(x);\r\n    var h = 5381, i = 0, len = s.length;\r\n    while (i < len) {\r\n        h = (h * 33) ^ s.charCodeAt(i++);\r\n    }\r\n    return h;\r\n}\r\nexport function equals(x, y) {\r\n    if (x === y)\r\n        return true;\r\n    else if (x == null)\r\n        return y == null;\r\n    else if (y == null)\r\n        return false;\r\n    else if (Object.getPrototypeOf(x) !== Object.getPrototypeOf(y))\r\n        return false;\r\n    else if (typeof x.Equals === \"function\")\r\n        return x.Equals(y);\r\n    else if (Array.isArray(x)) {\r\n        if (x.length != y.length)\r\n            return false;\r\n        for (var i = 0; i < x.length; i++)\r\n            if (!equals(x[i], y[i]))\r\n                return false;\r\n        return true;\r\n    }\r\n    else if (ArrayBuffer.isView(x)) {\r\n        if (x.byteLength !== y.byteLength)\r\n            return false;\r\n        var dv1 = new DataView(x.buffer), dv2 = new DataView(y.buffer);\r\n        for (var i = 0; i < x.byteLength; i++)\r\n            if (dv1.getUint8(i) !== dv2.getUint8(i))\r\n                return false;\r\n        return true;\r\n    }\r\n    else if (x instanceof Date)\r\n        return x.getTime() == y.getTime();\r\n    else\r\n        return false;\r\n}\r\nexport function compare(x, y) {\r\n    if (x === y)\r\n        return 0;\r\n    if (x == null)\r\n        return y == null ? 0 : -1;\r\n    else if (y == null)\r\n        return 1;\r\n    else if (Object.getPrototypeOf(x) !== Object.getPrototypeOf(y))\r\n        return -1;\r\n    else if (typeof x.CompareTo === \"function\")\r\n        return x.CompareTo(y);\r\n    else if (Array.isArray(x)) {\r\n        if (x.length != y.length)\r\n            return x.length < y.length ? -1 : 1;\r\n        for (var i = 0, j = 0; i < x.length; i++)\r\n            if ((j = compare(x[i], y[i])) !== 0)\r\n                return j;\r\n        return 0;\r\n    }\r\n    else if (ArrayBuffer.isView(x)) {\r\n        if (x.byteLength != y.byteLength)\r\n            return x.byteLength < y.byteLength ? -1 : 1;\r\n        var dv1 = new DataView(x.buffer), dv2 = new DataView(y.buffer);\r\n        for (var i = 0, b1 = 0, b2 = 0; i < x.byteLength; i++) {\r\n            b1 = dv1.getUint8(i), b2 = dv2.getUint8(i);\r\n            if (b1 < b2)\r\n                return -1;\r\n            if (b1 > b2)\r\n                return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    else if (x instanceof Date)\r\n        return compare(x.getTime(), y.getTime());\r\n    else\r\n        return x < y ? -1 : 1;\r\n}\r\nexport function equalsRecords(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    else {\r\n        var keys = getPropertyNames(x);\r\n        for (var i = 0; i < keys.length; i++) {\r\n            if (!equals(x[keys[i]], y[keys[i]]))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexport function compareRecords(x, y) {\r\n    if (x === y) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var keys = getPropertyNames(x);\r\n        for (var i = 0; i < keys.length; i++) {\r\n            var res = compare(x[keys[i]], y[keys[i]]);\r\n            if (res !== 0)\r\n                return res;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nexport function equalsUnions(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    else if (x.Case !== y.Case) {\r\n        return false;\r\n    }\r\n    else {\r\n        for (var i = 0; i < x.Fields.length; i++) {\r\n            if (!equals(x.Fields[i], y.Fields[i]))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexport function compareUnions(x, y) {\r\n    if (x === y) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var res = compare(x.Case, y.Case);\r\n        if (res !== 0)\r\n            return res;\r\n        for (var i = 0; i < x.Fields.length; i++) {\r\n            res = compare(x.Fields[i], y.Fields[i]);\r\n            if (res !== 0)\r\n                return res;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nexport function createDisposable(f) {\r\n    return _a = {\r\n            Dispose: f\r\n        },\r\n        _a[FSymbol.reflection] = function () { return { interfaces: [\"System.IDisposable\"] }; },\r\n        _a;\r\n    var _a;\r\n}\r\nexport function createObj(fields) {\r\n    var iter = fields[Symbol.iterator]();\r\n    var cur = iter.next(), o = {};\r\n    while (!cur.done) {\r\n        o[cur.value[0]] = cur.value[1];\r\n        cur = iter.next();\r\n    }\r\n    return o;\r\n}\r\nexport function toPlainJsObj(source) {\r\n    if (source != null && source.constructor != Object) {\r\n        var target = {};\r\n        var props = Object.getOwnPropertyNames(source);\r\n        for (var i = 0; i < props.length; i++) {\r\n            target[props[i]] = source[props[i]];\r\n        }\r\n        var proto = Object.getPrototypeOf(source);\r\n        if (proto != null) {\r\n            props = Object.getOwnPropertyNames(proto);\r\n            for (var i = 0; i < props.length; i++) {\r\n                var prop = Object.getOwnPropertyDescriptor(proto, props[i]);\r\n                if (prop.value) {\r\n                    target[props[i]] = prop.value;\r\n                }\r\n                else if (prop.get) {\r\n                    target[props[i]] = prop.get.apply(source);\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n    else {\r\n        return source;\r\n    }\r\n}\r\nexport function round(value, digits) {\r\n    if (digits === void 0) { digits = 0; }\r\n    var m = Math.pow(10, digits);\r\n    var n = +(digits ? value * m : value).toFixed(8);\r\n    var i = Math.floor(n), f = n - i;\r\n    var e = 1e-8;\r\n    var r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 == 0) ? i : i + 1) : Math.round(n);\r\n    return digits ? r / m : r;\r\n}\r\nexport function randomNext(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\nexport function defaultArg(arg, defaultValue, f) {\r\n    return arg == null ? defaultValue : (f != null ? f(arg) : arg);\r\n}\r\n","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { setType } from \"fable-core/Symbol\";\nimport _Symbol from \"fable-core/Symbol\";\nimport { compareUnions, equalsUnions, GenericParam } from \"fable-core/Util\";\nexport var Result = function () {\n    function Result(caseName, fields) {\n        _classCallCheck(this, Result);\n\n        this.Case = caseName;\n        this.Fields = fields;\n    }\n\n    _createClass(Result, [{\n        key: _Symbol.reflection,\n        value: function () {\n            return {\n                type: \"Fable.PowerPack.Result.Result\",\n                interfaces: [\"FSharpUnion\", \"System.IEquatable\", \"System.IComparable\"],\n                cases: {\n                    Error: [GenericParam(\"B\")],\n                    Ok: [GenericParam(\"A\")]\n                }\n            };\n        }\n    }, {\n        key: \"Equals\",\n        value: function (other) {\n            return equalsUnions(this, other);\n        }\n    }, {\n        key: \"CompareTo\",\n        value: function (other) {\n            return compareUnions(this, other);\n        }\n    }]);\n\n    return Result;\n}();\nsetType(\"Fable.PowerPack.Result.Result\", Result);\nexport function unwrapResult(a) {\n    if (a.Case === \"Error\") {\n        throw a.Fields[0];\n    } else {\n        return a.Fields[0];\n    }\n}\nexport function map(fn, a) {\n    if (a.Case === \"Error\") {\n        return new Result(\"Error\", [a.Fields[0]]);\n    } else {\n        return new Result(\"Ok\", [fn(a.Fields[0])]);\n    }\n}\nexport function bind(fn, a) {\n    if (a.Case === \"Error\") {\n        return new Result(\"Error\", [a.Fields[0]]);\n    } else {\n        return fn(a.Fields[0]);\n    }\n}\nexport var ResultBuilder = function () {\n    _createClass(ResultBuilder, [{\n        key: _Symbol.reflection,\n        value: function () {\n            return {\n                type: \"Fable.PowerPack.Result.ResultBuilder\",\n                properties: {\n                    Zero: \"function\"\n                }\n            };\n        }\n    }]);\n\n    function ResultBuilder() {\n        _classCallCheck(this, ResultBuilder);\n    }\n\n    _createClass(ResultBuilder, [{\n        key: \"Bind\",\n        value: function (m, f) {\n            return bind(f, m);\n        }\n    }, {\n        key: \"Return\",\n        value: function (a) {\n            return new Result(\"Ok\", [a]);\n        }\n    }, {\n        key: \"ReturnFrom\",\n        value: function (m) {\n            return m;\n        }\n    }, {\n        key: \"Combine\",\n        value: function (left, right) {\n            return this.Bind(left, function () {\n                return right;\n            });\n        }\n    }, {\n        key: \"Zero\",\n        get: function () {\n            var _this = this;\n\n            return function (arg00) {\n                return _this.Return(arg00);\n            };\n        }\n    }]);\n\n    return ResultBuilder;\n}();\nsetType(\"Fable.PowerPack.Result.ResultBuilder\", ResultBuilder);\nexport var result = new ResultBuilder();\n//# sourceMappingURL=Result.js.map","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { map, Result } from \"./Result\";\nimport { setType } from \"fable-core/Symbol\";\nimport _Symbol from \"fable-core/Symbol\";\n\nvar _Promise = function (__exports) {\n    var result = __exports.result = function (a) {\n        return a.then(function (arg0) {\n            return new Result(\"Ok\", [arg0]);\n        }, function (arg0_1) {\n            return new Result(\"Error\", [arg0_1]);\n        });\n    };\n\n    var mapResult = __exports.mapResult = function (fn, a) {\n        return a.then(function (a_1) {\n            return map(fn, a_1);\n        });\n    };\n\n    var bindResult = __exports.bindResult = function (fn, a) {\n        return a.then(function (a_1) {\n            return a_1.Case === \"Error\" ? Promise.resolve(new Result(\"Error\", [a_1.Fields[0]])) : result(fn(a_1.Fields[0]));\n        });\n    };\n\n    var PromiseBuilder = __exports.PromiseBuilder = function () {\n        _createClass(PromiseBuilder, [{\n            key: _Symbol.reflection,\n            value: function () {\n                return {\n                    type: \"Fable.PowerPack.Promise.PromiseBuilder\",\n                    properties: {}\n                };\n            }\n        }]);\n\n        function PromiseBuilder() {\n            _classCallCheck(this, PromiseBuilder);\n        }\n\n        _createClass(PromiseBuilder, [{\n            key: \"For\",\n            value: function (seq, body) {\n                var p = Promise.resolve(null);\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    var _loop = function _loop() {\n                        var a = _step.value;\n                        p = p.then(function () {\n                            return body(a);\n                        });\n                    };\n\n                    for (var _iterator = seq[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        _loop();\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                return p;\n            }\n        }, {\n            key: \"While\",\n            value: function (guard, p) {\n                var _this = this;\n\n                if (guard(null)) {\n                    return p.then(function () {\n                        return _this.While(guard, p);\n                    });\n                } else {\n                    return Promise.resolve(null);\n                }\n            }\n        }, {\n            key: \"TryFinally\",\n            value: function (p, compensation) {\n                return p.then(function (x) {\n                    compensation(null);\n                    return x;\n                }, function (er) {\n                    compensation(null);\n                    throw er;\n                });\n            }\n        }, {\n            key: \"Delay\",\n            value: function (generator) {\n                return {\n                    then: function then(f1, f2) {\n                        try {\n                            return generator(null).then(f1, f2);\n                        } catch (er) {\n                            if (f2 == null) {\n                                return Promise.reject(er);\n                            } else {\n                                try {\n                                    return Promise.resolve(f2(er));\n                                } catch (er_1) {\n                                    return Promise.reject(er_1);\n                                }\n                            }\n                        }\n                    },\n                    catch: function _catch(f) {\n                        try {\n                            return generator(null).catch(f);\n                        } catch (er_2) {\n                            try {\n                                return Promise.resolve(f(er_2));\n                            } catch (er_3) {\n                                return Promise.reject(er_3);\n                            }\n                        }\n                    }\n                };\n            }\n        }, {\n            key: \"Using\",\n            value: function (resource, binder) {\n                return this.TryFinally(binder(resource), function () {\n                    resource.Dispose();\n                });\n            }\n        }]);\n\n        return PromiseBuilder;\n    }();\n\n    setType(\"Fable.PowerPack.Promise.PromiseBuilder\", PromiseBuilder);\n    return __exports;\n}({});\n\nexport { _Promise as Promise };\nexport var PromiseImpl = function (__exports) {\n    var promise = __exports.promise = new _Promise.PromiseBuilder();\n    return __exports;\n}({});\n//# sourceMappingURL=Promise.js.map","import FSymbol from \"./Symbol\";\r\nimport { toString } from \"./Util\";\r\nimport { equals } from \"./Util\";\r\nimport { compare } from \"./Util\";\r\nexport function ofArray(args, base) {\r\n    var acc = base || new List();\r\n    for (var i = args.length - 1; i >= 0; i--) {\r\n        acc = new List(args[i], acc);\r\n    }\r\n    return acc;\r\n}\r\nvar List = (function () {\r\n    function List(head, tail) {\r\n        this.head = head;\r\n        this.tail = tail;\r\n    }\r\n    List.prototype.ToString = function () {\r\n        return \"[\" + Array.from(this).map(toString).join(\"; \") + \"]\";\r\n    };\r\n    List.prototype.Equals = function (x) {\r\n        if (this === x) {\r\n            return true;\r\n        }\r\n        else {\r\n            var iter1 = this[Symbol.iterator](), iter2 = x[Symbol.iterator]();\r\n            for (;;) {\r\n                var cur1 = iter1.next(), cur2 = iter2.next();\r\n                if (cur1.done)\r\n                    return cur2.done ? true : false;\r\n                else if (cur2.done)\r\n                    return false;\r\n                else if (!equals(cur1.value, cur2.value))\r\n                    return false;\r\n            }\r\n        }\r\n    };\r\n    List.prototype.CompareTo = function (x) {\r\n        if (this === x) {\r\n            return 0;\r\n        }\r\n        else {\r\n            var acc = 0;\r\n            var iter1 = this[Symbol.iterator](), iter2 = x[Symbol.iterator]();\r\n            for (;;) {\r\n                var cur1 = iter1.next(), cur2 = iter2.next();\r\n                if (cur1.done)\r\n                    return cur2.done ? acc : -1;\r\n                else if (cur2.done)\r\n                    return 1;\r\n                else {\r\n                    acc = compare(cur1.value, cur2.value);\r\n                    if (acc != 0)\r\n                        return acc;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(List.prototype, \"length\", {\r\n        get: function () {\r\n            var cur = this, acc = 0;\r\n            while (cur.tail != null) {\r\n                cur = cur.tail;\r\n                acc++;\r\n            }\r\n            return acc;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    List.prototype[Symbol.iterator] = function () {\r\n        var cur = this;\r\n        return {\r\n            next: function () {\r\n                var tmp = cur;\r\n                cur = cur.tail;\r\n                return { done: tmp.tail == null, value: tmp.head };\r\n            }\r\n        };\r\n    };\r\n    List.prototype[FSymbol.reflection] = function () {\r\n        return {\r\n            type: \"Microsoft.FSharp.Collections.FSharpList\",\r\n            interfaces: [\"System.IEquatable\", \"System.IComparable\"]\r\n        };\r\n    };\r\n    return List;\r\n}());\r\nexport default List;\r\n","import { equals } from \"./Util\";\r\nimport { compare } from \"./Util\";\r\nimport { permute as arrayPermute } from \"./Array\";\r\nimport List from \"./ListClass\";\r\nvar Enumerator = (function () {\r\n    function Enumerator(iter) {\r\n        this.iter = iter;\r\n    }\r\n    Enumerator.prototype.MoveNext = function () {\r\n        var cur = this.iter.next();\r\n        this.current = cur.value;\r\n        return !cur.done;\r\n    };\r\n    Object.defineProperty(Enumerator.prototype, \"Current\", {\r\n        get: function () {\r\n            return this.current;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Enumerator.prototype.Reset = function () {\r\n        throw new Error(\"JS iterators cannot be reset\");\r\n    };\r\n    Enumerator.prototype.Dispose = function () { };\r\n    return Enumerator;\r\n}());\r\nexport { Enumerator };\r\nexport function getEnumerator(o) {\r\n    return typeof o.GetEnumerator === \"function\"\r\n        ? o.GetEnumerator() : new Enumerator(o[Symbol.iterator]());\r\n}\r\nexport function toIterator(en) {\r\n    return {\r\n        next: function () {\r\n            return en.MoveNext()\r\n                ? { done: false, value: en.Current }\r\n                : { done: true, value: null };\r\n        }\r\n    };\r\n}\r\nfunction __failIfNone(res) {\r\n    if (res == null)\r\n        throw new Error(\"Seq did not contain any matching element\");\r\n    return res;\r\n}\r\nexport function toList(xs) {\r\n    return foldBack(function (x, acc) {\r\n        return new List(x, acc);\r\n    }, xs, new List());\r\n}\r\nexport function ofList(xs) {\r\n    return delay(function () { return unfold(function (x) { return x.tail != null ? [x.head, x.tail] : null; }, xs); });\r\n}\r\nexport function ofArray(xs) {\r\n    return delay(function () { return unfold(function (i) { return i < xs.length ? [xs[i], i + 1] : null; }, 0); });\r\n}\r\nexport function append(xs, ys) {\r\n    return delay(function () {\r\n        var firstDone = false;\r\n        var i = xs[Symbol.iterator]();\r\n        var iters = [i, null];\r\n        return unfold(function () {\r\n            var cur;\r\n            if (!firstDone) {\r\n                cur = iters[0].next();\r\n                if (!cur.done) {\r\n                    return [cur.value, iters];\r\n                }\r\n                else {\r\n                    firstDone = true;\r\n                    iters = [null, ys[Symbol.iterator]()];\r\n                }\r\n            }\r\n            cur = iters[1].next();\r\n            return !cur.done ? [cur.value, iters] : null;\r\n        }, iters);\r\n    });\r\n}\r\nexport function average(xs) {\r\n    var count = 1;\r\n    var sum = reduce(function (acc, x) {\r\n        count++;\r\n        return acc + x;\r\n    }, xs);\r\n    return sum / count;\r\n}\r\nexport function averageBy(f, xs) {\r\n    var count = 1;\r\n    var sum = reduce(function (acc, x) {\r\n        count++;\r\n        return (count === 2 ? f(acc) : acc) + f(x);\r\n    }, xs);\r\n    return sum / count;\r\n}\r\nexport function concat(xs) {\r\n    return delay(function () {\r\n        var iter = xs[Symbol.iterator]();\r\n        var output = null;\r\n        return unfold(function (innerIter) {\r\n            var hasFinished = false;\r\n            while (!hasFinished) {\r\n                if (innerIter == null) {\r\n                    var cur = iter.next();\r\n                    if (!cur.done) {\r\n                        innerIter = cur.value[Symbol.iterator]();\r\n                    }\r\n                    else {\r\n                        hasFinished = true;\r\n                    }\r\n                }\r\n                else {\r\n                    var cur = innerIter.next();\r\n                    if (!cur.done) {\r\n                        output = cur.value;\r\n                        hasFinished = true;\r\n                    }\r\n                    else {\r\n                        innerIter = null;\r\n                    }\r\n                }\r\n            }\r\n            return innerIter != null && output != null ? [output, innerIter] : null;\r\n        }, null);\r\n    });\r\n}\r\nexport function collect(f, xs) {\r\n    return concat(map(f, xs));\r\n}\r\nexport function choose(f, xs) {\r\n    var trySkipToNext = function (iter) {\r\n        var cur = iter.next();\r\n        if (!cur.done) {\r\n            var y = f(cur.value);\r\n            return y != null ? [y, iter] : trySkipToNext(iter);\r\n        }\r\n        return void 0;\r\n    };\r\n    return delay(function () {\r\n        return unfold(function (iter) {\r\n            return trySkipToNext(iter);\r\n        }, xs[Symbol.iterator]());\r\n    });\r\n}\r\nexport function compareWith(f, xs, ys) {\r\n    var nonZero = tryFind(function (i) { return i != 0; }, map2(function (x, y) { return f(x, y); }, xs, ys));\r\n    return nonZero != null ? nonZero : count(xs) - count(ys);\r\n}\r\nexport function delay(f) {\r\n    return _a = {},\r\n        _a[Symbol.iterator] = function () { return f()[Symbol.iterator](); },\r\n        _a;\r\n    var _a;\r\n}\r\nexport function empty() {\r\n    return unfold(function () { return void 0; });\r\n}\r\nexport function enumerateWhile(cond, xs) {\r\n    return concat(unfold(function () { return cond() ? [xs, true] : null; }));\r\n}\r\nexport function enumerateThenFinally(xs, finalFn) {\r\n    return delay(function () {\r\n        var iter;\r\n        try {\r\n            iter = xs[Symbol.iterator]();\r\n        }\r\n        catch (err) {\r\n            return void 0;\r\n        }\r\n        finally {\r\n            finalFn();\r\n        }\r\n        return unfold(function (iter) {\r\n            try {\r\n                var cur = iter.next();\r\n                return !cur.done ? [cur.value, iter] : null;\r\n            }\r\n            catch (err) {\r\n                return void 0;\r\n            }\r\n            finally {\r\n                finalFn();\r\n            }\r\n        }, iter);\r\n    });\r\n}\r\nexport function enumerateUsing(disp, work) {\r\n    var isDisposed = false;\r\n    var disposeOnce = function () {\r\n        if (!isDisposed) {\r\n            isDisposed = true;\r\n            disp.Dispose();\r\n        }\r\n    };\r\n    try {\r\n        return enumerateThenFinally(work(disp), disposeOnce);\r\n    }\r\n    catch (err) {\r\n        return void 0;\r\n    }\r\n    finally {\r\n        disposeOnce();\r\n    }\r\n}\r\nexport function exactlyOne(xs) {\r\n    var iter = xs[Symbol.iterator]();\r\n    var fst = iter.next();\r\n    if (fst.done)\r\n        throw new Error(\"Seq was empty\");\r\n    var snd = iter.next();\r\n    if (!snd.done)\r\n        throw new Error(\"Seq had multiple items\");\r\n    return fst.value;\r\n}\r\nexport function except(itemsToExclude, source) {\r\n    var exclusionItems = Array.from(itemsToExclude);\r\n    var testIsNotInExclusionItems = function (element) { return !exclusionItems.some(function (excludedItem) { return equals(excludedItem, element); }); };\r\n    return filter(testIsNotInExclusionItems, source);\r\n}\r\nexport function exists(f, xs) {\r\n    function aux(iter) {\r\n        var cur = iter.next();\r\n        return !cur.done && (f(cur.value) || aux(iter));\r\n    }\r\n    return aux(xs[Symbol.iterator]());\r\n}\r\nexport function exists2(f, xs, ys) {\r\n    function aux(iter1, iter2) {\r\n        var cur1 = iter1.next(), cur2 = iter2.next();\r\n        return !cur1.done && !cur2.done && (f(cur1.value, cur2.value) || aux(iter1, iter2));\r\n    }\r\n    return aux(xs[Symbol.iterator](), ys[Symbol.iterator]());\r\n}\r\nexport function filter(f, xs) {\r\n    function trySkipToNext(iter) {\r\n        var cur = iter.next();\r\n        while (!cur.done) {\r\n            if (f(cur.value)) {\r\n                return [cur.value, iter];\r\n            }\r\n            cur = iter.next();\r\n        }\r\n        return void 0;\r\n    }\r\n    return delay(function () { return unfold(trySkipToNext, xs[Symbol.iterator]()); });\r\n}\r\nexport function where(f, xs) {\r\n    return filter(f, xs);\r\n}\r\nexport function fold(f, acc, xs) {\r\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\r\n        return xs.reduce(f, acc);\r\n    }\r\n    else {\r\n        var cur = void 0;\r\n        for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n            cur = iter.next();\r\n            if (cur.done)\r\n                break;\r\n            acc = f(acc, cur.value, i);\r\n        }\r\n        return acc;\r\n    }\r\n}\r\nexport function foldBack(f, xs, acc) {\r\n    var arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\r\n    for (var i = arr.length - 1; i >= 0; i--) {\r\n        acc = f(arr[i], acc, i);\r\n    }\r\n    return acc;\r\n}\r\nexport function fold2(f, acc, xs, ys) {\r\n    var iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();\r\n    var cur1, cur2;\r\n    for (var i = 0;; i++) {\r\n        cur1 = iter1.next();\r\n        cur2 = iter2.next();\r\n        if (cur1.done || cur2.done) {\r\n            break;\r\n        }\r\n        acc = f(acc, cur1.value, cur2.value, i);\r\n    }\r\n    return acc;\r\n}\r\nexport function foldBack2(f, xs, ys, acc) {\r\n    var ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\r\n    var ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);\r\n    for (var i = ar1.length - 1; i >= 0; i--) {\r\n        acc = f(ar1[i], ar2[i], acc, i);\r\n    }\r\n    return acc;\r\n}\r\nexport function forAll(f, xs) {\r\n    return fold(function (acc, x) { return acc && f(x); }, true, xs);\r\n}\r\nexport function forAll2(f, xs, ys) {\r\n    return fold2(function (acc, x, y) { return acc && f(x, y); }, true, xs, ys);\r\n}\r\nexport function tryHead(xs) {\r\n    var iter = xs[Symbol.iterator]();\r\n    var cur = iter.next();\r\n    return cur.done ? null : cur.value;\r\n}\r\nexport function head(xs) {\r\n    return __failIfNone(tryHead(xs));\r\n}\r\nexport function initialize(n, f) {\r\n    return delay(function () {\r\n        return unfold(function (i) { return i < n ? [f(i), i + 1] : null; }, 0);\r\n    });\r\n}\r\nexport function initializeInfinite(f) {\r\n    return delay(function () {\r\n        return unfold(function (i) { return [f(i), i + 1]; }, 0);\r\n    });\r\n}\r\nexport function tryItem(i, xs) {\r\n    if (i < 0)\r\n        return null;\r\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs))\r\n        return i < xs.length ? xs[i] : null;\r\n    for (var j = 0, iter = xs[Symbol.iterator]();; j++) {\r\n        var cur = iter.next();\r\n        if (cur.done)\r\n            return null;\r\n        if (j === i)\r\n            return cur.value;\r\n    }\r\n}\r\nexport function item(i, xs) {\r\n    return __failIfNone(tryItem(i, xs));\r\n}\r\nexport function iterate(f, xs) {\r\n    fold(function (_, x) { return f(x); }, null, xs);\r\n}\r\nexport function iterate2(f, xs, ys) {\r\n    fold2(function (_, x, y) { return f(x, y); }, null, xs, ys);\r\n}\r\nexport function iterateIndexed(f, xs) {\r\n    fold(function (_, x, i) { return f(i, x); }, null, xs);\r\n}\r\nexport function iterateIndexed2(f, xs, ys) {\r\n    fold2(function (_, x, y, i) { return f(i, x, y); }, null, xs, ys);\r\n}\r\nexport function isEmpty(xs) {\r\n    var i = xs[Symbol.iterator]();\r\n    return i.next().done;\r\n}\r\nexport function tryLast(xs) {\r\n    try {\r\n        return reduce(function (_, x) { return x; }, xs);\r\n    }\r\n    catch (err) {\r\n        return null;\r\n    }\r\n}\r\nexport function last(xs) {\r\n    return __failIfNone(tryLast(xs));\r\n}\r\nexport function count(xs) {\r\n    return Array.isArray(xs) || ArrayBuffer.isView(xs)\r\n        ? xs.length\r\n        : fold(function (acc, x) { return acc + 1; }, 0, xs);\r\n}\r\nexport function map(f, xs) {\r\n    return delay(function () { return unfold(function (iter) {\r\n        var cur = iter.next();\r\n        return !cur.done ? [f(cur.value), iter] : null;\r\n    }, xs[Symbol.iterator]()); });\r\n}\r\nexport function mapIndexed(f, xs) {\r\n    return delay(function () {\r\n        var i = 0;\r\n        return unfold(function (iter) {\r\n            var cur = iter.next();\r\n            return !cur.done ? [f(i++, cur.value), iter] : null;\r\n        }, xs[Symbol.iterator]());\r\n    });\r\n}\r\nexport function map2(f, xs, ys) {\r\n    return delay(function () {\r\n        var iter1 = xs[Symbol.iterator]();\r\n        var iter2 = ys[Symbol.iterator]();\r\n        return unfold(function () {\r\n            var cur1 = iter1.next(), cur2 = iter2.next();\r\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), null] : null;\r\n        });\r\n    });\r\n}\r\nexport function mapIndexed2(f, xs, ys) {\r\n    return delay(function () {\r\n        var i = 0;\r\n        var iter1 = xs[Symbol.iterator]();\r\n        var iter2 = ys[Symbol.iterator]();\r\n        return unfold(function () {\r\n            var cur1 = iter1.next(), cur2 = iter2.next();\r\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), null] : null;\r\n        });\r\n    });\r\n}\r\nexport function map3(f, xs, ys, zs) {\r\n    return delay(function () {\r\n        var iter1 = xs[Symbol.iterator]();\r\n        var iter2 = ys[Symbol.iterator]();\r\n        var iter3 = zs[Symbol.iterator]();\r\n        return unfold(function () {\r\n            var cur1 = iter1.next(), cur2 = iter2.next(), cur3 = iter3.next();\r\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), null] : null;\r\n        });\r\n    });\r\n}\r\nexport function mapFold(f, acc, xs) {\r\n    var result = [];\r\n    var r;\r\n    var cur;\r\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n        cur = iter.next();\r\n        if (cur.done)\r\n            break;\r\n        _a = f(acc, cur.value), r = _a[0], acc = _a[1];\r\n        result.push(r);\r\n    }\r\n    return [result, acc];\r\n    var _a;\r\n}\r\nexport function mapFoldBack(f, xs, acc) {\r\n    var arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\r\n    var result = [];\r\n    var r;\r\n    for (var i = arr.length - 1; i >= 0; i--) {\r\n        _a = f(arr[i], acc), r = _a[0], acc = _a[1];\r\n        result.push(r);\r\n    }\r\n    return [result, acc];\r\n    var _a;\r\n}\r\nexport function max(xs) {\r\n    return reduce(function (acc, x) { return compare(acc, x) === 1 ? acc : x; }, xs);\r\n}\r\nexport function maxBy(f, xs) {\r\n    return reduce(function (acc, x) { return compare(f(acc), f(x)) === 1 ? acc : x; }, xs);\r\n}\r\nexport function min(xs) {\r\n    return reduce(function (acc, x) { return compare(acc, x) === -1 ? acc : x; }, xs);\r\n}\r\nexport function minBy(f, xs) {\r\n    return reduce(function (acc, x) { return compare(f(acc), f(x)) === -1 ? acc : x; }, xs);\r\n}\r\nexport function pairwise(xs) {\r\n    return skip(2, scan(function (last, next) { return [last[1], next]; }, [0, 0], xs));\r\n}\r\nexport function permute(f, xs) {\r\n    return ofArray(arrayPermute(f, Array.from(xs)));\r\n}\r\nexport function rangeStep(first, step, last) {\r\n    if (step === 0)\r\n        throw new Error(\"Step cannot be 0\");\r\n    return delay(function () { return unfold(function (x) { return step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : null; }, first); });\r\n}\r\nexport function rangeChar(first, last) {\r\n    return delay(function () { return unfold(function (x) { return x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : null; }, first); });\r\n}\r\nexport function range(first, last) {\r\n    return rangeStep(first, 1, last);\r\n}\r\nexport function readOnly(xs) {\r\n    return map(function (x) { return x; }, xs);\r\n}\r\nexport function reduce(f, xs) {\r\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs))\r\n        return xs.reduce(f);\r\n    var iter = xs[Symbol.iterator]();\r\n    var cur = iter.next();\r\n    if (cur.done)\r\n        throw new Error(\"Seq was empty\");\r\n    var acc = cur.value;\r\n    for (;;) {\r\n        cur = iter.next();\r\n        if (cur.done)\r\n            break;\r\n        acc = f(acc, cur.value);\r\n    }\r\n    return acc;\r\n}\r\nexport function reduceBack(f, xs) {\r\n    var ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\r\n    if (ar.length === 0)\r\n        throw new Error(\"Seq was empty\");\r\n    var acc = ar[ar.length - 1];\r\n    for (var i = ar.length - 2; i >= 0; i--)\r\n        acc = f(ar[i], acc, i);\r\n    return acc;\r\n}\r\nexport function replicate(n, x) {\r\n    return initialize(n, function () { return x; });\r\n}\r\nexport function reverse(xs) {\r\n    var ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\r\n    return ofArray(ar.reverse());\r\n}\r\nexport function scan(f, seed, xs) {\r\n    return delay(function () {\r\n        var iter = xs[Symbol.iterator]();\r\n        return unfold(function (acc) {\r\n            if (acc == null)\r\n                return [seed, seed];\r\n            var cur = iter.next();\r\n            if (!cur.done) {\r\n                acc = f(acc, cur.value);\r\n                return [acc, acc];\r\n            }\r\n            return void 0;\r\n        }, null);\r\n    });\r\n}\r\nexport function scanBack(f, xs, seed) {\r\n    return reverse(scan(function (acc, x) { return f(x, acc); }, seed, reverse(xs)));\r\n}\r\nexport function singleton(x) {\r\n    return unfold(function (x) { return x != null ? [x, null] : null; }, x);\r\n}\r\nexport function skip(n, xs) {\r\n    return _a = {},\r\n        _a[Symbol.iterator] = function () {\r\n            var iter = xs[Symbol.iterator]();\r\n            for (var i = 1; i <= n; i++)\r\n                if (iter.next().done)\r\n                    throw new Error(\"Seq has not enough elements\");\r\n            return iter;\r\n        },\r\n        _a;\r\n    var _a;\r\n}\r\nexport function skipWhile(f, xs) {\r\n    return delay(function () {\r\n        var hasPassed = false;\r\n        return filter(function (x) { return hasPassed || (hasPassed = !f(x)); }, xs);\r\n    });\r\n}\r\nexport function sortWith(f, xs) {\r\n    var ys = Array.from(xs);\r\n    return ofArray(ys.sort(f));\r\n}\r\nexport function sum(xs) {\r\n    return fold(function (acc, x) { return acc + x; }, 0, xs);\r\n}\r\nexport function sumBy(f, xs) {\r\n    return fold(function (acc, x) { return acc + f(x); }, 0, xs);\r\n}\r\nexport function tail(xs) {\r\n    var iter = xs[Symbol.iterator]();\r\n    var cur = iter.next();\r\n    if (cur.done)\r\n        throw new Error(\"Seq was empty\");\r\n    return _a = {},\r\n        _a[Symbol.iterator] = function () { return iter; },\r\n        _a;\r\n    var _a;\r\n}\r\nexport function take(n, xs, truncate) {\r\n    if (truncate === void 0) { truncate = false; }\r\n    return delay(function () {\r\n        var iter = xs[Symbol.iterator]();\r\n        return unfold(function (i) {\r\n            if (i < n) {\r\n                var cur = iter.next();\r\n                if (!cur.done)\r\n                    return [cur.value, i + 1];\r\n                if (!truncate)\r\n                    throw new Error(\"Seq has not enough elements\");\r\n            }\r\n            return void 0;\r\n        }, 0);\r\n    });\r\n}\r\nexport function truncate(n, xs) {\r\n    return take(n, xs, true);\r\n}\r\nexport function takeWhile(f, xs) {\r\n    return delay(function () {\r\n        var iter = xs[Symbol.iterator]();\r\n        return unfold(function (i) {\r\n            var cur = iter.next();\r\n            if (!cur.done && f(cur.value))\r\n                return [cur.value, null];\r\n            return void 0;\r\n        }, 0);\r\n    });\r\n}\r\nexport function tryFind(f, xs, defaultValue) {\r\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n        var cur = iter.next();\r\n        if (cur.done)\r\n            return defaultValue === void 0 ? null : defaultValue;\r\n        if (f(cur.value, i))\r\n            return cur.value;\r\n    }\r\n}\r\nexport function find(f, xs) {\r\n    return __failIfNone(tryFind(f, xs));\r\n}\r\nexport function tryFindBack(f, xs, defaultValue) {\r\n    var match = null;\r\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n        var cur = iter.next();\r\n        if (cur.done)\r\n            return match === null ? (defaultValue === void 0 ? null : defaultValue) : match;\r\n        if (f(cur.value, i))\r\n            match = cur.value;\r\n    }\r\n}\r\nexport function findBack(f, xs) {\r\n    return __failIfNone(tryFindBack(f, xs));\r\n}\r\nexport function tryFindIndex(f, xs) {\r\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n        var cur = iter.next();\r\n        if (cur.done)\r\n            return null;\r\n        if (f(cur.value, i))\r\n            return i;\r\n    }\r\n}\r\nexport function findIndex(f, xs) {\r\n    return __failIfNone(tryFindIndex(f, xs));\r\n}\r\nexport function tryFindIndexBack(f, xs) {\r\n    var match = -1;\r\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n        var cur = iter.next();\r\n        if (cur.done)\r\n            return match === -1 ? null : match;\r\n        if (f(cur.value, i))\r\n            match = i;\r\n    }\r\n}\r\nexport function findIndexBack(f, xs) {\r\n    return __failIfNone(tryFindIndexBack(f, xs));\r\n}\r\nexport function tryPick(f, xs) {\r\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\r\n        var cur = iter.next();\r\n        if (cur.done)\r\n            break;\r\n        var y = f(cur.value, i);\r\n        if (y != null)\r\n            return y;\r\n    }\r\n    return void 0;\r\n}\r\nexport function pick(f, xs) {\r\n    return __failIfNone(tryPick(f, xs));\r\n}\r\nexport function unfold(f, acc) {\r\n    return _a = {},\r\n        _a[Symbol.iterator] = function () {\r\n            return {\r\n                next: function () {\r\n                    var res = f(acc);\r\n                    if (res != null) {\r\n                        acc = res[1];\r\n                        return { done: false, value: res[0] };\r\n                    }\r\n                    return { done: true };\r\n                }\r\n            };\r\n        },\r\n        _a;\r\n    var _a;\r\n}\r\nexport function zip(xs, ys) {\r\n    return map2(function (x, y) { return [x, y]; }, xs, ys);\r\n}\r\nexport function zip3(xs, ys, zs) {\r\n    return map3(function (x, y, z) { return [x, y, z]; }, xs, ys, zs);\r\n}\r\n","import List from \"./ListClass\";\r\nimport { ofArray as listOfArray } from \"./ListClass\";\r\nimport { toString } from \"./Util\";\r\nimport { equals } from \"./Util\";\r\nimport { compare } from \"./Util\";\r\nimport GenericComparer from \"./GenericComparer\";\r\nimport FSymbol from \"./Symbol\";\r\nimport { map as seqMap } from \"./Seq\";\r\nimport { fold as seqFold } from \"./Seq\";\r\nimport { pick as seqPick } from \"./Seq\";\r\nimport { tryPick as seqTryPick } from \"./Seq\";\r\nimport { compareWith as seqCompareWith } from \"./Seq\";\r\nexport function groupBy(f, xs) {\r\n    var keys = [], iter = xs[Symbol.iterator]();\r\n    var acc = create(), cur = iter.next();\r\n    while (!cur.done) {\r\n        var k = f(cur.value), vs = tryFind(k, acc);\r\n        if (vs == null) {\r\n            keys.push(k);\r\n            acc = add(k, [cur.value], acc);\r\n        }\r\n        else {\r\n            vs.push(cur.value);\r\n        }\r\n        cur = iter.next();\r\n    }\r\n    return keys.map(function (k) { return [k, acc.get(k)]; });\r\n}\r\nexport function countBy(f, xs) {\r\n    return groupBy(f, xs).map(function (kv) { return [kv[0], kv[1].length]; });\r\n}\r\nvar MapTree = (function () {\r\n    function MapTree(caseName, fields) {\r\n        this.Case = caseName;\r\n        this.Fields = fields;\r\n    }\r\n    return MapTree;\r\n}());\r\nexport { MapTree };\r\nfunction tree_sizeAux(acc, m) {\r\n    return m.Case === \"MapOne\"\r\n        ? acc + 1\r\n        : m.Case === \"MapNode\"\r\n            ? tree_sizeAux(tree_sizeAux(acc + 1, m.Fields[2]), m.Fields[3])\r\n            : acc;\r\n}\r\nfunction tree_size(x) {\r\n    return tree_sizeAux(0, x);\r\n}\r\nfunction tree_empty() {\r\n    return new MapTree(\"MapEmpty\", []);\r\n}\r\nfunction tree_height(_arg1) {\r\n    return _arg1.Case === \"MapOne\" ? 1 : _arg1.Case === \"MapNode\" ? _arg1.Fields[4] : 0;\r\n}\r\nfunction tree_isEmpty(m) {\r\n    return m.Case === \"MapEmpty\" ? true : false;\r\n}\r\nfunction tree_mk(l, k, v, r) {\r\n    var matchValue = [l, r];\r\n    var $target1 = function () {\r\n        var hl = tree_height(l);\r\n        var hr = tree_height(r);\r\n        var m = hl < hr ? hr : hl;\r\n        return new MapTree(\"MapNode\", [k, v, l, r, m + 1]);\r\n    };\r\n    if (matchValue[0].Case === \"MapEmpty\") {\r\n        if (matchValue[1].Case === \"MapEmpty\") {\r\n            return new MapTree(\"MapOne\", [k, v]);\r\n        }\r\n        else {\r\n            return $target1();\r\n        }\r\n    }\r\n    else {\r\n        return $target1();\r\n    }\r\n}\r\n;\r\nfunction tree_rebalance(t1, k, v, t2) {\r\n    var t1h = tree_height(t1);\r\n    var t2h = tree_height(t2);\r\n    if (t2h > t1h + 2) {\r\n        if (t2.Case === \"MapNode\") {\r\n            if (tree_height(t2.Fields[2]) > t1h + 1) {\r\n                if (t2.Fields[2].Case === \"MapNode\") {\r\n                    return tree_mk(tree_mk(t1, k, v, t2.Fields[2].Fields[2]), t2.Fields[2].Fields[0], t2.Fields[2].Fields[1], tree_mk(t2.Fields[2].Fields[3], t2.Fields[0], t2.Fields[1], t2.Fields[3]));\r\n                }\r\n                else {\r\n                    throw new Error(\"rebalance\");\r\n                }\r\n            }\r\n            else {\r\n                return tree_mk(tree_mk(t1, k, v, t2.Fields[2]), t2.Fields[0], t2.Fields[1], t2.Fields[3]);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"rebalance\");\r\n        }\r\n    }\r\n    else {\r\n        if (t1h > t2h + 2) {\r\n            if (t1.Case === \"MapNode\") {\r\n                if (tree_height(t1.Fields[3]) > t2h + 1) {\r\n                    if (t1.Fields[3].Case === \"MapNode\") {\r\n                        return tree_mk(tree_mk(t1.Fields[2], t1.Fields[0], t1.Fields[1], t1.Fields[3].Fields[2]), t1.Fields[3].Fields[0], t1.Fields[3].Fields[1], tree_mk(t1.Fields[3].Fields[3], k, v, t2));\r\n                    }\r\n                    else {\r\n                        throw new Error(\"rebalance\");\r\n                    }\r\n                }\r\n                else {\r\n                    return tree_mk(t1.Fields[2], t1.Fields[0], t1.Fields[1], tree_mk(t1.Fields[3], k, v, t2));\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"rebalance\");\r\n            }\r\n        }\r\n        else {\r\n            return tree_mk(t1, k, v, t2);\r\n        }\r\n    }\r\n}\r\nfunction tree_add(comparer, k, v, m) {\r\n    if (m.Case === \"MapOne\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        if (c < 0) {\r\n            return new MapTree(\"MapNode\", [k, v, new MapTree(\"MapEmpty\", []), m, 2]);\r\n        }\r\n        else if (c === 0) {\r\n            return new MapTree(\"MapOne\", [k, v]);\r\n        }\r\n        return new MapTree(\"MapNode\", [k, v, m, new MapTree(\"MapEmpty\", []), 2]);\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_rebalance(tree_add(comparer, k, v, m.Fields[2]), m.Fields[0], m.Fields[1], m.Fields[3]);\r\n        }\r\n        else if (c === 0) {\r\n            return new MapTree(\"MapNode\", [k, v, m.Fields[2], m.Fields[3], m.Fields[4]]);\r\n        }\r\n        return tree_rebalance(m.Fields[2], m.Fields[0], m.Fields[1], tree_add(comparer, k, v, m.Fields[3]));\r\n    }\r\n    return new MapTree(\"MapOne\", [k, v]);\r\n}\r\nfunction tree_find(comparer, k, m) {\r\n    var res = tree_tryFind(comparer, k, m);\r\n    if (res != null)\r\n        return res;\r\n    throw new Error(\"key not found\");\r\n}\r\nfunction tree_tryFind(comparer, k, m) {\r\n    if (m.Case === \"MapOne\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        return c === 0 ? m.Fields[1] : null;\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_tryFind(comparer, k, m.Fields[2]);\r\n        }\r\n        else {\r\n            if (c === 0) {\r\n                return m.Fields[1];\r\n            }\r\n            else {\r\n                return tree_tryFind(comparer, k, m.Fields[3]);\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction tree_partition1(comparer, f, k, v, acc1, acc2) {\r\n    return f(k, v) ? [tree_add(comparer, k, v, acc1), acc2] : [acc1, tree_add(comparer, k, v, acc2)];\r\n}\r\nfunction tree_partitionAux(comparer, f, s, acc_0, acc_1) {\r\n    var acc = [acc_0, acc_1];\r\n    if (s.Case === \"MapOne\") {\r\n        return tree_partition1(comparer, f, s.Fields[0], s.Fields[1], acc[0], acc[1]);\r\n    }\r\n    else if (s.Case === \"MapNode\") {\r\n        var acc_2 = tree_partitionAux(comparer, f, s.Fields[3], acc[0], acc[1]);\r\n        var acc_3 = tree_partition1(comparer, f, s.Fields[0], s.Fields[1], acc_2[0], acc_2[1]);\r\n        return tree_partitionAux(comparer, f, s.Fields[2], acc_3[0], acc_3[1]);\r\n    }\r\n    return acc;\r\n}\r\nfunction tree_partition(comparer, f, s) {\r\n    return tree_partitionAux(comparer, f, s, tree_empty(), tree_empty());\r\n}\r\nfunction tree_filter1(comparer, f, k, v, acc) {\r\n    return f(k, v) ? tree_add(comparer, k, v, acc) : acc;\r\n}\r\nfunction tree_filterAux(comparer, f, s, acc) {\r\n    return s.Case === \"MapOne\" ? tree_filter1(comparer, f, s.Fields[0], s.Fields[1], acc) : s.Case === \"MapNode\" ? tree_filterAux(comparer, f, s.Fields[3], tree_filter1(comparer, f, s.Fields[0], s.Fields[1], tree_filterAux(comparer, f, s.Fields[2], acc))) : acc;\r\n}\r\nfunction tree_filter(comparer, f, s) {\r\n    return tree_filterAux(comparer, f, s, tree_empty());\r\n}\r\nfunction tree_spliceOutSuccessor(m) {\r\n    if (m.Case === \"MapOne\") {\r\n        return [m.Fields[0], m.Fields[1], new MapTree(\"MapEmpty\", [])];\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        if (m.Fields[2].Case === \"MapEmpty\") {\r\n            return [m.Fields[0], m.Fields[1], m.Fields[3]];\r\n        }\r\n        else {\r\n            var kvl = tree_spliceOutSuccessor(m.Fields[2]);\r\n            return [kvl[0], kvl[1], tree_mk(kvl[2], m.Fields[0], m.Fields[1], m.Fields[3])];\r\n        }\r\n    }\r\n    throw new Error(\"internal error: Map.spliceOutSuccessor\");\r\n}\r\nfunction tree_remove(comparer, k, m) {\r\n    if (m.Case === \"MapOne\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        if (c === 0) {\r\n            return new MapTree(\"MapEmpty\", []);\r\n        }\r\n        else {\r\n            return m;\r\n        }\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_rebalance(tree_remove(comparer, k, m.Fields[2]), m.Fields[0], m.Fields[1], m.Fields[3]);\r\n        }\r\n        else {\r\n            if (c === 0) {\r\n                var matchValue = [m.Fields[2], m.Fields[3]];\r\n                if (matchValue[0].Case === \"MapEmpty\") {\r\n                    return m.Fields[3];\r\n                }\r\n                else {\r\n                    if (matchValue[1].Case === \"MapEmpty\") {\r\n                        return m.Fields[2];\r\n                    }\r\n                    else {\r\n                        var patternInput = tree_spliceOutSuccessor(m.Fields[3]);\r\n                        var sv = patternInput[1];\r\n                        var sk = patternInput[0];\r\n                        var r_ = patternInput[2];\r\n                        return tree_mk(m.Fields[2], sk, sv, r_);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return tree_rebalance(m.Fields[2], m.Fields[0], m.Fields[1], tree_remove(comparer, k, m.Fields[3]));\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return tree_empty();\r\n    }\r\n}\r\nfunction tree_mem(comparer, k, m) {\r\n    if (m.Case === \"MapOne\") {\r\n        return comparer.Compare(k, m.Fields[0]) === 0;\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        var c = comparer.Compare(k, m.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_mem(comparer, k, m.Fields[2]);\r\n        }\r\n        else {\r\n            if (c === 0) {\r\n                return true;\r\n            }\r\n            else {\r\n                return tree_mem(comparer, k, m.Fields[3]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction tree_iter(f, m) {\r\n    if (m.Case === \"MapOne\") {\r\n        f(m.Fields[0], m.Fields[1]);\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        tree_iter(f, m.Fields[2]);\r\n        f(m.Fields[0], m.Fields[1]);\r\n        tree_iter(f, m.Fields[3]);\r\n    }\r\n}\r\nfunction tree_tryPick(f, m) {\r\n    if (m.Case === \"MapOne\") {\r\n        return f(m.Fields[0], m.Fields[1]);\r\n    }\r\n    else if (m.Case === \"MapNode\") {\r\n        var matchValue = tree_tryPick(f, m.Fields[2]);\r\n        if (matchValue == null) {\r\n            var matchValue_1 = f(m.Fields[0], m.Fields[1]);\r\n            if (matchValue_1 == null) {\r\n                return tree_tryPick(f, m.Fields[3]);\r\n            }\r\n            else {\r\n                var res = matchValue_1;\r\n                return res;\r\n            }\r\n        }\r\n        else {\r\n            var res = matchValue;\r\n            return res;\r\n        }\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nfunction tree_exists(f, m) {\r\n    return m.Case === \"MapOne\" ? f(m.Fields[0], m.Fields[1]) : m.Case === \"MapNode\" ? (tree_exists(f, m.Fields[2]) ? true : f(m.Fields[0], m.Fields[1])) ? true : tree_exists(f, m.Fields[3]) : false;\r\n}\r\nfunction tree_forall(f, m) {\r\n    return m.Case === \"MapOne\" ? f(m.Fields[0], m.Fields[1]) : m.Case === \"MapNode\" ? (tree_forall(f, m.Fields[2]) ? f(m.Fields[0], m.Fields[1]) : false) ? tree_forall(f, m.Fields[3]) : false : true;\r\n}\r\nfunction tree_mapi(f, m) {\r\n    return m.Case === \"MapOne\" ? new MapTree(\"MapOne\", [m.Fields[0], f(m.Fields[0], m.Fields[1])]) : m.Case === \"MapNode\" ? new MapTree(\"MapNode\", [m.Fields[0], f(m.Fields[0], m.Fields[1]), tree_mapi(f, m.Fields[2]), tree_mapi(f, m.Fields[3]), m.Fields[4]]) : tree_empty();\r\n}\r\nfunction tree_foldBack(f, m, x) {\r\n    return m.Case === \"MapOne\" ? f(m.Fields[0], m.Fields[1], x) : m.Case === \"MapNode\" ? tree_foldBack(f, m.Fields[2], f(m.Fields[0], m.Fields[1], tree_foldBack(f, m.Fields[3], x))) : x;\r\n}\r\nfunction tree_fold(f, x, m) {\r\n    return m.Case === \"MapOne\" ? f(x, m.Fields[0], m.Fields[1]) : m.Case === \"MapNode\" ? tree_fold(f, f(tree_fold(f, x, m.Fields[2]), m.Fields[0], m.Fields[1]), m.Fields[3]) : x;\r\n}\r\nfunction tree_mkFromEnumerator(comparer, acc, e) {\r\n    var cur = e.next();\r\n    while (!cur.done) {\r\n        acc = tree_add(comparer, cur.value[0], cur.value[1], acc);\r\n        cur = e.next();\r\n    }\r\n    return acc;\r\n}\r\nfunction tree_ofSeq(comparer, c) {\r\n    var ie = c[Symbol.iterator]();\r\n    return tree_mkFromEnumerator(comparer, tree_empty(), ie);\r\n}\r\nfunction tree_collapseLHS(stack) {\r\n    if (stack.tail != null) {\r\n        if (stack.head.Case === \"MapOne\") {\r\n            return stack;\r\n        }\r\n        else if (stack.head.Case === \"MapNode\") {\r\n            return tree_collapseLHS(listOfArray([\r\n                stack.head.Fields[2],\r\n                new MapTree(\"MapOne\", [stack.head.Fields[0], stack.head.Fields[1]]),\r\n                stack.head.Fields[3]\r\n            ], stack.tail));\r\n        }\r\n        else {\r\n            return tree_collapseLHS(stack.tail);\r\n        }\r\n    }\r\n    else {\r\n        return new List();\r\n    }\r\n}\r\nfunction tree_mkIterator(s) {\r\n    return { stack: tree_collapseLHS(new List(s, new List())), started: false };\r\n}\r\nfunction tree_moveNext(i) {\r\n    function current(i) {\r\n        if (i.stack.tail == null) {\r\n            return null;\r\n        }\r\n        else if (i.stack.head.Case === \"MapOne\") {\r\n            return [i.stack.head.Fields[0], i.stack.head.Fields[1]];\r\n        }\r\n        throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\r\n    }\r\n    if (i.started) {\r\n        if (i.stack.tail == null) {\r\n            return { done: true, value: null };\r\n        }\r\n        else {\r\n            if (i.stack.head.Case === \"MapOne\") {\r\n                i.stack = tree_collapseLHS(i.stack.tail);\r\n                return {\r\n                    done: i.stack.tail == null,\r\n                    value: current(i)\r\n                };\r\n            }\r\n            else {\r\n                throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        i.started = true;\r\n        return {\r\n            done: i.stack.tail == null,\r\n            value: current(i)\r\n        };\r\n    }\r\n    ;\r\n}\r\nvar FableMap = (function () {\r\n    function FableMap() {\r\n    }\r\n    FableMap.prototype.ToString = function () {\r\n        return \"map [\" + Array.from(this).map(toString).join(\"; \") + \"]\";\r\n    };\r\n    FableMap.prototype.Equals = function (m2) {\r\n        return this.CompareTo(m2) === 0;\r\n    };\r\n    FableMap.prototype.CompareTo = function (m2) {\r\n        var _this = this;\r\n        return this === m2 ? 0 : seqCompareWith(function (kvp1, kvp2) {\r\n            var c = _this.comparer.Compare(kvp1[0], kvp2[0]);\r\n            return c !== 0 ? c : compare(kvp1[1], kvp2[1]);\r\n        }, this, m2);\r\n    };\r\n    FableMap.prototype[Symbol.iterator] = function () {\r\n        var i = tree_mkIterator(this.tree);\r\n        return {\r\n            next: function () { return tree_moveNext(i); }\r\n        };\r\n    };\r\n    FableMap.prototype.entries = function () {\r\n        return this[Symbol.iterator]();\r\n    };\r\n    FableMap.prototype.keys = function () {\r\n        return seqMap(function (kv) { return kv[0]; }, this);\r\n    };\r\n    FableMap.prototype.values = function () {\r\n        return seqMap(function (kv) { return kv[1]; }, this);\r\n    };\r\n    FableMap.prototype.get = function (k) {\r\n        return tree_find(this.comparer, k, this.tree);\r\n    };\r\n    FableMap.prototype.has = function (k) {\r\n        return tree_mem(this.comparer, k, this.tree);\r\n    };\r\n    FableMap.prototype.set = function (k, v) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    FableMap.prototype.delete = function (k) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    FableMap.prototype.clear = function () {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    Object.defineProperty(FableMap.prototype, \"size\", {\r\n        get: function () {\r\n            return tree_size(this.tree);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FableMap.prototype[FSymbol.reflection] = function () {\r\n        return {\r\n            type: \"Microsoft.FSharp.Collections.FSharpMap\",\r\n            interfaces: [\"System.IEquatable\", \"System.IComparable\", \"System.Collections.Generic.IDictionary\"]\r\n        };\r\n    };\r\n    return FableMap;\r\n}());\r\nexport default FableMap;\r\nfunction from(comparer, tree) {\r\n    var map = new FableMap();\r\n    map.tree = tree;\r\n    map.comparer = comparer || new GenericComparer();\r\n    return map;\r\n}\r\nexport function create(ie, comparer) {\r\n    comparer = comparer || new GenericComparer();\r\n    return from(comparer, ie ? tree_ofSeq(comparer, ie) : tree_empty());\r\n}\r\nexport function add(k, v, map) {\r\n    return from(map.comparer, tree_add(map.comparer, k, v, map.tree));\r\n}\r\nexport function remove(item, map) {\r\n    return from(map.comparer, tree_remove(map.comparer, item, map.tree));\r\n}\r\nexport function containsValue(v, map) {\r\n    return seqFold(function (acc, k) { return acc || equals(map.get(k), v); }, false, map.keys());\r\n}\r\nexport function tryGetValue(map, key, defaultValue) {\r\n    return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\r\n}\r\nexport function exists(f, map) {\r\n    return tree_exists(f, map.tree);\r\n}\r\nexport function find(k, map) {\r\n    return tree_find(map.comparer, k, map.tree);\r\n}\r\nexport function tryFind(k, map) {\r\n    return tree_tryFind(map.comparer, k, map.tree);\r\n}\r\nexport function filter(f, map) {\r\n    return from(map.comparer, tree_filter(map.comparer, f, map.tree));\r\n}\r\nexport function fold(f, seed, map) {\r\n    return tree_fold(f, seed, map.tree);\r\n}\r\nexport function foldBack(f, map, seed) {\r\n    return tree_foldBack(f, map.tree, seed);\r\n}\r\nexport function forAll(f, map) {\r\n    return tree_forall(f, map.tree);\r\n}\r\nexport function isEmpty(map) {\r\n    return tree_isEmpty(map.tree);\r\n}\r\nexport function iterate(f, map) {\r\n    tree_iter(f, map.tree);\r\n}\r\nexport function map(f, map) {\r\n    return from(map.comparer, tree_mapi(f, map.tree));\r\n}\r\nexport function partition(f, map) {\r\n    var rs = tree_partition(map.comparer, f, map.tree);\r\n    return [from(map.comparer, rs[0]), from(map.comparer, rs[1])];\r\n}\r\nexport function findKey(f, map) {\r\n    return seqPick(function (kv) { return f(kv[0], kv[1]) ? kv[0] : null; }, map);\r\n}\r\nexport function tryFindKey(f, map) {\r\n    return seqTryPick(function (kv) { return f(kv[0], kv[1]) ? kv[0] : null; }, map);\r\n}\r\nexport function pick(f, map) {\r\n    var res = tryPick(f, map);\r\n    if (res != null)\r\n        return res;\r\n    throw new Error(\"key not found\");\r\n}\r\nexport function tryPick(f, map) {\r\n    return tree_tryPick(f, map.tree);\r\n}\r\n","import List from \"./List\";\r\nimport { ofArray as listOfArray } from \"./List\";\r\nimport { toString } from \"./Util\";\r\nimport GenericComparer from \"./GenericComparer\";\r\nimport FSymbol from \"./Symbol\";\r\nimport { iterate as seqIterate } from \"./Seq\";\r\nimport { fold as seqFold } from \"./Seq\";\r\nimport { reduce as seqReduce } from \"./Seq\";\r\nimport { forAll as seqForAll } from \"./Seq\";\r\nimport { exists as seqExists } from \"./Seq\";\r\nimport { choose as seqChoose } from \"./Seq\";\r\nimport { scan as seqScan } from \"./Seq\";\r\nexport function distinctBy(f, xs) {\r\n    return seqChoose(function (tup) { return tup[0]; }, seqScan(function (tup, x) {\r\n        var acc = tup[1];\r\n        var k = f(x);\r\n        return acc.has(k) ? [null, acc] : [x, add(k, acc)];\r\n    }, [null, create()], xs));\r\n}\r\nexport function distinct(xs) {\r\n    return distinctBy(function (x) { return x; }, xs);\r\n}\r\nvar SetTree = (function () {\r\n    function SetTree(caseName, fields) {\r\n        this.Case = caseName;\r\n        this.Fields = fields;\r\n    }\r\n    return SetTree;\r\n}());\r\nexport { SetTree };\r\nvar tree_tolerance = 2;\r\nfunction tree_countAux(s, acc) {\r\n    return s.Case === \"SetOne\" ? acc + 1 : s.Case === \"SetEmpty\" ? acc : tree_countAux(s.Fields[1], tree_countAux(s.Fields[2], acc + 1));\r\n}\r\nfunction tree_count(s) {\r\n    return tree_countAux(s, 0);\r\n}\r\nfunction tree_SetOne(n) {\r\n    return new SetTree(\"SetOne\", [n]);\r\n}\r\nfunction tree_SetNode(x, l, r, h) {\r\n    return new SetTree(\"SetNode\", [x, l, r, h]);\r\n}\r\nfunction tree_height(t) {\r\n    return t.Case === \"SetOne\" ? 1 : t.Case === \"SetNode\" ? t.Fields[3] : 0;\r\n}\r\nfunction tree_mk(l, k, r) {\r\n    var matchValue = [l, r];\r\n    var $target1 = function () {\r\n        var hl = tree_height(l);\r\n        var hr = tree_height(r);\r\n        var m = hl < hr ? hr : hl;\r\n        return tree_SetNode(k, l, r, m + 1);\r\n    };\r\n    if (matchValue[0].Case === \"SetEmpty\") {\r\n        if (matchValue[1].Case === \"SetEmpty\") {\r\n            return tree_SetOne(k);\r\n        }\r\n        else {\r\n            return $target1();\r\n        }\r\n    }\r\n    else {\r\n        return $target1();\r\n    }\r\n}\r\nfunction tree_rebalance(t1, k, t2) {\r\n    var t1h = tree_height(t1);\r\n    var t2h = tree_height(t2);\r\n    if (t2h > t1h + tree_tolerance) {\r\n        if (t2.Case === \"SetNode\") {\r\n            if (tree_height(t2.Fields[1]) > t1h + 1) {\r\n                if (t2.Fields[1].Case === \"SetNode\") {\r\n                    return tree_mk(tree_mk(t1, k, t2.Fields[1].Fields[1]), t2.Fields[1].Fields[0], tree_mk(t2.Fields[1].Fields[2], t2.Fields[0], t2.Fields[2]));\r\n                }\r\n                else {\r\n                    throw new Error(\"rebalance\");\r\n                }\r\n            }\r\n            else {\r\n                return tree_mk(tree_mk(t1, k, t2.Fields[1]), t2.Fields[0], t2.Fields[2]);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"rebalance\");\r\n        }\r\n    }\r\n    else {\r\n        if (t1h > t2h + tree_tolerance) {\r\n            if (t1.Case === \"SetNode\") {\r\n                if (tree_height(t1.Fields[2]) > t2h + 1) {\r\n                    if (t1.Fields[2].Case === \"SetNode\") {\r\n                        return tree_mk(tree_mk(t1.Fields[1], t1.Fields[0], t1.Fields[2].Fields[1]), t1.Fields[2].Fields[0], tree_mk(t1.Fields[2].Fields[2], k, t2));\r\n                    }\r\n                    else {\r\n                        throw new Error(\"rebalance\");\r\n                    }\r\n                }\r\n                else {\r\n                    return tree_mk(t1.Fields[1], t1.Fields[0], tree_mk(t1.Fields[2], k, t2));\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"rebalance\");\r\n            }\r\n        }\r\n        else {\r\n            return tree_mk(t1, k, t2);\r\n        }\r\n    }\r\n}\r\nfunction tree_add(comparer, k, t) {\r\n    if (t.Case === \"SetOne\") {\r\n        var c = comparer.Compare(k, t.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_SetNode(k, new SetTree(\"SetEmpty\", []), t, 2);\r\n        }\r\n        else if (c === 0) {\r\n            return t;\r\n        }\r\n        else {\r\n            return tree_SetNode(k, t, new SetTree(\"SetEmpty\", []), 2);\r\n        }\r\n    }\r\n    else if (t.Case === \"SetEmpty\") {\r\n        return tree_SetOne(k);\r\n    }\r\n    else {\r\n        var c = comparer.Compare(k, t.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_rebalance(tree_add(comparer, k, t.Fields[1]), t.Fields[0], t.Fields[2]);\r\n        }\r\n        else if (c === 0) {\r\n            return t;\r\n        }\r\n        else {\r\n            return tree_rebalance(t.Fields[1], t.Fields[0], tree_add(comparer, k, t.Fields[2]));\r\n        }\r\n    }\r\n}\r\nfunction tree_balance(comparer, t1, k, t2) {\r\n    var matchValue = [t1, t2];\r\n    var $target1 = function (t1_1) { return tree_add(comparer, k, t1_1); };\r\n    var $target2 = function (k1, t2_1) { return tree_add(comparer, k, tree_add(comparer, k1, t2_1)); };\r\n    if (matchValue[0].Case === \"SetOne\") {\r\n        if (matchValue[1].Case === \"SetEmpty\") {\r\n            return $target1(matchValue[0]);\r\n        }\r\n        else {\r\n            if (matchValue[1].Case === \"SetOne\") {\r\n                return $target2(matchValue[0].Fields[0], matchValue[1]);\r\n            }\r\n            else {\r\n                return $target2(matchValue[0].Fields[0], matchValue[1]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (matchValue[0].Case === \"SetNode\") {\r\n            if (matchValue[1].Case === \"SetOne\") {\r\n                var k2 = matchValue[1].Fields[0];\r\n                var t1_1 = matchValue[0];\r\n                return tree_add(comparer, k, tree_add(comparer, k2, t1_1));\r\n            }\r\n            else {\r\n                if (matchValue[1].Case === \"SetNode\") {\r\n                    var h1 = matchValue[0].Fields[3];\r\n                    var h2 = matchValue[1].Fields[3];\r\n                    var k1 = matchValue[0].Fields[0];\r\n                    var k2 = matchValue[1].Fields[0];\r\n                    var t11 = matchValue[0].Fields[1];\r\n                    var t12 = matchValue[0].Fields[2];\r\n                    var t21 = matchValue[1].Fields[1];\r\n                    var t22 = matchValue[1].Fields[2];\r\n                    if (h1 + tree_tolerance < h2) {\r\n                        return tree_rebalance(tree_balance(comparer, t1, k, t21), k2, t22);\r\n                    }\r\n                    else {\r\n                        if (h2 + tree_tolerance < h1) {\r\n                            return tree_rebalance(t11, k1, tree_balance(comparer, t12, k, t2));\r\n                        }\r\n                        else {\r\n                            return tree_mk(t1, k, t2);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    return $target1(matchValue[0]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var t2_1 = matchValue[1];\r\n            return tree_add(comparer, k, t2_1);\r\n        }\r\n    }\r\n}\r\nfunction tree_split(comparer, pivot, t) {\r\n    if (t.Case === \"SetOne\") {\r\n        var c = comparer.Compare(t.Fields[0], pivot);\r\n        if (c < 0) {\r\n            return [t, false, new SetTree(\"SetEmpty\", [])];\r\n        }\r\n        else if (c === 0) {\r\n            return [new SetTree(\"SetEmpty\", []), true, new SetTree(\"SetEmpty\", [])];\r\n        }\r\n        else {\r\n            return [new SetTree(\"SetEmpty\", []), false, t];\r\n        }\r\n    }\r\n    else if (t.Case === \"SetEmpty\") {\r\n        return [new SetTree(\"SetEmpty\", []), false, new SetTree(\"SetEmpty\", [])];\r\n    }\r\n    else {\r\n        var c = comparer.Compare(pivot, t.Fields[0]);\r\n        if (c < 0) {\r\n            var patternInput = tree_split(comparer, pivot, t.Fields[1]);\r\n            return [patternInput[0], patternInput[1], tree_balance(comparer, patternInput[2], t.Fields[0], t.Fields[2])];\r\n        }\r\n        else if (c === 0) {\r\n            return [t.Fields[1], true, t.Fields[2]];\r\n        }\r\n        else {\r\n            var patternInput = tree_split(comparer, pivot, t.Fields[2]);\r\n            return [tree_balance(comparer, t.Fields[1], t.Fields[0], patternInput[0]), patternInput[1], patternInput[2]];\r\n        }\r\n    }\r\n}\r\nfunction tree_spliceOutSuccessor(t) {\r\n    if (t.Case === \"SetOne\") {\r\n        return [t.Fields[0], new SetTree(\"SetEmpty\", [])];\r\n    }\r\n    else if (t.Case === \"SetNode\") {\r\n        if (t.Fields[1].Case === \"SetEmpty\") {\r\n            return [t.Fields[0], t.Fields[2]];\r\n        }\r\n        else {\r\n            var patternInput = tree_spliceOutSuccessor(t.Fields[1]);\r\n            return [patternInput[0], tree_mk(patternInput[1], t.Fields[0], t.Fields[2])];\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\r\n    }\r\n}\r\nfunction tree_remove(comparer, k, t) {\r\n    if (t.Case === \"SetOne\") {\r\n        var c = comparer.Compare(k, t.Fields[0]);\r\n        if (c === 0) {\r\n            return new SetTree(\"SetEmpty\", []);\r\n        }\r\n        else {\r\n            return t;\r\n        }\r\n    }\r\n    else if (t.Case === \"SetNode\") {\r\n        var c = comparer.Compare(k, t.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_rebalance(tree_remove(comparer, k, t.Fields[1]), t.Fields[0], t.Fields[2]);\r\n        }\r\n        else if (c === 0) {\r\n            var matchValue = [t.Fields[1], t.Fields[2]];\r\n            if (matchValue[0].Case === \"SetEmpty\") {\r\n                return t.Fields[2];\r\n            }\r\n            else if (matchValue[1].Case === \"SetEmpty\") {\r\n                return t.Fields[1];\r\n            }\r\n            else {\r\n                var patternInput = tree_spliceOutSuccessor(t.Fields[2]);\r\n                return tree_mk(t.Fields[1], patternInput[0], patternInput[1]);\r\n            }\r\n        }\r\n        else {\r\n            return tree_rebalance(t.Fields[1], t.Fields[0], tree_remove(comparer, k, t.Fields[2]));\r\n        }\r\n    }\r\n    else {\r\n        return t;\r\n    }\r\n}\r\nfunction tree_mem(comparer, k, t) {\r\n    if (t.Case === \"SetOne\") {\r\n        return comparer.Compare(k, t.Fields[0]) === 0;\r\n    }\r\n    else if (t.Case === \"SetEmpty\") {\r\n        return false;\r\n    }\r\n    else {\r\n        var c = comparer.Compare(k, t.Fields[0]);\r\n        if (c < 0) {\r\n            return tree_mem(comparer, k, t.Fields[1]);\r\n        }\r\n        else if (c === 0) {\r\n            return true;\r\n        }\r\n        else {\r\n            return tree_mem(comparer, k, t.Fields[2]);\r\n        }\r\n    }\r\n}\r\nfunction tree_iter(f, t) {\r\n    if (t.Case === \"SetOne\") {\r\n        f(t.Fields[0]);\r\n    }\r\n    else {\r\n        if (t.Case === \"SetEmpty\") { }\r\n        else {\r\n            tree_iter(f, t.Fields[1]);\r\n            f(t.Fields[0]);\r\n            tree_iter(f, t.Fields[2]);\r\n        }\r\n    }\r\n}\r\nfunction tree_foldBack(f, m, x) {\r\n    return m.Case === \"SetOne\" ? f(m.Fields[0], x) : m.Case === \"SetEmpty\" ? x : tree_foldBack(f, m.Fields[1], f(m.Fields[0], tree_foldBack(f, m.Fields[2], x)));\r\n}\r\nfunction tree_fold(f, x, m) {\r\n    if (m.Case === \"SetOne\") {\r\n        return f(x, m.Fields[0]);\r\n    }\r\n    else if (m.Case === \"SetEmpty\") {\r\n        return x;\r\n    }\r\n    else {\r\n        var x_1 = tree_fold(f, x, m.Fields[1]);\r\n        var x_2 = f(x_1, m.Fields[0]);\r\n        return tree_fold(f, x_2, m.Fields[2]);\r\n    }\r\n}\r\nfunction tree_forall(f, m) {\r\n    return m.Case === \"SetOne\" ? f(m.Fields[0]) : m.Case === \"SetEmpty\" ? true : (f(m.Fields[0]) ? tree_forall(f, m.Fields[1]) : false) ? tree_forall(f, m.Fields[2]) : false;\r\n}\r\nfunction tree_exists(f, m) {\r\n    return m.Case === \"SetOne\" ? f(m.Fields[0]) : m.Case === \"SetEmpty\" ? false : (f(m.Fields[0]) ? true : tree_exists(f, m.Fields[1])) ? true : tree_exists(f, m.Fields[2]);\r\n}\r\nfunction tree_isEmpty(m) {\r\n    return m.Case === \"SetEmpty\" ? true : false;\r\n}\r\nfunction tree_subset(comparer, a, b) {\r\n    return tree_forall(function (x) { return tree_mem(comparer, x, b); }, a);\r\n}\r\nfunction tree_psubset(comparer, a, b) {\r\n    return tree_forall(function (x) { return tree_mem(comparer, x, b); }, a) ? tree_exists(function (x) { return !tree_mem(comparer, x, a); }, b) : false;\r\n}\r\nfunction tree_filterAux(comparer, f, s, acc) {\r\n    if (s.Case === \"SetOne\") {\r\n        if (f(s.Fields[0])) {\r\n            return tree_add(comparer, s.Fields[0], acc);\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n    }\r\n    else if (s.Case === \"SetEmpty\") {\r\n        return acc;\r\n    }\r\n    else {\r\n        var acc_1 = f(s.Fields[0]) ? tree_add(comparer, s.Fields[0], acc) : acc;\r\n        return tree_filterAux(comparer, f, s.Fields[1], tree_filterAux(comparer, f, s.Fields[2], acc_1));\r\n    }\r\n}\r\nfunction tree_filter(comparer, f, s) {\r\n    return tree_filterAux(comparer, f, s, new SetTree(\"SetEmpty\", []));\r\n}\r\nfunction tree_diffAux(comparer, m, acc) {\r\n    return m.Case === \"SetOne\" ? tree_remove(comparer, m.Fields[0], acc) : m.Case === \"SetEmpty\" ? acc : tree_diffAux(comparer, m.Fields[1], tree_diffAux(comparer, m.Fields[2], tree_remove(comparer, m.Fields[0], acc)));\r\n}\r\nfunction tree_diff(comparer, a, b) {\r\n    return tree_diffAux(comparer, b, a);\r\n}\r\nfunction tree_union(comparer, t1, t2) {\r\n    var matchValue = [t1, t2];\r\n    var $target2 = function (t) { return t; };\r\n    var $target3 = function (k1, t2_1) { return tree_add(comparer, k1, t2_1); };\r\n    if (matchValue[0].Case === \"SetEmpty\") {\r\n        var t = matchValue[1];\r\n        return t;\r\n    }\r\n    else {\r\n        if (matchValue[0].Case === \"SetOne\") {\r\n            if (matchValue[1].Case === \"SetEmpty\") {\r\n                return $target2(matchValue[0]);\r\n            }\r\n            else {\r\n                if (matchValue[1].Case === \"SetOne\") {\r\n                    return $target3(matchValue[0].Fields[0], matchValue[1]);\r\n                }\r\n                else {\r\n                    return $target3(matchValue[0].Fields[0], matchValue[1]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (matchValue[1].Case === \"SetEmpty\") {\r\n                return $target2(matchValue[0]);\r\n            }\r\n            else {\r\n                if (matchValue[1].Case === \"SetOne\") {\r\n                    var k2 = matchValue[1].Fields[0];\r\n                    var t1_1 = matchValue[0];\r\n                    return tree_add(comparer, k2, t1_1);\r\n                }\r\n                else {\r\n                    var h1 = matchValue[0].Fields[3];\r\n                    var h2 = matchValue[1].Fields[3];\r\n                    var k1 = matchValue[0].Fields[0];\r\n                    var k2 = matchValue[1].Fields[0];\r\n                    var t11 = matchValue[0].Fields[1];\r\n                    var t12 = matchValue[0].Fields[2];\r\n                    var t21 = matchValue[1].Fields[1];\r\n                    var t22 = matchValue[1].Fields[2];\r\n                    if (h1 > h2) {\r\n                        var patternInput = tree_split(comparer, k1, t2);\r\n                        var lo = patternInput[0];\r\n                        var hi = patternInput[2];\r\n                        return tree_balance(comparer, tree_union(comparer, t11, lo), k1, tree_union(comparer, t12, hi));\r\n                    }\r\n                    else {\r\n                        var patternInput = tree_split(comparer, k2, t1);\r\n                        var lo = patternInput[0];\r\n                        var hi = patternInput[2];\r\n                        return tree_balance(comparer, tree_union(comparer, t21, lo), k2, tree_union(comparer, t22, hi));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction tree_intersectionAux(comparer, b, m, acc) {\r\n    if (m.Case === \"SetOne\") {\r\n        if (tree_mem(comparer, m.Fields[0], b)) {\r\n            return tree_add(comparer, m.Fields[0], acc);\r\n        }\r\n        else {\r\n            return acc;\r\n        }\r\n    }\r\n    else if (m.Case === \"SetEmpty\") {\r\n        return acc;\r\n    }\r\n    else {\r\n        var acc_1 = tree_intersectionAux(comparer, b, m.Fields[2], acc);\r\n        var acc_2 = tree_mem(comparer, m.Fields[0], b) ? tree_add(comparer, m.Fields[0], acc_1) : acc_1;\r\n        return tree_intersectionAux(comparer, b, m.Fields[1], acc_2);\r\n    }\r\n}\r\nfunction tree_intersection(comparer, a, b) {\r\n    return tree_intersectionAux(comparer, b, a, new SetTree(\"SetEmpty\", []));\r\n}\r\nfunction tree_partition1(comparer, f, k, acc1, acc2) {\r\n    return f(k) ? [tree_add(comparer, k, acc1), acc2] : [acc1, tree_add(comparer, k, acc2)];\r\n}\r\nfunction tree_partitionAux(comparer, f, s, acc_0, acc_1) {\r\n    var acc = [acc_0, acc_1];\r\n    if (s.Case === \"SetOne\") {\r\n        var acc1 = acc[0];\r\n        var acc2 = acc[1];\r\n        return tree_partition1(comparer, f, s.Fields[0], acc1, acc2);\r\n    }\r\n    else {\r\n        if (s.Case === \"SetEmpty\") {\r\n            return acc;\r\n        }\r\n        else {\r\n            var acc_2 = tree_partitionAux(comparer, f, s.Fields[2], acc[0], acc[1]);\r\n            var acc_3 = tree_partition1(comparer, f, s.Fields[0], acc_2[0], acc_2[1]);\r\n            return tree_partitionAux(comparer, f, s.Fields[1], acc_3[0], acc_3[1]);\r\n        }\r\n    }\r\n}\r\nfunction tree_partition(comparer, f, s) {\r\n    var seed = [new SetTree(\"SetEmpty\", []), new SetTree(\"SetEmpty\", [])];\r\n    var arg30_ = seed[0];\r\n    var arg31_ = seed[1];\r\n    return tree_partitionAux(comparer, f, s, arg30_, arg31_);\r\n}\r\nfunction tree_minimumElementAux(s, n) {\r\n    return s.Case === \"SetOne\" ? s.Fields[0] : s.Case === \"SetEmpty\" ? n : tree_minimumElementAux(s.Fields[1], s.Fields[0]);\r\n}\r\nfunction tree_minimumElementOpt(s) {\r\n    return s.Case === \"SetOne\" ? s.Fields[0] : s.Case === \"SetEmpty\" ? null : tree_minimumElementAux(s.Fields[1], s.Fields[0]);\r\n}\r\nfunction tree_maximumElementAux(s, n) {\r\n    return s.Case === \"SetOne\" ? s.Fields[0] : s.Case === \"SetEmpty\" ? n : tree_maximumElementAux(s.Fields[2], s.Fields[0]);\r\n}\r\nfunction tree_maximumElementOpt(s) {\r\n    return s.Case === \"SetOne\" ? s.Fields[0] : s.Case === \"SetEmpty\" ? null : tree_maximumElementAux(s.Fields[2], s.Fields[0]);\r\n}\r\nfunction tree_minimumElement(s) {\r\n    var matchValue = tree_minimumElementOpt(s);\r\n    if (matchValue == null) {\r\n        throw new Error(\"Set contains no elements\");\r\n    }\r\n    else {\r\n        return matchValue;\r\n    }\r\n}\r\nfunction tree_maximumElement(s) {\r\n    var matchValue = tree_maximumElementOpt(s);\r\n    if (matchValue == null) {\r\n        throw new Error(\"Set contains no elements\");\r\n    }\r\n    else {\r\n        return matchValue;\r\n    }\r\n}\r\nfunction tree_collapseLHS(stack) {\r\n    return stack.tail != null\r\n        ? stack.head.Case === \"SetOne\"\r\n            ? stack\r\n            : stack.head.Case === \"SetNode\"\r\n                ? tree_collapseLHS(listOfArray([\r\n                    stack.head.Fields[1],\r\n                    tree_SetOne(stack.head.Fields[0]),\r\n                    stack.head.Fields[2]\r\n                ], stack.tail))\r\n                : tree_collapseLHS(stack.tail)\r\n        : new List();\r\n}\r\nfunction tree_mkIterator(s) {\r\n    return { stack: tree_collapseLHS(new List(s, new List())), started: false };\r\n}\r\n;\r\nfunction tree_moveNext(i) {\r\n    function current(i) {\r\n        if (i.stack.tail == null) {\r\n            return null;\r\n        }\r\n        else if (i.stack.head.Case === \"SetOne\") {\r\n            return i.stack.head.Fields[0];\r\n        }\r\n        throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\r\n    }\r\n    if (i.started) {\r\n        if (i.stack.tail == null) {\r\n            return { done: true, value: null };\r\n        }\r\n        else {\r\n            if (i.stack.head.Case === \"SetOne\") {\r\n                i.stack = tree_collapseLHS(i.stack.tail);\r\n                return {\r\n                    done: i.stack.tail == null,\r\n                    value: current(i)\r\n                };\r\n            }\r\n            else {\r\n                throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        i.started = true;\r\n        return {\r\n            done: i.stack.tail == null,\r\n            value: current(i)\r\n        };\r\n    }\r\n    ;\r\n}\r\nfunction tree_compareStacks(comparer, l1, l2) {\r\n    var $target8 = function (n1k, t1) { return tree_compareStacks(comparer, listOfArray([new SetTree(\"SetEmpty\", []), tree_SetOne(n1k)], t1), l2); };\r\n    var $target9 = function (n1k, n1l, n1r, t1) { return tree_compareStacks(comparer, listOfArray([n1l, tree_SetNode(n1k, new SetTree(\"SetEmpty\", []), n1r, 0)], t1), l2); };\r\n    var $target11 = function (n2k, n2l, n2r, t2) { return tree_compareStacks(comparer, l1, listOfArray([n2l, tree_SetNode(n2k, new SetTree(\"SetEmpty\", []), n2r, 0)], t2)); };\r\n    if (l1.tail != null) {\r\n        if (l2.tail != null) {\r\n            if (l2.head.Case === \"SetOne\") {\r\n                if (l1.head.Case === \"SetOne\") {\r\n                    var n1k = l1.head.Fields[0], n2k = l2.head.Fields[0], t1 = l1.tail, t2 = l2.tail, c = comparer.Compare(n1k, n2k);\r\n                    if (c !== 0) {\r\n                        return c;\r\n                    }\r\n                    else {\r\n                        return tree_compareStacks(comparer, t1, t2);\r\n                    }\r\n                }\r\n                else {\r\n                    if (l1.head.Case === \"SetNode\") {\r\n                        if (l1.head.Fields[1].Case === \"SetEmpty\") {\r\n                            var emp = l1.head.Fields[1], n1k = l1.head.Fields[0], n1r = l1.head.Fields[2], n2k = l2.head.Fields[0], t1 = l1.tail, t2 = l2.tail, c = comparer.Compare(n1k, n2k);\r\n                            if (c !== 0) {\r\n                                return c;\r\n                            }\r\n                            else {\r\n                                return tree_compareStacks(comparer, listOfArray([n1r], t1), listOfArray([emp], t2));\r\n                            }\r\n                        }\r\n                        else {\r\n                            return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);\r\n                        }\r\n                    }\r\n                    else {\r\n                        var n2k = l2.head.Fields[0], t2 = l2.tail;\r\n                        return tree_compareStacks(comparer, l1, listOfArray([new SetTree(\"SetEmpty\", []), tree_SetOne(n2k)], t2));\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (l2.head.Case === \"SetNode\") {\r\n                    if (l2.head.Fields[1].Case === \"SetEmpty\") {\r\n                        if (l1.head.Case === \"SetOne\") {\r\n                            var n1k = l1.head.Fields[0], n2k = l2.head.Fields[0], n2r = l2.head.Fields[2], t1 = l1.tail, t2 = l2.tail, c = comparer.Compare(n1k, n2k);\r\n                            if (c !== 0) {\r\n                                return c;\r\n                            }\r\n                            else {\r\n                                return tree_compareStacks(comparer, listOfArray([new SetTree(\"SetEmpty\", [])], t1), listOfArray([n2r], t2));\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (l1.head.Case === \"SetNode\") {\r\n                                if (l1.head.Fields[1].Case === \"SetEmpty\") {\r\n                                    var n1k = l1.head.Fields[0], n1r = l1.head.Fields[2], n2k = l2.head.Fields[0], n2r = l2.head.Fields[2], t1 = l1.tail, t2 = l2.tail, c = comparer.Compare(n1k, n2k);\r\n                                    if (c !== 0) {\r\n                                        return c;\r\n                                    }\r\n                                    else {\r\n                                        return tree_compareStacks(comparer, listOfArray([n1r], t1), listOfArray([n2r], t2));\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);\r\n                                }\r\n                            }\r\n                            else {\r\n                                return $target11(l2.head.Fields[0], l2.head.Fields[1], l2.head.Fields[2], l2.tail);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (l1.head.Case === \"SetOne\") {\r\n                            return $target8(l1.head.Fields[0], l1.tail);\r\n                        }\r\n                        else {\r\n                            if (l1.head.Case === \"SetNode\") {\r\n                                return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);\r\n                            }\r\n                            else {\r\n                                return $target11(l2.head.Fields[0], l2.head.Fields[1], l2.head.Fields[2], l2.tail);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (l1.head.Case === \"SetOne\") {\r\n                        return $target8(l1.head.Fields[0], l1.tail);\r\n                    }\r\n                    else {\r\n                        if (l1.head.Case === \"SetNode\") {\r\n                            return $target9(l1.head.Fields[0], l1.head.Fields[1], l1.head.Fields[2], l1.tail);\r\n                        }\r\n                        else {\r\n                            return tree_compareStacks(comparer, l1.tail, l2.tail);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    }\r\n    else {\r\n        if (l2.tail != null) {\r\n            return -1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n}\r\nfunction tree_compare(comparer, s1, s2) {\r\n    if (s1.Case === \"SetEmpty\") {\r\n        if (s2.Case === \"SetEmpty\") {\r\n            return 0;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    else {\r\n        if (s2.Case === \"SetEmpty\") {\r\n            return 1;\r\n        }\r\n        else {\r\n            return tree_compareStacks(comparer, listOfArray([s1]), listOfArray([s2]));\r\n        }\r\n    }\r\n}\r\nfunction tree_mkFromEnumerator(comparer, acc, e) {\r\n    var cur = e.next();\r\n    while (!cur.done) {\r\n        acc = tree_add(comparer, cur.value, acc);\r\n        cur = e.next();\r\n    }\r\n    return acc;\r\n}\r\nfunction tree_ofSeq(comparer, c) {\r\n    var ie = c[Symbol.iterator]();\r\n    return tree_mkFromEnumerator(comparer, new SetTree(\"SetEmpty\", []), ie);\r\n}\r\nvar FableSet = (function () {\r\n    function FableSet() {\r\n    }\r\n    FableSet.prototype.ToString = function () {\r\n        return \"set [\" + Array.from(this).map(toString).join(\"; \") + \"]\";\r\n    };\r\n    FableSet.prototype.Equals = function (s2) {\r\n        return this.CompareTo(s2) === 0;\r\n    };\r\n    FableSet.prototype.CompareTo = function (s2) {\r\n        return this === s2 ? 0 : tree_compare(this.comparer, this.tree, s2.tree);\r\n    };\r\n    FableSet.prototype[Symbol.iterator] = function () {\r\n        var i = tree_mkIterator(this.tree);\r\n        return {\r\n            next: function () { return tree_moveNext(i); }\r\n        };\r\n    };\r\n    FableSet.prototype.values = function () {\r\n        return this[Symbol.iterator]();\r\n    };\r\n    FableSet.prototype.has = function (v) {\r\n        return tree_mem(this.comparer, v, this.tree);\r\n    };\r\n    FableSet.prototype.add = function (v) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    FableSet.prototype.delete = function (v) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    FableSet.prototype.clear = function () {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    Object.defineProperty(FableSet.prototype, \"size\", {\r\n        get: function () {\r\n            return tree_count(this.tree);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FableSet.prototype[FSymbol.reflection] = function () {\r\n        return {\r\n            type: \"Microsoft.FSharp.Collections.FSharpSet\",\r\n            interfaces: [\"System.IEquatable\", \"System.IComparable\"]\r\n        };\r\n    };\r\n    return FableSet;\r\n}());\r\nexport default FableSet;\r\nfunction from(comparer, tree) {\r\n    var s = new FableSet();\r\n    s.tree = tree;\r\n    s.comparer = comparer || new GenericComparer();\r\n    return s;\r\n}\r\nexport function create(ie, comparer) {\r\n    comparer = comparer || new GenericComparer();\r\n    return from(comparer, ie ? tree_ofSeq(comparer, ie) : new SetTree(\"SetEmpty\", []));\r\n}\r\nexport function isEmpty(s) {\r\n    return tree_isEmpty(s.tree);\r\n}\r\nexport function add(item, s) {\r\n    return from(s.comparer, tree_add(s.comparer, item, s.tree));\r\n}\r\nexport function addInPlace(item, s) {\r\n    return s.has(item) ? false : (s.add(item), true);\r\n}\r\nexport function remove(item, s) {\r\n    return from(s.comparer, tree_remove(s.comparer, item, s.tree));\r\n}\r\nexport function union(set1, set2) {\r\n    return set2.tree.Case === \"SetEmpty\"\r\n        ? set1\r\n        : set1.tree.Case === \"SetEmpty\"\r\n            ? set2\r\n            : from(set1.comparer, tree_union(set1.comparer, set1.tree, set2.tree));\r\n}\r\nexport function op_Addition(set1, set2) {\r\n    return union(set1, set2);\r\n}\r\nexport function unionInPlace(set1, set2) {\r\n    seqIterate(function (x) { set1.add(x); }, set2);\r\n}\r\nexport function unionMany(sets) {\r\n    return seqFold(function (acc, s) { return union(s, acc); }, create(), sets);\r\n}\r\nexport function difference(set1, set2) {\r\n    return set1.tree.Case === \"SetEmpty\"\r\n        ? set1\r\n        : set2.tree.Case === \"SetEmpty\"\r\n            ? set1\r\n            : from(set1.comparer, tree_diff(set1.comparer, set1.tree, set2.tree));\r\n}\r\nexport function op_Subtraction(set1, set2) {\r\n    return difference(set1, set2);\r\n}\r\nexport function differenceInPlace(set1, set2) {\r\n    seqIterate(function (x) { set1.delete(x); }, set2);\r\n}\r\nexport function intersect(set1, set2) {\r\n    return set2.tree.Case === \"SetEmpty\"\r\n        ? set2\r\n        : set1.tree.Case === \"SetEmpty\"\r\n            ? set1\r\n            : from(set1.comparer, tree_intersection(set1.comparer, set1.tree, set2.tree));\r\n}\r\nexport function intersectInPlace(set1, set2) {\r\n    var set2_ = set2 instanceof Set ? set2 : new Set(set2);\r\n    seqIterate(function (x) { if (!set2_.has(x)) {\r\n        set1.delete(x);\r\n    } }, set1);\r\n}\r\nexport function intersectMany(sets) {\r\n    return seqReduce(function (s1, s2) { return intersect(s1, s2); }, sets);\r\n}\r\nexport function isProperSubsetOf(set1, set2) {\r\n    if (set1 instanceof FableSet && set2 instanceof FableSet) {\r\n        return tree_psubset(set1.comparer, set1.tree, set2.tree);\r\n    }\r\n    else {\r\n        set2 = set2 instanceof Set ? set2 : new Set(set2);\r\n        return seqForAll(function (x) { return set2.has(x); }, set1) && seqExists(function (x) { return !set1.has(x); }, set2);\r\n    }\r\n}\r\nexport function isProperSubset(set1, set2) {\r\n    return isProperSubsetOf(set1, set2);\r\n}\r\nexport function isSubsetOf(set1, set2) {\r\n    if (set1 instanceof FableSet && set2 instanceof FableSet) {\r\n        return tree_subset(set1.comparer, set1.tree, set2.tree);\r\n    }\r\n    else {\r\n        set2 = set2 instanceof Set ? set2 : new Set(set2);\r\n        return seqForAll(function (x) { return set2.has(x); }, set1);\r\n    }\r\n}\r\nexport function isSubset(set1, set2) {\r\n    return isSubsetOf(set1, set2);\r\n}\r\nexport function isProperSupersetOf(set1, set2) {\r\n    if (set1 instanceof FableSet && set2 instanceof FableSet) {\r\n        return tree_psubset(set1.comparer, set2.tree, set1.tree);\r\n    }\r\n    else {\r\n        return isProperSubset(set2 instanceof Set ? set2 : new Set(set2), set1);\r\n    }\r\n}\r\nexport function isProperSuperset(set1, set2) {\r\n    return isProperSupersetOf(set1, set2);\r\n}\r\nexport function isSupersetOf(set1, set2) {\r\n    if (set1 instanceof FableSet && set2 instanceof FableSet) {\r\n        return tree_subset(set1.comparer, set2.tree, set1.tree);\r\n    }\r\n    else {\r\n        return isSubset(set2 instanceof Set ? set2 : new Set(set2), set1);\r\n    }\r\n}\r\nexport function isSuperset(set1, set2) {\r\n    return isSupersetOf(set1, set2);\r\n}\r\nexport function copyTo(xs, arr, arrayIndex, count) {\r\n    if (!Array.isArray(arr) && !ArrayBuffer.isView(arr))\r\n        throw new Error(\"Array is invalid\");\r\n    count = count || arr.length;\r\n    var i = arrayIndex || 0;\r\n    var iter = xs[Symbol.iterator]();\r\n    while (count--) {\r\n        var el = iter.next();\r\n        if (el.done)\r\n            break;\r\n        arr[i++] = el.value;\r\n    }\r\n}\r\nexport function partition(f, s) {\r\n    if (s.tree.Case === \"SetEmpty\") {\r\n        return [s, s];\r\n    }\r\n    else {\r\n        var tuple = tree_partition(s.comparer, f, s.tree);\r\n        return [from(s.comparer, tuple[0]), from(s.comparer, tuple[1])];\r\n    }\r\n}\r\nexport function filter(f, s) {\r\n    if (s.tree.Case === \"SetEmpty\") {\r\n        return s;\r\n    }\r\n    else {\r\n        return from(s.comparer, tree_filter(s.comparer, f, s.tree));\r\n    }\r\n}\r\nexport function map(f, s) {\r\n    var comparer = new GenericComparer();\r\n    return from(comparer, tree_fold(function (acc, k) { return tree_add(comparer, f(k), acc); }, new SetTree(\"SetEmpty\", []), s.tree));\r\n}\r\nexport function exists(f, s) {\r\n    return tree_exists(f, s.tree);\r\n}\r\nexport function forAll(f, s) {\r\n    return tree_forall(f, s.tree);\r\n}\r\nexport function fold(f, seed, s) {\r\n    return tree_fold(f, seed, s.tree);\r\n}\r\nexport function foldBack(f, s, seed) {\r\n    return tree_foldBack(f, s.tree, seed);\r\n}\r\nexport function iterate(f, s) {\r\n    tree_iter(f, s.tree);\r\n}\r\nexport function minimumElement(s) {\r\n    return tree_minimumElement(s.tree);\r\n}\r\nexport function minElement(s) {\r\n    return tree_minimumElement(s.tree);\r\n}\r\nexport function maximumElement(s) {\r\n    return tree_maximumElement(s.tree);\r\n}\r\nexport function maxElement(s) {\r\n    return tree_maximumElement(s.tree);\r\n}\r\n","import _Symbol from \"./Symbol\";\r\nvar Long = (function () {\r\n    function Long(low, high, unsigned) {\r\n        this.eq = this.equals;\r\n        this.neq = this.notEquals;\r\n        this.lt = this.lessThan;\r\n        this.lte = this.lessThanOrEqual;\r\n        this.gt = this.greaterThan;\r\n        this.gte = this.greaterThanOrEqual;\r\n        this.comp = this.compare;\r\n        this.neg = this.negate;\r\n        this.abs = this.absolute;\r\n        this.sub = this.subtract;\r\n        this.mul = this.multiply;\r\n        this.div = this.divide;\r\n        this.mod = this.modulo;\r\n        this.shl = this.shiftLeft;\r\n        this.shr = this.shiftRight;\r\n        this.shru = this.shiftRightUnsigned;\r\n        this.Equals = this.equals;\r\n        this.CompareTo = this.compare;\r\n        this.ToString = this.toString;\r\n        this.low = low | 0;\r\n        this.high = high | 0;\r\n        this.unsigned = !!unsigned;\r\n    }\r\n    Long.prototype.toInt = function () {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n    Long.prototype.toNumber = function () {\r\n        if (this.unsigned)\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n    Long.prototype.toString = function (radix) {\r\n        if (radix === void 0) { radix = 10; }\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n        if (this.isZero())\r\n            return '0';\r\n        if (this.isNegative()) {\r\n            if (this.eq(MIN_VALUE)) {\r\n                var radixLong = fromNumber(radix), div = this.div(radixLong), rem1 = div.mul(radixLong).sub(this);\r\n                return div.toString(radix) + rem1.toInt().toString(radix);\r\n            }\r\n            else\r\n                return '-' + this.neg().toString(radix);\r\n        }\r\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned), rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower), intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0, digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n    Long.prototype.getHighBits = function () {\r\n        return this.high;\r\n    };\r\n    Long.prototype.getHighBitsUnsigned = function () {\r\n        return this.high >>> 0;\r\n    };\r\n    Long.prototype.getLowBits = function () {\r\n        return this.low;\r\n    };\r\n    Long.prototype.getLowBitsUnsigned = function () {\r\n        return this.low >>> 0;\r\n    };\r\n    Long.prototype.getNumBitsAbs = function () {\r\n        if (this.isNegative())\r\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n    Long.prototype.isZero = function () {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n    Long.prototype.isNegative = function () {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n    Long.prototype.isPositive = function () {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n    Long.prototype.isOdd = function () {\r\n        return (this.low & 1) === 1;\r\n    };\r\n    Long.prototype.isEven = function () {\r\n        return (this.low & 1) === 0;\r\n    };\r\n    Long.prototype.equals = function (other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n    Long.prototype.notEquals = function (other) {\r\n        return !this.eq(other);\r\n    };\r\n    Long.prototype.lessThan = function (other) {\r\n        return this.comp(other) < 0;\r\n    };\r\n    Long.prototype.lessThanOrEqual = function (other) {\r\n        return this.comp(other) <= 0;\r\n    };\r\n    Long.prototype.greaterThan = function (other) {\r\n        return this.comp(other) > 0;\r\n    };\r\n    Long.prototype.greaterThanOrEqual = function (other) {\r\n        return this.comp(other) >= 0;\r\n    };\r\n    Long.prototype.compare = function (other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.eq(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(), otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        if (!this.unsigned)\r\n            return this.sub(other).isNegative() ? -1 : 1;\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n    Long.prototype.negate = function () {\r\n        if (!this.unsigned && this.eq(MIN_VALUE))\r\n            return MIN_VALUE;\r\n        return this.not().add(ONE);\r\n    };\r\n    Long.prototype.absolute = function () {\r\n        if (!this.unsigned && this.isNegative())\r\n            return this.negate();\r\n        else\r\n            return this;\r\n    };\r\n    Long.prototype.add = function (addend) {\r\n        if (!isLong(addend))\r\n            addend = fromValue(addend);\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n    Long.prototype.subtract = function (subtrahend) {\r\n        if (!isLong(subtrahend))\r\n            subtrahend = fromValue(subtrahend);\r\n        return this.add(subtrahend.neg());\r\n    };\r\n    Long.prototype.multiply = function (multiplier) {\r\n        if (this.isZero())\r\n            return ZERO;\r\n        if (!isLong(multiplier))\r\n            multiplier = fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return ZERO;\r\n        if (this.eq(MIN_VALUE))\r\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n        if (multiplier.eq(MIN_VALUE))\r\n            return this.isOdd() ? MIN_VALUE : ZERO;\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.neg().mul(multiplier.neg());\r\n            else\r\n                return this.neg().mul(multiplier).neg();\r\n        }\r\n        else if (multiplier.isNegative())\r\n            return this.mul(multiplier.neg()).neg();\r\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n    Long.prototype.divide = function (divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw Error('division by zero');\r\n        if (this.isZero())\r\n            return this.unsigned ? UZERO : ZERO;\r\n        var approx = 0, rem = ZERO, res = ZERO;\r\n        if (!this.unsigned) {\r\n            if (this.eq(MIN_VALUE)) {\r\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                    return MIN_VALUE;\r\n                else if (divisor.eq(MIN_VALUE))\r\n                    return ONE;\r\n                else {\r\n                    var halfThis = this.shr(1);\r\n                    var approx_1 = halfThis.div(divisor).shl(1);\r\n                    if (approx_1.eq(ZERO)) {\r\n                        return divisor.isNegative() ? ONE : NEG_ONE;\r\n                    }\r\n                    else {\r\n                        rem = this.sub(divisor.mul(approx_1));\r\n                        res = approx_1.add(rem.div(divisor));\r\n                        return res;\r\n                    }\r\n                }\r\n            }\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return this.unsigned ? UZERO : ZERO;\r\n            if (this.isNegative()) {\r\n                if (divisor.isNegative())\r\n                    return this.neg().div(divisor.neg());\r\n                return this.neg().div(divisor).neg();\r\n            }\r\n            else if (divisor.isNegative())\r\n                return this.div(divisor.neg()).neg();\r\n            res = ZERO;\r\n        }\r\n        else {\r\n            if (!divisor.unsigned)\r\n                divisor = divisor.toUnsigned();\r\n            if (divisor.gt(this))\r\n                return UZERO;\r\n            if (divisor.gt(this.shru(1)))\r\n                return UONE;\r\n            res = UZERO;\r\n        }\r\n        rem = this;\r\n        while (rem.gte(divisor)) {\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), approxRes = fromNumber(approx), approxRem = approxRes.mul(divisor);\r\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n                approx -= delta;\r\n                approxRes = fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.mul(divisor);\r\n            }\r\n            if (approxRes.isZero())\r\n                approxRes = ONE;\r\n            res = res.add(approxRes);\r\n            rem = rem.sub(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n    Long.prototype.modulo = function (divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n    ;\r\n    Long.prototype.not = function () {\r\n        return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n    ;\r\n    Long.prototype.and = function (other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n    Long.prototype.or = function (other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n    Long.prototype.xor = function (other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n    Long.prototype.shiftLeft = function (numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits = numBits & 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n    Long.prototype.shiftRight = function (numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits = numBits & 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n    Long.prototype.shiftRightUnsigned = function (numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits = numBits & 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            }\r\n            else if (numBits === 32)\r\n                return fromBits(high, 0, this.unsigned);\r\n            else\r\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n    Long.prototype.toSigned = function () {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, false);\r\n    };\r\n    Long.prototype.toUnsigned = function () {\r\n        if (this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, true);\r\n    };\r\n    Long.prototype.toBytes = function (le) {\r\n        return le ? this.toBytesLE() : this.toBytesBE();\r\n    };\r\n    Long.prototype.toBytesLE = function () {\r\n        var hi = this.high, lo = this.low;\r\n        return [\r\n            lo & 0xff,\r\n            (lo >>> 8) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            hi & 0xff,\r\n            (hi >>> 8) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 24) & 0xff\r\n        ];\r\n    };\r\n    Long.prototype.toBytesBE = function () {\r\n        var hi = this.high, lo = this.low;\r\n        return [\r\n            (hi >>> 24) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 8) & 0xff,\r\n            hi & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 8) & 0xff,\r\n            lo & 0xff\r\n        ];\r\n    };\r\n    Long.prototype[_Symbol.reflection] = function () {\r\n        return {\r\n            type: \"System.Int64\",\r\n            interfaces: [\"FSharpRecord\", \"System.IComparable\"],\r\n            properties: {\r\n                low: \"number\",\r\n                high: \"number\",\r\n                unsigned: \"boolean\"\r\n            }\r\n        };\r\n    };\r\n    return Long;\r\n}());\r\nexport { Long };\r\nvar INT_CACHE = {};\r\nvar UINT_CACHE = {};\r\nexport function isLong(obj) {\r\n    return (obj && obj instanceof Long);\r\n}\r\nexport function fromInt(value, unsigned) {\r\n    if (unsigned === void 0) { unsigned = false; }\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n    else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\nexport function fromNumber(value, unsigned) {\r\n    if (unsigned === void 0) { unsigned = false; }\r\n    if (isNaN(value) || !isFinite(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    }\r\n    else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\nexport function fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\nvar pow_dbl = Math.pow;\r\nexport function fromString(str, unsigned, radix) {\r\n    if (unsigned === void 0) { unsigned = false; }\r\n    if (radix === void 0) { radix = 10; }\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        radix = unsigned,\r\n            unsigned = false;\r\n    }\r\n    else {\r\n        unsigned = !!unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    var p = str.indexOf('-');\r\n    if (p > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        }\r\n        else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\nexport function fromValue(val) {\r\n    if (val instanceof Long)\r\n        return val;\r\n    if (typeof val === 'number')\r\n        return fromNumber(val);\r\n    if (typeof val === 'string')\r\n        return fromString(val);\r\n    return fromBits(val.low, val.high, val.unsigned);\r\n}\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\nexport var ZERO = fromInt(0);\r\nexport var UZERO = fromInt(0, true);\r\nexport var ONE = fromInt(1);\r\nexport var UONE = fromInt(1, true);\r\nexport var NEG_ONE = fromInt(-1);\r\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\r\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\r\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\r\n","import { toString } from \"./Util\";\r\nimport { getRestParams } from \"./Util\";\r\nimport { escape } from \"./RegExp\";\r\nimport { second } from \"./Date\";\r\nimport { minute } from \"./Date\";\r\nimport { hour } from \"./Date\";\r\nimport { day } from \"./Date\";\r\nimport { month } from \"./Date\";\r\nimport { year } from \"./Date\";\r\nvar fsFormatRegExp = /(^|[^%])%([0+ ]*)(-?\\d+)?(?:\\.(\\d+))?(\\w)/;\r\nvar formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:(.+?))?\\}/g;\r\nvar StringComparison = {\r\n    CurrentCulture: 0,\r\n    CurrentCultureIgnoreCase: 1,\r\n    InvariantCulture: 2,\r\n    InvariantCultureIgnoreCase: 3,\r\n    Ordinal: 4,\r\n    OrdinalIgnoreCase: 5,\r\n};\r\nfunction cmp(x, y, ic) {\r\n    function isIgnoreCase(i) {\r\n        return i === true ||\r\n            i === StringComparison.CurrentCultureIgnoreCase ||\r\n            i === StringComparison.InvariantCultureIgnoreCase ||\r\n            i === StringComparison.OrdinalIgnoreCase;\r\n    }\r\n    function isOrdinal(i) {\r\n        return i === StringComparison.Ordinal ||\r\n            i === StringComparison.OrdinalIgnoreCase;\r\n    }\r\n    if (x == null)\r\n        return y == null ? 0 : -1;\r\n    if (y == null)\r\n        return 1;\r\n    if (isOrdinal(ic)) {\r\n        if (isIgnoreCase(ic)) {\r\n            x = x.toLowerCase();\r\n            y = y.toLowerCase();\r\n        }\r\n        return (x === y) ? 0 : (x < y ? -1 : 1);\r\n    }\r\n    else {\r\n        if (isIgnoreCase(ic)) {\r\n            x = x.toLocaleLowerCase();\r\n            y = y.toLocaleLowerCase();\r\n        }\r\n        return x.localeCompare(y);\r\n    }\r\n}\r\nexport function compare() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    switch (args.length) {\r\n        case 2: return cmp(args[0], args[1], false);\r\n        case 3: return cmp(args[0], args[1], args[2]);\r\n        case 4: return cmp(args[0], args[1], args[2] === true);\r\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\r\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\r\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\r\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\r\n    }\r\n}\r\nexport function compareTo(x, y) {\r\n    return cmp(x, y, false);\r\n}\r\nexport function indexOfAny(str, anyOf) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (str == null || str === \"\")\r\n        return -1;\r\n    var startIndex = (args.length > 0) ? args[0] : 0;\r\n    if (startIndex < 0)\r\n        throw new Error(\"String.indexOfAny: Start index cannot be negative\");\r\n    var length = (args.length > 1) ? args[1] : str.length - startIndex;\r\n    if (length < 0)\r\n        throw new Error(\"String.indexOfAny: Length cannot be negative\");\r\n    if (length > str.length - startIndex)\r\n        throw new Error(\"String.indexOfAny: Invalid startIndex and length\");\r\n    str = str.substr(startIndex, length);\r\n    for (var _a = 0, anyOf_1 = anyOf; _a < anyOf_1.length; _a++) {\r\n        var c = anyOf_1[_a];\r\n        var index = str.indexOf(c);\r\n        if (index > -1)\r\n            return index + startIndex;\r\n    }\r\n    return -1;\r\n}\r\nfunction toHex(value) {\r\n    return value < 0\r\n        ? \"ff\" + (16777215 - (Math.abs(value) - 1)).toString(16)\r\n        : value.toString(16);\r\n}\r\nexport function fsFormat(str) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    var _cont;\r\n    function isObject(x) {\r\n        return x !== null && typeof x === \"object\" && !(x instanceof Number) && !(x instanceof String) && !(x instanceof Boolean);\r\n    }\r\n    function formatOnce(str, rep) {\r\n        return str.replace(fsFormatRegExp, function (_, prefix, flags, pad, precision, format) {\r\n            switch (format) {\r\n                case \"f\":\r\n                case \"F\":\r\n                    rep = rep.toFixed(precision || 6);\r\n                    break;\r\n                case \"g\":\r\n                case \"G\":\r\n                    rep = rep.toPrecision(precision);\r\n                    break;\r\n                case \"e\":\r\n                case \"E\":\r\n                    rep = rep.toExponential(precision);\r\n                    break;\r\n                case \"O\":\r\n                    rep = toString(rep);\r\n                    break;\r\n                case \"A\":\r\n                    try {\r\n                        rep = JSON.stringify(rep, function (k, v) {\r\n                            return v && v[Symbol.iterator] && !Array.isArray(v) && isObject(v) ? Array.from(v)\r\n                                : v && typeof v.ToString === \"function\" ? toString(v) : v;\r\n                        });\r\n                    }\r\n                    catch (err) {\r\n                        rep = \"{\" + Object.getOwnPropertyNames(rep).map(function (k) { return k + \": \" + String(rep[k]); }).join(\", \") + \"}\";\r\n                    }\r\n                    break;\r\n                case \"x\":\r\n                    rep = toHex(Number(rep));\r\n                    break;\r\n                case \"X\":\r\n                    rep = toHex(Number(rep)).toUpperCase();\r\n                    break;\r\n            }\r\n            var plusPrefix = flags.indexOf(\"+\") >= 0 && parseInt(rep) >= 0;\r\n            if (!isNaN(pad = parseInt(pad))) {\r\n                var ch = pad >= 0 && flags.indexOf(\"0\") >= 0 ? \"0\" : \" \";\r\n                rep = padLeft(rep, Math.abs(pad) - (plusPrefix ? 1 : 0), ch, pad < 0);\r\n            }\r\n            var once = prefix + (plusPrefix ? \"+\" + rep : rep);\r\n            return once.replace(/%/g, \"%%\");\r\n        });\r\n    }\r\n    function makeFn(str) {\r\n        return function (rep) {\r\n            var str2 = formatOnce(str, rep);\r\n            return fsFormatRegExp.test(str2)\r\n                ? makeFn(str2) : _cont(str2.replace(/%%/g, \"%\"));\r\n        };\r\n    }\r\n    if (args.length === 0) {\r\n        return function (cont) {\r\n            _cont = cont;\r\n            return fsFormatRegExp.test(str) ? makeFn(str) : _cont(str);\r\n        };\r\n    }\r\n    else {\r\n        for (var i = 0; i < args.length; i++) {\r\n            str = formatOnce(str, args[i]);\r\n        }\r\n        return str.replace(/%%/g, \"%\");\r\n    }\r\n}\r\nexport function format(str) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    return str.replace(formatRegExp, function (match, idx, pad, format) {\r\n        var rep = args[idx], padSymbol = \" \";\r\n        if (typeof rep === \"number\") {\r\n            switch ((format || \"\").substring(0, 1)) {\r\n                case \"f\":\r\n                case \"F\":\r\n                    rep = format.length > 1 ? rep.toFixed(format.substring(1)) : rep.toFixed(2);\r\n                    break;\r\n                case \"g\":\r\n                case \"G\":\r\n                    rep = format.length > 1 ? rep.toPrecision(format.substring(1)) : rep.toPrecision();\r\n                    break;\r\n                case \"e\":\r\n                case \"E\":\r\n                    rep = format.length > 1 ? rep.toExponential(format.substring(1)) : rep.toExponential();\r\n                    break;\r\n                case \"p\":\r\n                case \"P\":\r\n                    rep = (format.length > 1 ? (rep * 100).toFixed(format.substring(1)) : (rep * 100).toFixed(2)) + \" %\";\r\n                    break;\r\n                case \"x\":\r\n                    rep = toHex(Number(rep));\r\n                    break;\r\n                case \"X\":\r\n                    rep = toHex(Number(rep)).toUpperCase();\r\n                    break;\r\n                default:\r\n                    var m = /^(0+)(\\.0+)?$/.exec(format);\r\n                    if (m != null) {\r\n                        var decs = 0;\r\n                        if (m[2] != null)\r\n                            rep = rep.toFixed(decs = m[2].length - 1);\r\n                        pad = \",\" + (m[1].length + (decs ? decs + 1 : 0)).toString();\r\n                        padSymbol = \"0\";\r\n                    }\r\n                    else if (format) {\r\n                        rep = format;\r\n                    }\r\n            }\r\n        }\r\n        else if (rep instanceof Date) {\r\n            if (format.length === 1) {\r\n                switch (format) {\r\n                    case \"D\":\r\n                        rep = rep.toDateString();\r\n                        break;\r\n                    case \"T\":\r\n                        rep = rep.toLocaleTimeString();\r\n                        break;\r\n                    case \"d\":\r\n                        rep = rep.toLocaleDateString();\r\n                        break;\r\n                    case \"t\":\r\n                        rep = rep.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\r\n                        break;\r\n                    case \"o\":\r\n                    case \"O\":\r\n                        if (rep.kind === 2) {\r\n                            var offset = rep.getTimezoneOffset() * -1;\r\n                            rep = format(\"{0:yyyy-MM-dd}T{0:HH:mm}:{1:00.000}{2}{3:00}:{4:00}\", rep, second(rep), offset >= 0 ? \"+\" : \"-\", ~~(offset / 60), offset % 60);\r\n                        }\r\n                        else {\r\n                            rep = rep.toISOString();\r\n                        }\r\n                }\r\n            }\r\n            else {\r\n                rep = format.replace(/\\w+/g, function (match2) {\r\n                    var rep2 = match2;\r\n                    switch (match2.substring(0, 1)) {\r\n                        case \"y\":\r\n                            rep2 = match2.length < 4 ? year(rep) % 100 : year(rep);\r\n                            break;\r\n                        case \"h\":\r\n                            rep2 = rep.getHours() > 12 ? hour(rep) % 12 : hour(rep);\r\n                            break;\r\n                        case \"M\":\r\n                            rep2 = month(rep);\r\n                            break;\r\n                        case \"d\":\r\n                            rep2 = day(rep);\r\n                            break;\r\n                        case \"H\":\r\n                            rep2 = hour(rep);\r\n                            break;\r\n                        case \"m\":\r\n                            rep2 = minute(rep);\r\n                            break;\r\n                        case \"s\":\r\n                            rep2 = second(rep);\r\n                            break;\r\n                    }\r\n                    if (rep2 !== match2 && rep2 < 10 && match2.length > 1) {\r\n                        rep2 = \"0\" + rep2;\r\n                    }\r\n                    return rep2;\r\n                });\r\n            }\r\n        }\r\n        if (!isNaN(pad = parseInt((pad || \"\").substring(1)))) {\r\n            rep = padLeft(rep, Math.abs(pad), padSymbol, pad < 0);\r\n        }\r\n        return rep;\r\n    });\r\n}\r\nexport function endsWith(str, search) {\r\n    var idx = str.lastIndexOf(search);\r\n    return idx >= 0 && idx == str.length - search.length;\r\n}\r\nexport function initialize(n, f) {\r\n    if (n < 0)\r\n        throw new Error(\"String length must be non-negative\");\r\n    var xs = new Array(n);\r\n    for (var i = 0; i < n; i++)\r\n        xs[i] = f(i);\r\n    return xs.join(\"\");\r\n}\r\nexport function insert(str, startIndex, value) {\r\n    if (startIndex < 0 || startIndex > str.length) {\r\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\r\n    }\r\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\r\n}\r\nexport function isNullOrEmpty(str) {\r\n    return typeof str !== \"string\" || str.length == 0;\r\n}\r\nexport function isNullOrWhiteSpace(str) {\r\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\r\n}\r\nexport function join(delimiter, xs) {\r\n    xs = typeof xs == \"string\" ? getRestParams(arguments, 1) : xs;\r\n    return (Array.isArray(xs) ? xs : Array.from(xs)).join(delimiter);\r\n}\r\nexport function newGuid() {\r\n    var uuid = \"\";\r\n    for (var i = 0; i < 32; i++) {\r\n        var random = Math.random() * 16 | 0;\r\n        if (i === 8 || i === 12 || i === 16 || i === 20)\r\n            uuid += \"-\";\r\n        uuid += (i === 12 ? 4 : i === 16 ? random & 3 | 8 : random).toString(16);\r\n    }\r\n    return uuid;\r\n}\r\nexport function padLeft(str, len, ch, isRight) {\r\n    ch = ch || \" \";\r\n    str = String(str);\r\n    len = len - str.length;\r\n    for (var i = -1; ++i < len;)\r\n        str = isRight ? str + ch : ch + str;\r\n    return str;\r\n}\r\nexport function padRight(str, len, ch) {\r\n    return padLeft(str, len, ch, true);\r\n}\r\nexport function remove(str, startIndex, count) {\r\n    if (startIndex >= str.length) {\r\n        throw new Error(\"startIndex must be less than length of string\");\r\n    }\r\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\r\n        throw new Error(\"Index and count must refer to a location within the string.\");\r\n    }\r\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\r\n}\r\nexport function replace(str, search, replace) {\r\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\r\n}\r\nexport function replicate(n, x) {\r\n    return initialize(n, function () { return x; });\r\n}\r\nexport function split(str, splitters, count, removeEmpty) {\r\n    count = typeof count == \"number\" ? count : null;\r\n    removeEmpty = typeof removeEmpty == \"number\" ? removeEmpty : null;\r\n    if (count < 0)\r\n        throw new Error(\"Count cannot be less than zero\");\r\n    if (count === 0)\r\n        return [];\r\n    splitters = Array.isArray(splitters) ? splitters : getRestParams(arguments, 1);\r\n    splitters = splitters.map(function (x) { return escape(x); });\r\n    splitters = splitters.length > 0 ? splitters : [\" \"];\r\n    var m;\r\n    var i = 0;\r\n    var splits = [];\r\n    var reg = new RegExp(splitters.join(\"|\"), \"g\");\r\n    while ((count == null || count > 1) && (m = reg.exec(str)) !== null) {\r\n        if (!removeEmpty || (m.index - i) > 0) {\r\n            count = count != null ? count - 1 : count;\r\n            splits.push(str.substring(i, m.index));\r\n        }\r\n        i = reg.lastIndex;\r\n    }\r\n    if (!removeEmpty || (str.length - i) > 0)\r\n        splits.push(str.substring(i));\r\n    return splits;\r\n}\r\nexport function trim(str, side) {\r\n    var chars = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        chars[_i - 2] = arguments[_i];\r\n    }\r\n    if (side == \"both\" && chars.length == 0)\r\n        return str.trim();\r\n    if (side == \"start\" || side == \"both\") {\r\n        var reg = chars.length == 0 ? /^\\s+/ : new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\");\r\n        str = str.replace(reg, \"\");\r\n    }\r\n    if (side == \"end\" || side == \"both\") {\r\n        var reg = chars.length == 0 ? /\\s+$/ : new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\");\r\n        str = str.replace(reg, \"\");\r\n    }\r\n    return str;\r\n}\r\n","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Promise as _Promise } from \"./Promise\";\nimport { toJson, ofJson } from \"fable-core/Serialize\";\n\nfunction _fetch(url, init) {\n        return fetch(url, init).then(function (response) {\n                if (response.ok) {\n                        return response;\n                } else {\n                        throw new Error(String(response.status) + \" \" + response.statusText + \" for URL \" + response.url);\n                }\n        });\n}\n\nexport { _fetch as fetch };\nexport function tryFetch(url, init) {\n        return _Promise.result(_fetch(url, init));\n}\nexport function fetchAs(url, init, _genArgs) {\n        return _fetch(url, init).then(function (fetched) {\n                return fetched.text();\n        }).then(function (json) {\n                return ofJson(json, {\n                        T: _genArgs.T\n                });\n        });\n}\nexport function tryFetchAs(url, init, _genArgs) {\n        return _Promise.result(fetchAs(url, init, {\n                T: _genArgs.T\n        }));\n}\nexport function postRecord(url, record, properties) {\n        var props = Object.assign({\n                method: \"POST\",\n                headers: _defineProperty({}, \"Content-Type\", \"application/json\"),\n                body: toJson(record)\n        }, properties);\n        return _fetch(url, props);\n}\nexport function tryPostRecord(url, record, properties) {\n        return _Promise.result(postRecord(url, record, properties));\n}\nexport function patchRecord(url, record, properties) {\n        var props = Object.assign({\n                method: \"PATCH\",\n                headers: _defineProperty({}, \"Content-Type\", \"application/json\"),\n                body: toJson(record)\n        }, properties);\n        return _fetch(url, props);\n}\n//# sourceMappingURL=Fetch.js.map","var Trampoline = (function () {\r\n    function Trampoline() {\r\n        this.callCount = 0;\r\n    }\r\n    Object.defineProperty(Trampoline, \"maxTrampolineCallCount\", {\r\n        get: function () {\r\n            return 2000;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Trampoline.prototype.incrementAndCheck = function () {\r\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\r\n    };\r\n    Trampoline.prototype.hijack = function (f) {\r\n        this.callCount = 0;\r\n        setTimeout(f, 0);\r\n    };\r\n    return Trampoline;\r\n}());\r\nexport { Trampoline };\r\nexport function protectedCont(f) {\r\n    return function (ctx) {\r\n        if (ctx.cancelToken.isCancelled)\r\n            ctx.onCancel(\"cancelled\");\r\n        else if (ctx.trampoline.incrementAndCheck())\r\n            ctx.trampoline.hijack(function () {\r\n                try {\r\n                    f(ctx);\r\n                }\r\n                catch (err) {\r\n                    ctx.onError(err);\r\n                }\r\n            });\r\n        else\r\n            try {\r\n                f(ctx);\r\n            }\r\n            catch (err) {\r\n                ctx.onError(err);\r\n            }\r\n    };\r\n}\r\nexport function protectedBind(computation, binder) {\r\n    return protectedCont(function (ctx) {\r\n        computation({\r\n            onSuccess: function (x) {\r\n                try {\r\n                    binder(x)(ctx);\r\n                }\r\n                catch (ex) {\r\n                    ctx.onError(ex);\r\n                }\r\n            },\r\n            onError: ctx.onError,\r\n            onCancel: ctx.onCancel,\r\n            cancelToken: ctx.cancelToken,\r\n            trampoline: ctx.trampoline\r\n        });\r\n    });\r\n}\r\nexport function protectedReturn(value) {\r\n    return protectedCont(function (ctx) { return ctx.onSuccess(value); });\r\n}\r\nvar AsyncBuilder = (function () {\r\n    function AsyncBuilder() {\r\n    }\r\n    AsyncBuilder.prototype.Bind = function (computation, binder) {\r\n        return protectedBind(computation, binder);\r\n    };\r\n    AsyncBuilder.prototype.Combine = function (computation1, computation2) {\r\n        return this.Bind(computation1, function () { return computation2; });\r\n    };\r\n    AsyncBuilder.prototype.Delay = function (generator) {\r\n        return protectedCont(function (ctx) { return generator()(ctx); });\r\n    };\r\n    AsyncBuilder.prototype.For = function (sequence, body) {\r\n        var iter = sequence[Symbol.iterator]();\r\n        var cur = iter.next();\r\n        return this.While(function () { return !cur.done; }, this.Delay(function () {\r\n            var res = body(cur.value);\r\n            cur = iter.next();\r\n            return res;\r\n        }));\r\n    };\r\n    AsyncBuilder.prototype.Return = function (value) {\r\n        return protectedReturn(value);\r\n    };\r\n    AsyncBuilder.prototype.ReturnFrom = function (computation) {\r\n        return computation;\r\n    };\r\n    AsyncBuilder.prototype.TryFinally = function (computation, compensation) {\r\n        return protectedCont(function (ctx) {\r\n            computation({\r\n                onSuccess: function (x) {\r\n                    compensation();\r\n                    ctx.onSuccess(x);\r\n                },\r\n                onError: function (x) {\r\n                    compensation();\r\n                    ctx.onError(x);\r\n                },\r\n                onCancel: function (x) {\r\n                    compensation();\r\n                    ctx.onCancel(x);\r\n                },\r\n                cancelToken: ctx.cancelToken,\r\n                trampoline: ctx.trampoline\r\n            });\r\n        });\r\n    };\r\n    AsyncBuilder.prototype.TryWith = function (computation, catchHandler) {\r\n        return protectedCont(function (ctx) {\r\n            computation({\r\n                onSuccess: ctx.onSuccess,\r\n                onCancel: ctx.onCancel,\r\n                cancelToken: ctx.cancelToken,\r\n                trampoline: ctx.trampoline,\r\n                onError: function (ex) {\r\n                    try {\r\n                        catchHandler(ex)(ctx);\r\n                    }\r\n                    catch (ex2) {\r\n                        ctx.onError(ex2);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AsyncBuilder.prototype.Using = function (resource, binder) {\r\n        return this.TryFinally(binder(resource), function () { return resource.Dispose(); });\r\n    };\r\n    AsyncBuilder.prototype.While = function (guard, computation) {\r\n        var _this = this;\r\n        if (guard())\r\n            return this.Bind(computation, function () { return _this.While(guard, computation); });\r\n        else\r\n            return this.Return(void 0);\r\n    };\r\n    AsyncBuilder.prototype.Zero = function () {\r\n        return protectedCont(function (ctx) { return ctx.onSuccess(void 0); });\r\n    };\r\n    return AsyncBuilder;\r\n}());\r\nexport { AsyncBuilder };\r\nexport var singleton = new AsyncBuilder();\r\n","import { Trampoline } from \"./AsyncBuilder\";\r\nimport { protectedCont } from \"./AsyncBuilder\";\r\nimport { protectedBind } from \"./AsyncBuilder\";\r\nimport { protectedReturn } from \"./AsyncBuilder\";\r\nimport { choice1Of2 } from \"./Choice\";\r\nimport { choice2Of2 } from \"./Choice\";\r\nimport { map } from \"./Seq\";\r\nvar Async = (function () {\r\n    function Async() {\r\n    }\r\n    return Async;\r\n}());\r\nexport default Async;\r\nfunction emptyContinuation(x) {\r\n}\r\nexport function awaitPromise(p) {\r\n    return fromContinuations(function (conts) {\r\n        return p.then(conts[0]).catch(function (err) {\r\n            return (err == \"cancelled\" ? conts[2] : conts[1])(err);\r\n        });\r\n    });\r\n}\r\nexport function cancellationToken() {\r\n    return protectedCont(function (ctx) { return ctx.onSuccess(ctx.cancelToken); });\r\n}\r\nexport var defaultCancellationToken = { isCancelled: false };\r\nexport function catchAsync(work) {\r\n    return protectedCont(function (ctx) {\r\n        work({\r\n            onSuccess: function (x) { return ctx.onSuccess(choice1Of2(x)); },\r\n            onError: function (ex) { return ctx.onSuccess(choice2Of2(ex)); },\r\n            onCancel: ctx.onCancel,\r\n            cancelToken: ctx.cancelToken,\r\n            trampoline: ctx.trampoline\r\n        });\r\n    });\r\n}\r\nexport function fromContinuations(f) {\r\n    return protectedCont(function (ctx) { return f([ctx.onSuccess, ctx.onError, ctx.onCancel]); });\r\n}\r\nexport function ignore(computation) {\r\n    return protectedBind(computation, function (x) { return protectedReturn(void 0); });\r\n}\r\nexport function parallel(computations) {\r\n    return awaitPromise(Promise.all(map(function (w) { return startAsPromise(w); }, computations)));\r\n}\r\nexport function sleep(millisecondsDueTime) {\r\n    return protectedCont(function (ctx) {\r\n        setTimeout(function () { return ctx.cancelToken.isCancelled ? ctx.onCancel(\"cancelled\") : ctx.onSuccess(void 0); }, millisecondsDueTime);\r\n    });\r\n}\r\nexport function start(computation, cancellationToken) {\r\n    return startWithContinuations(computation, cancellationToken);\r\n}\r\nexport function startImmediate(computation, cancellationToken) {\r\n    return start(computation, cancellationToken);\r\n}\r\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\r\n    if (typeof continuation !== \"function\") {\r\n        cancelToken = continuation;\r\n        continuation = null;\r\n    }\r\n    var trampoline = new Trampoline();\r\n    computation({\r\n        onSuccess: continuation ? continuation : emptyContinuation,\r\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\r\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\r\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\r\n        trampoline: trampoline\r\n    });\r\n}\r\nexport function startAsPromise(computation, cancellationToken) {\r\n    return new Promise(function (resolve, reject) {\r\n        return startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken);\r\n    });\r\n}\r\n","#I @\"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\"\r\n#r @\"node_modules\\fable-core\\Fable.Core.dll\"\r\n#r @\"node_modules\\fable-powerpack\\Fable.PowerPack.dll\"\r\n\r\nopen Fable.Core\r\nopen Fable.Import.Browser\r\nopen Fable.PowerPack\r\nopen Fable.Core.JsInterop\r\n\r\nlet ready fn =\r\n    if (document.readyState <> \"loading\") \r\n    then \r\n        fn()\r\n    else\r\n        document.addEventListener(\"DOMContentLoaded\",\r\n                                  U2.Case1 (EventListener(fun _ -> fn())))\r\n\r\nlet JustLazy = importDefault<obj> \"./node_modules/justlazy/src/justlazy.js\"\r\n\r\nlet fetchMy url (loadme:Element) post post2 hidden =\r\n    promise {\r\n        let! response = Fetch.fetch url [] \r\n        let! body = response.text()\r\n        let mydiv = document.createElement_div()\r\n        mydiv.id <- url\r\n        mydiv.hidden <- hidden\r\n        mydiv.innerHTML <- body\r\n        loadme.appendChild(mydiv) |> ignore\r\n        post()\r\n        post2()\r\n        return ()\r\n    }\r\n\r\nlet findVisible (l : NodeListOf<Element>) =\r\n    seq { for i in 0.0 .. (l.length - 1.0) do\r\n            let el = l.item(i) :?> HTMLElement\r\n            if (not el.hidden) then yield el }\r\n\r\nlet makeVisible (l: NodeListOf<Element>) =\r\n    for i in 0.0 .. (l.length - 1.0) do\r\n        JustLazy?registerLazyLoad(l.item(i)) |> ignore\r\n\r\nlet rec fluff (el: HTMLElement) url target origin =\r\n    let curactive = document.querySelector(origin + \".active\")\r\n    try\r\n        match curactive with\r\n        | null -> ()\r\n        | _ -> curactive.classList.remove(\"active\")\r\n        let old = document.querySelectorAll(\"#\" + target + \"> div\") |> findVisible\r\n        match Seq.isEmpty old with\r\n        | true -> ()\r\n        | false -> (old |> Seq.head).hidden <- true\r\n        let newVis = document.getElementById(url)\r\n        match newVis with\r\n        | null -> printfn \"Got null with document.getElementById(%s)\" url\r\n        | _ -> newVis.hidden <- false        \r\n        if System.String.Equals(el.id,\"first\") then\r\n            fluff (document.getElementById(\"firstContentClick\")) \"firstContent\" \"LoadMe\" \"a.pageFetcher\" |> ignore\r\n        else\r\n            makeVisible(newVis.querySelectorAll(\".justlazy-spinner\"))\r\n        with\r\n            | ex -> printfn \"%s\" ex.Message\r\n    el.classList.add(\"active\")\r\n    box false\r\n\r\nlet rec toload target origin =\r\n    let loadme = document.getElementById(target)\r\n    let links = document.querySelectorAll(origin)\r\n    let l = links.length\r\n    let reparseFun =\r\n        match target with\r\n        | \"content\" -> (fun _ -> toload \"LoadMe\" \"a.pageFetcher\")\r\n        | _ -> ignore\r\n    for i in 0.0 .. (l-1.0) do\r\n        let el = links.item(i) :?> HTMLElement\r\n        let url = el.getAttribute(\"href\")\r\n        let hidden = not (System.String.Equals(url,\"Content.html\"))\r\n        let postFirstContent = match url with\r\n                                | \"Content.html\" ->  (fun _ -> makeVisible(document.getElementById(\"firstContent\").querySelectorAll(\".justlazy-spinner\")))\r\n                                | _ -> ignore\r\n        fetchMy url loadme reparseFun postFirstContent hidden |> Async.AwaitPromise |> Async.StartImmediate\r\n        el.onclick <- (fun _ -> fluff el url target origin)\r\n\r\nlet init() =\r\n    toload \"content\" \"nav a\"\r\n\r\nready init\r\n","/**\r\n * justlazy 1.7.0-SNAPSHOT\r\n *\r\n * Repo: https://github.com/fhopeman/justlazy\r\n * Demo: http://fhopeman.github.io/justlazy\r\n */\r\n(function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define([], factory);\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory();\r\n    } else {\r\n        root.Justlazy = factory();\r\n    }\r\n}(this, function() {\r\n    \"use strict\";\r\n\r\n    var _createImage = function(imgPlaceholder, imgAttributes, options) {\r\n        var img = document.createElement(\"img\");\r\n        var progressive = options.progressive || false;\r\n\r\n        img.onload = function() {\r\n            if (!!options.onloadCallback) {\r\n                options.onloadCallback.call(img);\r\n            }\r\n            if (!progressive) {\r\n                _replacePlaceholderWithImage(imgPlaceholder, img, options.onreplaceCallback);\r\n            }\r\n        };\r\n\r\n        img.onerror = function() {\r\n            if (!!options.onerrorCallback) {\r\n                options.onerrorCallback.call(img);\r\n            }\r\n            if (!progressive) {\r\n                _replacePlaceholderWithImage(imgPlaceholder, img, options.onreplaceCallback);\r\n            }\r\n        };\r\n\r\n        if (!!imgAttributes.title) {\r\n            img.title = imgAttributes.title;\r\n        }\r\n        if (!!imgAttributes.srcset) {\r\n            img.setAttribute(\"srcset\", imgAttributes.srcset);\r\n        }\r\n\r\n        img.alt = imgAttributes.alt;\r\n        img.src = imgAttributes.src;\r\n\r\n        if (progressive) {\r\n            _replacePlaceholderWithImage(imgPlaceholder, img, options.onreplaceCallback);\r\n        }\r\n    };\r\n\r\n    var _replacePlaceholderWithImage = function(imgPlaceholder, img, onreplaceCallback) {\r\n        var parentNode = imgPlaceholder.parentNode;\r\n        if (!!parentNode) {\r\n            parentNode.replaceChild(img, imgPlaceholder);\r\n            if (!!onreplaceCallback) {\r\n                onreplaceCallback.call(img);\r\n            }\r\n        }\r\n    };\r\n\r\n    var _resolveImageAttributes = function(imgPlaceholder) {\r\n        return {\r\n            src: imgPlaceholder.getAttribute(\"data-src\"),\r\n            alt: imgPlaceholder.getAttribute(\"data-alt\"),\r\n            title: imgPlaceholder.getAttribute(\"data-title\"),\r\n            srcset: imgPlaceholder.getAttribute(\"data-srcset\")\r\n        };\r\n    };\r\n\r\n    var _validateOptions = function(options) {\r\n        return options || {};\r\n    };\r\n\r\n    var _isVisible = function(placeholder, optionalThreshold) {\r\n        var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\r\n        var threshold = optionalThreshold || 0;\r\n\r\n        return placeholder.getBoundingClientRect().top - windowInnerHeight <= threshold;\r\n    };\r\n\r\n    var _loadImgIfVisible = function(imgPlaceholder, options) {\r\n        var scrollEventCallback = function(e) {\r\n            if (_isVisible(imgPlaceholder, options.threshold)) {\r\n                lazyLoad(imgPlaceholder, options);\r\n\r\n                if (window.removeEventListener) {\r\n                    window.removeEventListener(e.type, scrollEventCallback, false);\r\n                } else {\r\n                    window.detachEvent(\"on\" + e.type, scrollEventCallback);\r\n                }\r\n            }\r\n        };\r\n\r\n        return scrollEventCallback;\r\n    };\r\n\r\n    /**\r\n     * Lazy loads image with img tag.\r\n     *\r\n     * @param {Object} imgPlaceholder The placeholder is a html node of any type (e.g. a span element).\r\n     *                                The node has to provide the data element data-src and data-alt.\r\n     *                                All other attributes are optional.\r\n     * @param {Object} options Optional object with following attributes:\r\n     *                           - onloadCallback:\r\n     *                                 Optional callback which is invoked after the image is loaded\r\n     *                                 successfully but before the actual replacement.\r\n     *                           - onerrorCallback:\r\n     *                                 Optional error handler which is invoked before the actual\r\n     *                                 replacement if the image could not be loaded.\r\n     *                           - onreplaceCallback\r\n     *                                 Optional callback which is invoked directly after the\r\n     *                                 replacement of the placeholder.\r\n     */\r\n    var lazyLoad = function(imgPlaceholder, options) {\r\n        var imgAttributes = _resolveImageAttributes(imgPlaceholder);\r\n        var validatedOptions = _validateOptions(options);\r\n\r\n        if (!!imgAttributes.src && (!!imgAttributes.alt || imgAttributes.alt === \"\")) {\r\n            _createImage(\r\n                imgPlaceholder,\r\n                imgAttributes,\r\n                validatedOptions\r\n            );\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Registers the lazy loading event. If the placeholder becomes visible, the image\r\n     * will be loaded automatically.\r\n     *\r\n     * @param {Object} imgPlaceholder The placeholder is a html node of any type (e.g. a span element).\r\n     *                                The node has to provide the data element data-src and data-alt.\r\n     *                                All other attributes are optional.\r\n     * @param {Object} options Optional object of options.\r\n     */\r\n    var registerLazyLoad = function(imgPlaceholder, options) {\r\n        var validatedOptions = _validateOptions(options);\r\n        if (_isVisible(imgPlaceholder, validatedOptions.threshold)) {\r\n            lazyLoad(imgPlaceholder, options);\r\n        } else {\r\n            var loadImgIfVisible = _loadImgIfVisible(imgPlaceholder, validatedOptions);\r\n            if (window.addEventListener) {\r\n                window.addEventListener(\"scroll\", loadImgIfVisible, false);\r\n            } else {\r\n                window.attachEvent(\"onscroll\", loadImgIfVisible);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Registers the lazy loading by the defined class of the placeholder(s). If the\r\n     * placeholders become visible, the images will be loaded automatically.\r\n     *\r\n     * @param imgPlaceholderClass Class of the placeholder.\r\n     * @param {Object} options Optional object of options.\r\n     */\r\n    var registerLazyLoadByClass = function(imgPlaceholderClass, options) {\r\n        var placeholders = document.querySelectorAll(\".\" + imgPlaceholderClass);\r\n        for (var i = 0; i < placeholders.length; ++i) {\r\n            this.registerLazyLoad(placeholders[i], options);\r\n        }\r\n    };\r\n\r\n    return {\r\n        lazyLoad: lazyLoad,\r\n        registerLazyLoad: registerLazyLoad,\r\n        registerLazyLoadByClass: registerLazyLoadByClass\r\n    };\r\n}));","import FSymbol from \"./Symbol\";\r\nimport { equalsUnions } from \"./Util\";\r\nimport { compareUnions } from \"./Util\";\r\nexport function choice1Of2(v) {\r\n    return new Choice(\"Choice1Of2\", [v]);\r\n}\r\nexport function choice2Of2(v) {\r\n    return new Choice(\"Choice2Of2\", [v]);\r\n}\r\nvar Choice = (function () {\r\n    function Choice(t, d) {\r\n        this.Case = t;\r\n        this.Fields = d;\r\n    }\r\n    Object.defineProperty(Choice.prototype, \"valueIfChoice1\", {\r\n        get: function () {\r\n            return this.Case === \"Choice1Of2\" ? this.Fields[0] : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Choice.prototype, \"valueIfChoice2\", {\r\n        get: function () {\r\n            return this.Case === \"Choice2Of2\" ? this.Fields[0] : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Choice.prototype.Equals = function (other) {\r\n        return equalsUnions(this, other);\r\n    };\r\n    Choice.prototype.CompareTo = function (other) {\r\n        return compareUnions(this, other);\r\n    };\r\n    Choice.prototype[FSymbol.reflection] = function () {\r\n        return {\r\n            type: \"Microsoft.FSharp.Core.FSharpChoice\",\r\n            interfaces: [\"FSharpUnion\", \"System.IEquatable\", \"System.IComparable\"]\r\n        };\r\n    };\r\n    return Choice;\r\n}());\r\nexport default Choice;\r\n"]}